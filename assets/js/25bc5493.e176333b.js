"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9916],{3905:function(e,a,t){t.d(a,{Zo:function(){return c},kt:function(){return h}});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=n.createContext({}),p=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},c=function(e){var a=p(e.components);return n.createElement(o.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),h=r,d=u["".concat(o,".").concat(h)]||u[h]||m[h]||l;return t?n.createElement(d,i(i({ref:a},c),{},{components:t})):n.createElement(d,i({ref:a},c))}));function h(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=u;var s={};for(var o in a)hasOwnProperty.call(a,o)&&(s[o]=a[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},58215:function(e,a,t){t.d(a,{Z:function(){return r}});var n=t(67294);function r(e){var a=e.children,t=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:t,className:r},a)}},9877:function(e,a,t){t.d(a,{Z:function(){return c}});var n=t(83117),r=t(67294),l=t(72389),i=t(89575),s=t(86010),o="tabItem_LplD";function p(e){var a,t,l,p=e.lazy,c=e.block,m=e.defaultValue,u=e.values,h=e.groupId,d=e.className,b=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=u?u:b.map((function(e){var a=e.props;return{value:a.value,label:a.label,attributes:a.attributes}})),g=(0,i.lx)(k,(function(e,a){return e.value===a.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var f=null===m?m:null!=(a=null!=m?m:null==(t=b.find((function(e){return e.props.default})))?void 0:t.props.value)?a:null==(l=b[0])?void 0:l.props.value;if(null!==f&&!k.some((function(e){return e.value===f})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+f+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=(0,i.UB)(),y=v.tabGroupChoices,N=v.setTabGroupChoices,T=(0,r.useState)(f),w=T[0],q=T[1],_=[],x=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var C=y[h];null!=C&&C!==w&&k.some((function(e){return e.value===C}))&&q(C)}var I=function(e){var a=e.currentTarget,t=_.indexOf(a),n=k[t].value;n!==w&&(x(a),q(n),null!=h&&N(h,n))},S=function(e){var a,t=null;switch(e.key){case"ArrowRight":var n=_.indexOf(e.currentTarget)+1;t=_[n]||_[0];break;case"ArrowLeft":var r=_.indexOf(e.currentTarget)-1;t=_[r]||_[_.length-1]}null==(a=t)||a.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":c},d)},k.map((function(e){var a=e.value,t=e.label,l=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===a?0:-1,"aria-selected":w===a,key:a,ref:function(e){return _.push(e)},onKeyDown:S,onFocus:I,onClick:I},l,{className:(0,s.Z)("tabs__item",o,null==l?void 0:l.className,{"tabs__item--active":w===a})}),null!=t?t:a)}))),p?(0,r.cloneElement)(b.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},b.map((function(e,a){return(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==w})}))))}function c(e){var a=(0,l.Z)();return r.createElement(p,(0,n.Z)({key:String(a)},e))}},69780:function(e,a,t){t.r(a),t.d(a,{assets:function(){return u},contentTitle:function(){return c},default:function(){return b},frontMatter:function(){return p},metadata:function(){return m},toc:function(){return h}});var n=t(83117),r=t(80102),l=(t(67294),t(3905)),i=t(9877),s=t(58215),o=["components"],p={sidebar_label:"Using an existing database",sidebar_position:6,description:"Set up a Hasura GraphQL schema with an existing database",keywords:["hasura","docs","schema","existing database"]},c="Setting up a GraphQL schema using an existing MS SQL Server database",m={unversionedId:"graphql/core/databases/ms-sql-server/schema/using-existing-database",id:"graphql/core/databases/ms-sql-server/schema/using-existing-database",title:"Setting up a GraphQL schema using an existing MS SQL Server database",description:"Set up a Hasura GraphQL schema with an existing database",source:"@site/docs/graphql/core/databases/ms-sql-server/schema/using-existing-database.mdx",sourceDirName:"graphql/core/databases/ms-sql-server/schema",slug:"/graphql/core/databases/ms-sql-server/schema/using-existing-database",permalink:"/graphql-engine/latest/graphql/core/databases/ms-sql-server/schema/using-existing-database",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/databases/ms-sql-server/schema/using-existing-database.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_label:"Using an existing database",sidebar_position:6,description:"Set up a Hasura GraphQL schema with an existing database",keywords:["hasura","docs","schema","existing database"]},sidebar:"docsSidebar",previous:{title:"Customise auto-generated fields",permalink:"/graphql-engine/latest/graphql/core/databases/ms-sql-server/schema/custom-field-names"},next:{title:"MS SQL Server: Queries",permalink:"/graphql-engine/latest/graphql/core/databases/ms-sql-server/queries/index"}},u={},h=[{value:"Introduction",id:"introduction",level:2},{value:"Step 1: Track tables/views",id:"step-1-track-tablesviews",level:2},{value:"To track a table or a view",id:"to-track-a-table-or-a-view",level:3},{value:"To track all tables and views present in the database",id:"to-track-all-tables-and-views-present-in-the-database",level:3},{value:"Step 2: Track foreign-keys",id:"step-2-track-foreign-keys",level:2},{value:"To track a foreign-key between two tables in the database",id:"to-track-a-foreign-key-between-two-tables-in-the-database",level:3},{value:"To track all the foreign-keys of all tables in the database",id:"to-track-all-the-foreign-keys-of-all-tables-in-the-database",level:3}],d={toc:h};function b(e){var a=e.components,t=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"setting-up-a-graphql-schema-using-an-existing-ms-sql-server-database"},"Setting up a GraphQL schema using an existing MS SQL Server database"),(0,l.kt)("h2",{id:"introduction"},"Introduction"),(0,l.kt)("p",null,"When you have an existing database with a schema already present, you\ndon't need to create tables or views or run DDL queries through the\nHasura console."),(0,l.kt)("p",null,'All you need to do is indicate to Hasura GraphQL engine which tables and\nviews you want to expose over GraphQL and how they are connected to each\nother so that you can query them as a "graph".'),(0,l.kt)("h2",{id:"step-1-track-tablesviews"},"Step 1: Track tables/views"),(0,l.kt)("p",null,"Tracking a table or a view means telling Hasura GraphQL engine that you\nwant to expose that table/view over GraphQL."),(0,l.kt)("h3",{id:"to-track-a-table-or-a-view"},"To track a table or a view"),(0,l.kt)(i.Z,{className:"api-tabs",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"console",label:"Console",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Head to the ",(0,l.kt)("inlineCode",{parentName:"li"},"Data -> Schema")," section of the console."),(0,l.kt)("li",{parentName:"ol"},"Under the heading ",(0,l.kt)("inlineCode",{parentName:"li"},"Untracked Tables/Views"),", click on the ",(0,l.kt)("inlineCode",{parentName:"li"},"Track"),"\nbutton next to the table/view name."))),(0,l.kt)(s.Z,{value:"cli",label:"CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"To track the table and expose it over the GraphQL API, add it to the\n",(0,l.kt)("inlineCode",{parentName:"p"},"tables.yaml")," file in the ",(0,l.kt)("inlineCode",{parentName:"p"},"metadata")," directory as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{1-3}","{1-3}":!0},"- table:\n    schema: dbo\n    name: <table name>\n")),(0,l.kt)("p",null,"Apply the metadata by running:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"hasura metadata apply\n"))),(0,l.kt)(s.Z,{value:"api",label:"API",mdxType:"TabItem"},(0,l.kt)("p",null,"To track a table and expose it over the GraphQL API, use the\n",(0,l.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/metadata-api/table-view#mssql-track-table"},"mssql_track_table metadata API"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n   "type": "mssql_track_table",\n   "args": {\n      "source": "<db_name>",\n      "schema": "dbo",\n      "name": "<table name>"\n   }\n}\n')))),(0,l.kt)("h3",{id:"to-track-all-tables-and-views-present-in-the-database"},"To track all tables and views present in the database"),(0,l.kt)(i.Z,{className:"api-tabs",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"console",label:"Console",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Head to the ",(0,l.kt)("inlineCode",{parentName:"li"},"Data -> Schema")," section of the console."),(0,l.kt)("li",{parentName:"ol"},"Under the heading ",(0,l.kt)("inlineCode",{parentName:"li"},"Untracked Tables/Views"),", click the ",(0,l.kt)("inlineCode",{parentName:"li"},"Track All"),"\nbutton."))),(0,l.kt)(s.Z,{value:"cli",label:"CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"To track all tables and expose them over the GraphQL API, add them to\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"tables.yaml")," file in the ",(0,l.kt)("inlineCode",{parentName:"p"},"metadata")," directory as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{1-6}","{1-6}":!0},"- table:\n    schema: dbo\n    name: <table-name-1>\n- table:\n    schema: dbo\n    name: <table-name-2>\n")),(0,l.kt)("p",null,"To automate this, you could add the tables in a loop through a script."),(0,l.kt)("p",null,"Apply the metadata by running:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"hasura metadata apply\n"))),(0,l.kt)(s.Z,{value:"api",label:"API",mdxType:"TabItem"},(0,l.kt)("p",null,"To track all tables and expose them over the GraphQL API, use the\n",(0,l.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/metadata-api/table-view#mssql-track-table"},"mssql_track_table metadata API"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n  "type": "bulk",\n  "args": [\n    {\n       "type": "mssql_track_table",\n       "args": {\n          "source": "<db_name>",\n          "schema": "dbo",\n          "name": "<table-name-1>"\n       }\n    },\n    {\n       "type": "mssql_track_table",\n       "args": {\n          "source": "<db_name>",\n          "schema": "dbo",\n          "name": "<table-name-2>"\n       }\n    }\n  ]\n}\n')),(0,l.kt)("p",null,"To automate this, you could add the ",(0,l.kt)("inlineCode",{parentName:"p"},"mssql_track_table")," requests to the\n",(0,l.kt)("inlineCode",{parentName:"p"},"bulk")," request in a loop through a script."))),(0,l.kt)("h2",{id:"step-2-track-foreign-keys"},"Step 2: Track foreign-keys"),(0,l.kt)("p",null,"Tracking a foreign-key means creating a\n",(0,l.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/databases/ms-sql-server/schema/table-relationships/index"},"relationship")," between the tables\ninvolved in the foreign-key."),(0,l.kt)("h3",{id:"to-track-a-foreign-key-between-two-tables-in-the-database"},"To track a foreign-key between two tables in the database"),(0,l.kt)(i.Z,{className:"api-tabs",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"console",label:"Console",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Head to the ",(0,l.kt)("inlineCode",{parentName:"li"},"Data -> Schema")," section of the console."),(0,l.kt)("li",{parentName:"ol"},"Click on a table involved in the foreign-key and head to the\n",(0,l.kt)("inlineCode",{parentName:"li"},"Relationships")," tab."),(0,l.kt)("li",{parentName:"ol"},"You should see a suggested relationship based on the foreign-key.\nClick ",(0,l.kt)("inlineCode",{parentName:"li"},"Add"),", give a name to your relationship (this will be the name\nof the ",(0,l.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/databases/ms-sql-server/queries/nested-object-queries"},"nested object")," in the\nGraphQL query), and hit ",(0,l.kt)("inlineCode",{parentName:"li"},"Save")," to create the relationship."),(0,l.kt)("li",{parentName:"ol"},"Repeat with the other table involved in the foreign-key."))),(0,l.kt)(s.Z,{value:"cli",label:"CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"To track a relationship and expose it over the GraphQL API, add it to\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"tables.yaml")," file in the ",(0,l.kt)("inlineCode",{parentName:"p"},"metadata")," directory as follows:"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Object relationship")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{4-7}","{4-7}":!0},"- table:\n    schema: dbo\n    name: <table name>\n  object_relationships:\n    - name: <relationship name>\n      using:\n        foreign_key_constraint_on: <reference column>\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Array relationship")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{4-11}","{4-11}":!0},"- table:\n      schema: dbo\n      name: <table name>\n   array_relationships:\n   - name: <relationship name>\n      using:\n      foreign_key_constraint_on:\n         column: <reference column>\n         table:\n            schema: dbo\n            name: <reference table name>\n")),(0,l.kt)("p",null,"Apply the metadata by running:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"hasura metadata apply\n"))),(0,l.kt)(s.Z,{value:"api",label:"API",mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Object relationship")),(0,l.kt)("p",null,"You can create an object relationship by using the\n",(0,l.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/metadata-api/relationship#mssql-create-object-relationship"},"mssql_create_object_relationship")," metadata API:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n   "type": "mssql_create_object_relationship",\n   "args": {\n      "source": "<db_name>",\n      "table": "<table name>",\n      "name": "<relationship name>",\n      "using": {\n         "foreign_key_constraint_on": "<reference column>"\n      }\n   }\n}\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Array relationship")),(0,l.kt)("p",null,"You can create an array relationship by using the\n",(0,l.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/metadata-api/relationship#mssql-create-array-relationship"},"mssql_create_array_relationship")," metadata API:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n   "type": "mssql_create_array_relationship",\n   "args": {\n      "source": "<db_name>",\n      "table": "<table name>",\n      "name": "<relationship name>",\n      "using": {\n         "foreign_key_constraint_on" : {\n            "table" : "<reference table name>",\n            "column" : "<reference column>"\n         }\n      }\n   }\n}\n')))),(0,l.kt)("h3",{id:"to-track-all-the-foreign-keys-of-all-tables-in-the-database"},"To track all the foreign-keys of all tables in the database"),(0,l.kt)(i.Z,{className:"api-tabs",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"console",label:"Console",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Head to the ",(0,l.kt)("inlineCode",{parentName:"li"},"Data -> Schema")," section of the console."),(0,l.kt)("li",{parentName:"ol"},"Under the heading ",(0,l.kt)("inlineCode",{parentName:"li"},"Untracked foreign-key relations"),", click the\n",(0,l.kt)("inlineCode",{parentName:"li"},"Track All")," button to automatically create relationships based on\nthe foreign-keys."))),(0,l.kt)(s.Z,{value:"cli",label:"CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"To track all relationships and expose them over the GraphQL API, add\nthem to the ",(0,l.kt)("inlineCode",{parentName:"p"},"tables.yaml")," file in the ",(0,l.kt)("inlineCode",{parentName:"p"},"metadata")," directory as follows:"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Object relationship")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{4-7}","{4-7}":!0},"- table:\n    schema: dbo\n    name: <table name>\n  object_relationships:\n    - name: <relationship name>\n      using:\n        foreign_key_constraint_on: <reference column>\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Array relationship")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{4-11}","{4-11}":!0},"- table:\n    schema: dbo\n    name: <table name>\n  array_relationships:\n    - name: <relationship name>\n      using:\n        foreign_key_constraint_on:\n          column: <reference column>\n          table:\n            schema: dbo\n            name: <reference table name>\n")),(0,l.kt)("p",null,"To automate this, you could add the relationships in a loop through a\nscript."),(0,l.kt)("p",null,"Apply the metadata by running:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"hasura metadata apply\n"))),(0,l.kt)(s.Z,{value:"api",label:"API",mdxType:"TabItem"},(0,l.kt)("p",null,"You can create multiple relationships by using the\n",(0,l.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/metadata-api/relationship#mssql-create-object-relationship"},"mssql_create_object_relationship")," and the\n",(0,l.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/metadata-api/relationship#mssql-create-array-relationship"},"mssql_create_array_relationship")," metadata APIs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n  "type": "bulk",\n  "args": [\n    {\n      "type": "mssql_create_object_relationship",\n      "args": {\n        "source": "<db_name>",\n        "table": "<table name>",\n        "name": "<relationship name>",\n        "using": {\n          "foreign_key_constraint_on": "<reference column>"\n        }\n      }\n    },\n    {\n      "type": "mssql_create_array_relationship",\n      "args": {\n        "source": "<db_name>",\n        "table": "<table name>",\n        "name": "<relationship name>",\n        "using": {\n          "foreign_key_constraint_on" : {\n            "table" : "<reference table name>",\n            "column" : "<reference column>"\n          }\n        }\n      }\n    }\n  ]\n}\n')),(0,l.kt)("p",null,"To automate this, you could add the create relationships requests to the\n",(0,l.kt)("inlineCode",{parentName:"p"},"bulk")," request in a loop through a script."))),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Relationship nomenclature")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"In this case, Hasura GraphQL engine will ",(0,l.kt)("strong",{parentName:"p"},"automatically generate\nrelationship names")," (the names of the\n",(0,l.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/databases/ms-sql-server/queries/nested-object-queries"},"nested objects")," in the GraphQL\nquery) based on the table names and the foreign-key names."),(0,l.kt)("p",{parentName:"div"},"The name is generated in the following format:"),(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"For object relationships: ",(0,l.kt)("inlineCode",{parentName:"li"},"singular of foreignTableName")),(0,l.kt)("li",{parentName:"ul"},"For array relationships: ",(0,l.kt)("inlineCode",{parentName:"li"},"plural of foreignTableName"))),(0,l.kt)("p",{parentName:"div"},"For example, for the foreign-key ",(0,l.kt)("inlineCode",{parentName:"p"},"article.author_id -> author.id"),", the\nrelationship names will be ",(0,l.kt)("inlineCode",{parentName:"p"},"author")," for ",(0,l.kt)("inlineCode",{parentName:"p"},"article")," table and ",(0,l.kt)("inlineCode",{parentName:"p"},"articles"),"\nfor ",(0,l.kt)("inlineCode",{parentName:"p"},"author")," table."),(0,l.kt)("p",{parentName:"div"},"In case a field with the generated name already exists, a new name will\nbe generated of the form:\n",(0,l.kt)("inlineCode",{parentName:"p"},"camel case of (singular/plural of foreignTableName + _by_ + foreignKeyColumnName)")),(0,l.kt)("p",{parentName:"div"},"Note that, ",(0,l.kt)("strong",{parentName:"p"},"this is just an arbitrary naming convention")," chosen by\nHasura to ensure the generation of unique relationship names. You can\nchoose to rename your relationships to anything you wish. You can\n",(0,l.kt)("strong",{parentName:"p"},"change the relationship names")," with a name of your choice as shown in\n",(0,l.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/databases/ms-sql-server/schema/table-relationships/rename"},"MS SQL Server: Renaming relationships"),"."))))}b.isMDXComponent=!0}}]);