"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5552],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),l=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return a.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(r),m=n,f=d["".concat(u,".").concat(m)]||d[m]||c[m]||o;return r?a.createElement(f,s(s({ref:t},p),{},{components:r})):a.createElement(f,s({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},31499:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c}});var a=r(83117),n=r(80102),o=(r(67294),r(3905)),s=["components"],i={description:"Manage mutations on Postgres with Hasura",keywords:["hasura","docs","postgres","mutation"],slug:"index"},u="Postgres: Mutations",l={unversionedId:"graphql/core/databases/postgres/mutations/index",id:"graphql/core/databases/postgres/mutations/index",title:"Postgres: Mutations",description:"Manage mutations on Postgres with Hasura",source:"@site/docs/graphql/core/databases/postgres/mutations/index.mdx",sourceDirName:"graphql/core/databases/postgres/mutations",slug:"/graphql/core/databases/postgres/mutations/index",permalink:"/docs/latest/graphql/core/databases/postgres/mutations/index",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/databases/postgres/mutations/index.mdx",tags:[],version:"current",frontMatter:{description:"Manage mutations on Postgres with Hasura",keywords:["hasura","docs","postgres","mutation"],slug:"index"},sidebar:"docsSidebar",previous:{title:"Query performance",permalink:"/docs/latest/graphql/core/databases/postgres/queries/performance"},next:{title:"Insert",permalink:"/docs/latest/graphql/core/databases/postgres/mutations/insert"}},p={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Types of mutation requests",id:"types-of-mutation-requests",level:2}],d={toc:c};function m(e){var t=e.components,r=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"postgres-mutations"},"Postgres: Mutations"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"GraphQL mutations are used to modify data on the server (i.e. write,\nupdate or delete data)."),(0,o.kt)("p",null,"Hasura GraphQL engine auto-generates mutations as part of the GraphQL\nschema from your Postgres schema model."),(0,o.kt)("p",null,"Data of all tables in the database tracked by the GraphQL engine can be\nmodified over the GraphQL endpoint. If you have a tracked table in your\ndatabase, its insert/update/delete mutation fields are added as nested\nfields under the ",(0,o.kt)("inlineCode",{parentName:"p"},"mutation_root")," root level type."),(0,o.kt)("h2",{id:"types-of-mutation-requests"},"Types of mutation requests"),(0,o.kt)("p",null,"The following types of mutation requests are possible:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/latest/graphql/core/databases/postgres/mutations/insert"},"Insert")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/latest/graphql/core/databases/postgres/mutations/upsert"},"Upsert")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/latest/graphql/core/databases/postgres/mutations/update"},"Update")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/latest/graphql/core/databases/postgres/mutations/delete"},"Delete")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/latest/graphql/core/databases/postgres/mutations/multiple-mutations"},"Multiple mutations in a request"))))}m.isMDXComponent=!0}}]);