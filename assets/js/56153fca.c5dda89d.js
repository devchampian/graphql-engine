"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5522],{3905:function(e,a,t){t.d(a,{Zo:function(){return u},kt:function(){return m}});var r=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var p=r.createContext({}),l=function(e){var a=r.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},u=function(e){var a=l(e.components);return r.createElement(p.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},d=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(t),m=n,h=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return t?r.createElement(h,i(i({ref:a},u),{},{components:t})):r.createElement(h,i({ref:a},u))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var p in a)hasOwnProperty.call(a,p)&&(s[p]=a[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3002:function(e,a,t){t.r(a),t.d(a,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c}});var r=t(83117),n=t(80102),o=(t(67294),t(3905)),i=["components"],s={sidebar_label:"hasura metadata export",sidebar_position:16,description:"Export Hasura GraphQL engine metadata from the database using the Hasura CLI",keywords:["hasura","docs","CLI","hasura metadata export"]},p="Hasura CLI: hasura metadata export",l={unversionedId:"graphql/core/hasura-cli/hasura_metadata_export",id:"graphql/core/hasura-cli/hasura_metadata_export",title:"Hasura CLI: hasura metadata export",description:"Export Hasura GraphQL engine metadata from the database using the Hasura CLI",source:"@site/docs/graphql/core/hasura-cli/hasura_metadata_export.mdx",sourceDirName:"graphql/core/hasura-cli",slug:"/graphql/core/hasura-cli/hasura_metadata_export",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_metadata_export",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/hasura-cli/hasura_metadata_export.mdx",tags:[],version:"current",sidebarPosition:16,frontMatter:{sidebar_label:"hasura metadata export",sidebar_position:16,description:"Export Hasura GraphQL engine metadata from the database using the Hasura CLI",keywords:["hasura","docs","CLI","hasura metadata export"]},sidebar:"docsSidebar",previous:{title:"hasura metadata diff",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_metadata_diff"},next:{title:"hasura metadata inconsistency",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_metadata_inconsistency"}},u={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Examples",id:"examples",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],d={toc:c};function m(e){var a=e.components,t=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"hasura-cli-hasura-metadata-export"},"Hasura CLI: hasura metadata export"),(0,o.kt)("p",null,"Export Hasura GraphQL engine metadata from the database."),(0,o.kt)("h2",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"Export Hasura metadata and save it in the ",(0,o.kt)("inlineCode",{parentName:"p"},"/metadata")," directory. The\noutput is a bunch of yaml files which captures all the metadata required\nby the GraphQL engine. This includes info about tables that are tracked,\npermission rules, relationships and event triggers that are defined on\nthose tables."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"hasura metadata export [flags]\n")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'# Export metadata and save it in migrations/metadata.yaml file:\nhasura metadata export\n\n# Use with admin secret:\nhasura metadata export --admin-secret "<admin-secret>"\n\n# Export metadata to another instance specified by the flag:\nhasura metadata export --endpoint "<endpoint>"\n')),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"-h, --help            help for export\n-o, --output string   write metadata to standard output in given format for exported metadata (note: this won't modify project metadata) Allowed values: json, yaml\")\n")),(0,o.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'--admin-secret string            admin secret for Hasura GraphQL engine (env "HASURA_GRAPHQL_ADMIN_SECRET")\n--certificate-authority string   path to a cert file for the certificate authority (env "HASURA_GRAPHQL_CERTIFICATE_AUTHORITY")\n--endpoint string                http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")\n--envfile string                 .env filename to load ENV vars from (default ".env")\n--insecure-skip-tls-verify       skip TLS verification and disable cert checking (default: false) (env "HASURA_GRAPHQL_INSECURE_SKIP_TLS_VERIFY")\n--log-level string               log level (DEBUG, INFO, WARN, ERROR, FATAL) (default "INFO")\n--no-color                       do not colorize output (default: false)\n--project string                 directory where commands are executed (default: current dir)\n--skip-update-check              skip automatic update check on command execution\n')),(0,o.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_metadata"},"hasura metadata")," - Manage Hasura GraphQL engine metadata saved in the database")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Auto generated by spf13/cobra")))}m.isMDXComponent=!0}}]);