"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[791],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return u}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=a.createContext({}),p=function(e){var t=a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(r),u=n,h=m["".concat(d,".").concat(u)]||m[u]||c[u]||i;return r?a.createElement(h,o(o({ref:t},s),{},{components:r})):a.createElement(h,o({ref:t},s))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},88801:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return d},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var a=r(83117),n=r(80102),i=(r(67294),r(3905)),o=["components"],l={sidebar_label:"Inherited Roles",sidebar_position:6,description:"Manage inherited roles with the Hasura metadata API",keywords:["hasura","docs","metadata API","API reference","inherited roles","multiple roles"]},d="Metadata API Reference: Inherited Roles",p={unversionedId:"graphql/core/api-reference/metadata-api/inherited-roles",id:"graphql/core/api-reference/metadata-api/inherited-roles",title:"Metadata API Reference: Inherited Roles",description:"Manage inherited roles with the Hasura metadata API",source:"@site/docs/graphql/core/api-reference/metadata-api/inherited-roles.mdx",sourceDirName:"graphql/core/api-reference/metadata-api",slug:"/graphql/core/api-reference/metadata-api/inherited-roles",permalink:"/docs/latest/graphql/core/api-reference/metadata-api/inherited-roles",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/api-reference/metadata-api/inherited-roles.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_label:"Inherited Roles",sidebar_position:6,description:"Manage inherited roles with the Hasura metadata API",keywords:["hasura","docs","metadata API","API reference","inherited roles","multiple roles"]},sidebar:"docsSidebar",previous:{title:"Permissions",permalink:"/docs/latest/graphql/core/api-reference/metadata-api/permission"},next:{title:"Remote Schema Permissions",permalink:"/docs/latest/graphql/core/api-reference/metadata-api/remote-schema-permissions"}},s={},c=[{value:"Introduction",id:"introduction",level:2},{value:"add_inherited_role",id:"metadata-add-inherited-role",level:2},{value:"Args syntax",id:"metadata-add-inherited-role-syntax",level:3},{value:"drop_inherited_role",id:"metadata-drop-inherited-role",level:2},{value:"Args syntax",id:"metadata-drop-inherited-role-syntax",level:3}],m={toc:c};function u(e){var t=e.components,r=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"metadata-api-reference-inherited-roles"},"Metadata API Reference: Inherited Roles"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"Inherited roles allow you to create a role which inherits permissions\nfrom other existing roles."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Supported from")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The metadata API is supported for versions ",(0,i.kt)("inlineCode",{parentName:"p"},"v2.0.0")," and above and\nreplaces the older ",(0,i.kt)("a",{parentName:"p",href:"/docs/latest/graphql/core/api-reference/schema-metadata-api/index"},"schema/metadata API"),"."))),(0,i.kt)("h2",{id:"metadata-add-inherited-role"},"add_inherited_role"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"add_inherited_role")," is used to create a new inherited role with other existing roles."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n   "type":"add_inherited_role",\n   "args":{\n      "role_name": "sample_inherited_role",\n      "role_set": [\n         "role1",\n         "role2"\n      ]\n   }\n}\n')),(0,i.kt)("h3",{id:"metadata-add-inherited-role-syntax"},"Args syntax"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Key"),(0,i.kt)("th",{parentName:"tr",align:null},"Required"),(0,i.kt)("th",{parentName:"tr",align:null},"Schema"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"role_name"),(0,i.kt)("td",{parentName:"tr",align:null},"true"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#rolename"},"RoleName")),(0,i.kt)("td",{parentName:"tr",align:null},"Name of the inherited role")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"role_set"),(0,i.kt)("td",{parentName:"tr",align:null},"true"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#rolename"},"RoleName"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"List of non-inherited roles from which permissions should be inherited")))),(0,i.kt)("h2",{id:"metadata-drop-inherited-role"},"drop_inherited_role"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"drop_inherited_role")," is used to delete an existing inherited role."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "drop_inherited_role",\n    "args" : {\n       "role_name": "sample_inherited_role"\n    }\n}\n')),(0,i.kt)("h3",{id:"metadata-drop-inherited-role-syntax"},"Args syntax"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Key"),(0,i.kt)("th",{parentName:"tr",align:null},"Required"),(0,i.kt)("th",{parentName:"tr",align:null},"Schema"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"role_name"),(0,i.kt)("td",{parentName:"tr",align:null},"true"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#rolename"},"RoleName")),(0,i.kt)("td",{parentName:"tr",align:null},"Name of the inherited role")))))}u.isMDXComponent=!0}}]);