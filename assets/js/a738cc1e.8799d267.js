"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3909],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return d}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),u=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=u(e.components);return n.createElement(s.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=u(t),d=o,g=m["".concat(s,".").concat(d)]||m[d]||l[d]||a;return t?n.createElement(g,i(i({ref:r},p),{},{components:t})):n.createElement(g,i({ref:r},p))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3285:function(e,r,t){t.r(r),t.d(r,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return l}});var n=t(83117),o=t(80102),a=(t(67294),t(3905)),i=["components"],c={description:"Manage GraphQL Authentication and Authorization with Hasura",keywords:["hasura","docker","custom images","linux"],sidebar_position:11,sidebar_label:"Custom Docker images or binaries"},s="Custom Docker images or binaries for Hasura GraphQL engine",u={unversionedId:"graphql/core/deployment/custom-docker-images",id:"graphql/core/deployment/custom-docker-images",title:"Custom Docker images or binaries for Hasura GraphQL engine",description:"Manage GraphQL Authentication and Authorization with Hasura",source:"@site/docs/graphql/core/deployment/custom-docker-images.mdx",sourceDirName:"graphql/core/deployment",slug:"/graphql/core/deployment/custom-docker-images",permalink:"/docs/latest/graphql/core/deployment/custom-docker-images",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/deployment/custom-docker-images.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{description:"Manage GraphQL Authentication and Authorization with Hasura",keywords:["hasura","docker","custom images","linux"],sidebar_position:11,sidebar_label:"Custom Docker images or binaries"},sidebar:"docsSidebar",previous:{title:"Production checklist",permalink:"/docs/latest/graphql/core/deployment/production-checklist"},next:{title:"Updating GraphQL engine",permalink:"/docs/latest/graphql/core/deployment/updating-graphql-engine"}},p={},l=[],m={toc:l};function d(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"custom-docker-images-or-binaries-for-hasura-graphql-engine"},"Custom Docker images or binaries for Hasura GraphQL engine"),(0,a.kt)("p",null,"If you need a binary for Hasura GraphQL engine to run in a non-Docker\nenvironment or you require custom Docker images, we can make them\navailable via a support plan. A possible use case could be that the\ndefault base image ",(0,a.kt)("em",{parentName:"p"},"(alpine)")," is not compatible with your security\nscanning tool (",(0,a.kt)("a",{parentName:"p",href:"https://anchore.com/"},"Anchore"),", ",(0,a.kt)("a",{parentName:"p",href:"https://sysdig.com/products/kubernetes-security/image-scanning/"},"Sysdig Secure"),",\netc.)."),(0,a.kt)("p",null,"To set up such a support plan, please contact us using the form on our\n",(0,a.kt)("a",{parentName:"p",href:"https://hasura.io/contact-us/"},"contact page")," and make sure to include\nthe Linux flavor (",(0,a.kt)("em",{parentName:"p"},"CentOS, Debian slim, etc."),") or the target\narchitecture for the binary you'd be interested in."),(0,a.kt)("p",null,"A custom image will be made available for every stable release of\nGraphQL engine."))}d.isMDXComponent=!0}}]);