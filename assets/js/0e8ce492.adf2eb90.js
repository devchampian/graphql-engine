"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9529],{3905:function(e,a,t){t.d(a,{Zo:function(){return d},kt:function(){return m}});var n=t(67294);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,i=function(e,a){if(null==e)return{};var t,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=n.createContext({}),p=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(l.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=i,h=u["".concat(l,".").concat(m)]||u[m]||c[m]||r;return t?n.createElement(h,o(o({ref:a},d),{},{components:t})):n.createElement(h,o({ref:a},d))}));function m(e,a){var t=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=u;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},44269:function(e,a,t){t.r(a),t.d(a,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var n=t(83117),i=t(80102),r=(t(67294),t(3905)),o=["components"],s={sidebar_label:"Upgrading to config v3",sidebar_position:5,description:"Hasura Config V3 project",keywords:["hasura","docs","migration","metadata"]},l="Upgrading to Hasura migrations config v3",p={unversionedId:"graphql/core/migrations/upgrade-v3",id:"graphql/core/migrations/upgrade-v3",title:"Upgrading to Hasura migrations config v3",description:"Hasura Config V3 project",source:"@site/docs/graphql/core/migrations/upgrade-v3.mdx",sourceDirName:"graphql/core/migrations",slug:"/graphql/core/migrations/upgrade-v3",permalink:"/docs/latest/graphql/core/migrations/upgrade-v3",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/migrations/upgrade-v3.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_label:"Upgrading to config v3",sidebar_position:5,description:"Hasura Config V3 project",keywords:["hasura","docs","migration","metadata"]},sidebar:"docsSidebar",previous:{title:"Metadata format",permalink:"/docs/latest/graphql/core/migrations/reference/metadata-format"},next:{title:"Config v2",permalink:"/docs/latest/graphql/core/migrations/config-v2/index"}},d={},c=[{value:"What has changed?",id:"what-has-changed",level:2},{value:"Metadata directory",id:"metadata-directory",level:3},{value:"Migrations directory &amp; Seeds directory",id:"migrations-directory--seeds-directory",level:3},{value:"Changes needed in existing workflows",id:"changes-needed-in-existing-workflows",level:3},{value:"Upgrade steps",id:"upgrade-steps",level:2},{value:"Pre update checklist / notes",id:"pre-update-checklist--notes",level:3},{value:"Step 0: Take a backup",id:"step-0-take-a-backup",level:3},{value:"Step 1: Upgrade to the latest CLI",id:"step-1-upgrade-to-the-latest-cli",level:3},{value:"Step 2: Upgrade Hasura project to v3",id:"step-2-upgrade-hasura-project-to-v3",level:3},{value:"Continue using config v2",id:"continue-using-config-v2",level:2}],u={toc:c};function m(e){var a=e.components,t=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"upgrading-to-hasura-migrations-config-v3"},"Upgrading to Hasura migrations config v3"),(0,r.kt)("h2",{id:"what-has-changed"},"What has changed?"),(0,r.kt)("p",null,"From ",(0,r.kt)("inlineCode",{parentName:"p"},"v2.0.0")," onwards, Hasura allows us to add multiple databases to the\nsame Hasura instance. If we want to take advantage of multiple databases\nwe'll have to use a ",(0,r.kt)("inlineCode",{parentName:"p"},"config v3")," project which brings some changes to the\nproject directory when compared to ",(0,r.kt)("inlineCode",{parentName:"p"},"config v2"),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Config v3")," also brings updates to the metadata directory structure to\nimprove version control and collaboration workflows.To gain these\nbenefits we recommend upgrading to ",(0,r.kt)("inlineCode",{parentName:"p"},"config v3")," even if you do not intend\nto use multiple databases."),(0,r.kt)("p",null,"Let's try to understand what these changes are."),(0,r.kt)("h3",{id:"metadata-directory"},"Metadata directory"),(0,r.kt)("p",null,"The following is a sample metadata directory when using ",(0,r.kt)("inlineCode",{parentName:"p"},"config v3"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"metadata\n\u251c\u2500\u2500 actions.graphql\n\u251c\u2500\u2500 actions.yaml\n\u251c\u2500\u2500 allow_list.yaml\n\u251c\u2500\u2500 cron_triggers.yaml\n\u251c\u2500\u2500 databases\n\u2502\xa0\xa0 \u251c\u2500\u2500 databases.yaml\n\u2502\xa0\xa0 \u2514\u2500\u2500 s1\n\u2502\xa0\xa0     \u251c\u2500\u2500 functions\n\u2502\xa0\xa0     \u2502\xa0\xa0 \u251c\u2500\u2500 functions.yaml\n\u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 public_search_artists.yaml\n\u2502\xa0\xa0     \u2514\u2500\u2500 tables\n\u2502\xa0\xa0         \u251c\u2500\u2500 public_albums.yaml\n\u2502\xa0\xa0         \u251c\u2500\u2500 public_artists.yaml\n\u2502\xa0\xa0         \u251c\u2500\u2500 public_genres.yaml\n\u2502\xa0\xa0         \u251c\u2500\u2500 public_media_types.yaml\n\u2502\xa0\xa0         \u251c\u2500\u2500 public_playlists.yaml\n\u2502\xa0\xa0         \u251c\u2500\u2500 public_playlist_track.yaml\n\u2502\xa0\xa0         \u251c\u2500\u2500 public_tracks.yaml\n\u2502\xa0\xa0         \u2514\u2500\u2500 tables.yaml\n\u251c\u2500\u2500 query_collections.yaml\n\u251c\u2500\u2500 remote_schemas.yaml\n\u251c\u2500\u2500 rest_endpoints.yaml\n\u2514\u2500\u2500 version.yaml\n")),(0,r.kt)("p",null,"Notice the introduction of a new ",(0,r.kt)("inlineCode",{parentName:"p"},"databases")," directory. As the name\nsuggests, this directory will have the metadata related to all your\ndatabases."),(0,r.kt)("p",null,"Now let's looks at the contents of ",(0,r.kt)("inlineCode",{parentName:"p"},"databases/databases.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'- name: s1\n  kind: postgres\n  configuration:\n    connection_info:\n      database_url:\n        from_env: DATABASE_URL\n      pool_settings:\n        idle_timeout: 180\n        max_connections: 50\n        retries: 1\n  tables: "!include s1/tables/tables.yaml"\n  functions: "!include s1/functions/functions.yaml"\n')),(0,r.kt)("p",null,"We can see that we have a database called ",(0,r.kt)("inlineCode",{parentName:"p"},"s1"),", with it's configuration\ninformation and other metadata. Notice the peculiarity of values of\n",(0,r.kt)("inlineCode",{parentName:"p"},"tables")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"functions"),' keys. CLI now uses a special syntax to\n"include" contents from another file to use it as the value for a\nparticular key. Here it is ',(0,r.kt)("inlineCode",{parentName:"p"},"!include s1/tables/tables.yaml")," , which\nmeans that CLI will try to fill in value of ",(0,r.kt)("inlineCode",{parentName:"p"},"tables")," from\n",(0,r.kt)("inlineCode",{parentName:"p"},"s1/tables/tables.yaml"),"."),(0,r.kt)("p",null,"Now, If we look at the contents of ",(0,r.kt)("inlineCode",{parentName:"p"},"s1/tables/tables.yaml")," (as shown\nbelow) we understand that it is array whose values are again similarly\nsourced from different files."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'- "!include public_albums.yaml"\n- "!include public_artists.yaml"\n- "!include public_genres.yaml"\n- "!include public_media_types.yaml"\n- "!include public_playlist_track.yaml"\n- "!include public_playlists.yaml"\n- "!include public_tracks.yaml"\n')),(0,r.kt)("p",null,"Let's look at ",(0,r.kt)("inlineCode",{parentName:"p"},"public_albums.yaml")," from the first line above."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"array_relationships:\n  - name: tracks\n    using:\n      foreign_key_constraint_on:\n        column: album_id\n        table:\n          name: tracks\n          schema: public\nobject_relationships:\n  - name: artist\n    using:\n      foreign_key_constraint_on: artist_id\ntable:\n  name: albums\n  schema: public\n")),(0,r.kt)("p",null,"This file specifies the metadata related to a table called ",(0,r.kt)("inlineCode",{parentName:"p"},"tracks")," in\n",(0,r.kt)("inlineCode",{parentName:"p"},"public")," schema. This means that each table will have it's own file for\nit's metadata specifically. This makes understanding and managing\nmetadata related to tables a lot easier."),(0,r.kt)("p",null,"Also note that Metadata related to functions is also managed in a\nsimilar fashion."),(0,r.kt)("p",null,"When doing a ",(0,r.kt)("inlineCode",{parentName:"p"},"hasura metadata apply")," CLI will inline ",(0,r.kt)("inlineCode",{parentName:"p"},"!include"),"\ndirectives with the appropriate contents."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Currently the CLI looks for ",(0,r.kt)("inlineCode",{parentName:"p"},"!include")," directives in ",(0,r.kt)("inlineCode",{parentName:"p"},"tables")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"functions")," keys only."))),(0,r.kt)("h3",{id:"migrations-directory--seeds-directory"},"Migrations directory & Seeds directory"),(0,r.kt)("p",null,"There are some changes to ",(0,r.kt)("inlineCode",{parentName:"p"},"migrations")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"seeds")," project directories\nin ",(0,r.kt)("inlineCode",{parentName:"p"},"config v3"),". Projects will have child directories corresponding to\nmigrations for each connected database. Look at the following example,\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"`migrations")," directory has a sub directory ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," which\ncorresponds to the connected database."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"migrations\n\u2514\u2500\u2500 default\n  \u2514\u2500\u2500 1613987232674_init\n      \u2514\u2500\u2500 up.sql\n")),(0,r.kt)("h3",{id:"changes-needed-in-existing-workflows"},"Changes needed in existing workflows"),(0,r.kt)("p",null,"With the introduction of multiple databases and it's configuration being\nstored in metadata, it brings a change of workflow with it."),(0,r.kt)("p",null,"The steps to apply migrations and metadata to a new Hasura instance will\nbe:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# first apply metadata, this will connect Hasura to the configured databases.\nhasura metadata apply\n# now we can apply migrations to the connected databases.\nhasura migrate apply --all-databases\n# follow it with a metadata reload to make sure Hasura is aware of any newly created database objects.\nhasura metadata reload\n")),(0,r.kt)("p",null,"The reason why we have to do ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata apply")," first instead of\n",(0,r.kt)("inlineCode",{parentName:"p"},"migrate apply")," (that we are used to doing in ",(0,r.kt)("inlineCode",{parentName:"p"},"config v2"),") is that if we\ndo a ",(0,r.kt)("inlineCode",{parentName:"p"},"migrate apply")," first then Hasura might not yet be aware about the\ndatabases it has to connect to as that information is present in\nmetadata. Earlier we could not start Hasura without a connected\ndatabase, but now we can."),(0,r.kt)("p",null,"As we are now applying metadata before migrations, your metadata might\nbe in an ",(0,r.kt)("strong",{parentName:"p"},"inconsistent state")," after the initial ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata apply")," till\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata reload")," step as some database objects referred to in\nmetadata might not be available till the migrations are applied."),(0,r.kt)("p",null,"Also, ",(0,r.kt)("inlineCode",{parentName:"p"},"hasura seeds")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"hasura migrate")," commands now accept a required\nflag ",(0,r.kt)("inlineCode",{parentName:"p"},"--database-name"),"."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"As the database connection configuration is now picked up from metadata,\nit is important to ensure that all the environments use the same env\nvars to store the database connection strings and the metadata being\napplied also uses the appropriate env vars."))),(0,r.kt)("h2",{id:"upgrade-steps"},"Upgrade steps"),(0,r.kt)("p",null,"The latest version Hasura CLI comes with a convenience script used to\nupgrade your CLI project to use ",(0,r.kt)("inlineCode",{parentName:"p"},"config v3"),". Note that this process is\ncompletely independent from your Hasura GraphQL engine server update\nprocess."),(0,r.kt)("h3",{id:"pre-update-checklist--notes"},"Pre update checklist / notes"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Config V3")," is expected to be used with Hasura GraphQL engine\nversions ",(0,r.kt)("inlineCode",{parentName:"li"},"v2.0.0-alpha.1")," and above."),(0,r.kt)("li",{parentName:"ol"},"During the update process CLI uses the server as the source of\ntruth, so make sure your server is upto date."),(0,r.kt)("li",{parentName:"ol"},"The update process replaces project metadata with metadata on the\nserver.")),(0,r.kt)("h3",{id:"step-0-take-a-backup"},"Step 0: Take a backup"),(0,r.kt)("p",null,"Make sure you take a backup of your Hasura project before upgrading to\n",(0,r.kt)("inlineCode",{parentName:"p"},"config v3"),"."),(0,r.kt)("h3",{id:"step-1-upgrade-to-the-latest-cli"},"Step 1: Upgrade to the latest CLI"),(0,r.kt)("p",null,"Run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"hasura update-cli\n")),(0,r.kt)("p",null,"If you are updating to a ",(0,r.kt)("inlineCode",{parentName:"p"},"beta/alpha")," release"),(0,r.kt)("p",null,"Run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"hasura update-cli --version <version>\n")),(0,r.kt)("h3",{id:"step-2-upgrade-hasura-project-to-v3"},"Step 2: Upgrade Hasura project to v3"),(0,r.kt)("p",null,"In your project directory, run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"hasura scripts update-project-v3\n")),(0,r.kt)("p",null,"Your project directory and ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml")," should be updated to v3."),(0,r.kt)("p",null,"The update script will ask for the name of database the current\nmigrations and seeds correspond to. If you are starting Hasura with a\n",(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_DATABASE_URL")," then the name of the database should be\n",(0,r.kt)("inlineCode",{parentName:"p"},"default"),"."),(0,r.kt)("h2",{id:"continue-using-config-v2"},"Continue using config v2"),(0,r.kt)("p",null,"It is possible to continue using ",(0,r.kt)("inlineCode",{parentName:"p"},"config v2")," with Hasura versions\n",(0,r.kt)("inlineCode",{parentName:"p"},"v2.0.0")," and above if you would like to do so."),(0,r.kt)("p",null,"While using ",(0,r.kt)("inlineCode",{parentName:"p"},"config v2")," with Hasura versions ",(0,r.kt)("inlineCode",{parentName:"p"},"v2.0.0")," and above, as we\nhave metadata and migrations for only a single database, the server\nassumes that they belong to a database named ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," and attempts to\napply them to it."),(0,r.kt)("p",null,"Hence, to continue using ",(0,r.kt)("inlineCode",{parentName:"p"},"config v2")," we need to connect a database to\nHasura GraphQL engine with the name ",(0,r.kt)("inlineCode",{parentName:"p"},"default")," and then run any metadata\nand migrations commands."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If you have connected your database using the\n",(0,r.kt)("inlineCode",{parentName:"li"},"HASURA_GRAPHQL_DATABASE_URL")," env var, the database will be added\nwith the name ",(0,r.kt)("inlineCode",{parentName:"li"},"default")," automatically."),(0,r.kt)("li",{parentName:"ul"},"Else you can connect a database with the name ",(0,r.kt)("inlineCode",{parentName:"li"},"default")," following\nthe steps ",(0,r.kt)("a",{parentName:"li",href:"/docs/latest/graphql/core/databases/connect-db#connect-database-v2-0"},"here"),".")),(0,r.kt)("p",null,"Post this, the metadata and migration commands should work as usual."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Ensure the ",(0,r.kt)("inlineCode",{parentName:"p"},"version")," key in ",(0,r.kt)("inlineCode",{parentName:"p"},"config.yaml")," is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," while using\n",(0,r.kt)("inlineCode",{parentName:"p"},"config v2")))))}m.isMDXComponent=!0}}]);