"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8563],{3905:function(e,a,t){t.d(a,{Zo:function(){return u},kt:function(){return m}});var r=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=r.createContext({}),d=function(e){var a=r.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},u=function(e){var a=d(e.components);return r.createElement(l.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},p=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(t),m=n,h=p["".concat(l,".").concat(m)]||p[m]||c[m]||o;return t?r.createElement(h,i(i({ref:a},u),{},{components:t})):r.createElement(h,i({ref:a},u))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=p;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var d=2;d<o;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},45390:function(e,a,t){t.r(a),t.d(a,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return c}});var r=t(83117),n=t(80102),o=(t(67294),t(3905)),i=["components"],s={sidebar_label:"hasura metadata reload",sidebar_position:21,description:"Reload Hasura GraphQL engine metadata on the database using the Hasura CLI",keywords:["hasura","docs","CLI","hasura metadata reload"]},l="Hasura CLI: hasura metadata reload",d={unversionedId:"graphql/core/hasura-cli/hasura_metadata_reload",id:"graphql/core/hasura-cli/hasura_metadata_reload",title:"Hasura CLI: hasura metadata reload",description:"Reload Hasura GraphQL engine metadata on the database using the Hasura CLI",source:"@site/docs/graphql/core/hasura-cli/hasura_metadata_reload.mdx",sourceDirName:"graphql/core/hasura-cli",slug:"/graphql/core/hasura-cli/hasura_metadata_reload",permalink:"/docs/latest/graphql/core/hasura-cli/hasura_metadata_reload",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/hasura-cli/hasura_metadata_reload.mdx",tags:[],version:"current",sidebarPosition:21,frontMatter:{sidebar_label:"hasura metadata reload",sidebar_position:21,description:"Reload Hasura GraphQL engine metadata on the database using the Hasura CLI",keywords:["hasura","docs","CLI","hasura metadata reload"]},sidebar:"docsSidebar",previous:{title:"hasura metadata inconsistency status",permalink:"/docs/latest/graphql/core/hasura-cli/hasura_metadata_inconsistency_status"},next:{title:"hasura migrate",permalink:"/docs/latest/graphql/core/hasura-cli/hasura_migrate"}},u={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Examples",id:"examples",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],p={toc:c};function m(e){var a=e.components,t=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"hasura-cli-hasura-metadata-reload"},"Hasura CLI: hasura metadata reload"),(0,o.kt)("p",null,"Reload Hasura GraphQL engine metadata on the database."),(0,o.kt)("h2",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"Reload Hasura GraphQL engine metadata on the database."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"hasura metadata reload [flags]\n")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'# Reload all the metadata information from database:\nhasura metadata reload\n\n# Use with admin secret:\nhasura metadata reload --admin-secret "<admin-secret>"\n\n# Reload metadata on a different instance:\nhasura metadata export --endpoint "<endpoint>"\n')),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"-h, --help   help for reload\n")),(0,o.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'--admin-secret string            admin secret for Hasura GraphQL engine (env "HASURA_GRAPHQL_ADMIN_SECRET")\n--certificate-authority string   path to a cert file for the certificate authority (env "HASURA_GRAPHQL_CERTIFICATE_AUTHORITY")\n--endpoint string                http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")\n--envfile string                 .env filename to load ENV vars from (default ".env")\n--insecure-skip-tls-verify       skip TLS verification and disable cert checking (default: false) (env "HASURA_GRAPHQL_INSECURE_SKIP_TLS_VERIFY")\n--log-level string               log level (DEBUG, INFO, WARN, ERROR, FATAL) (default "INFO")\n--no-color                       do not colorize output (default: false)\n--project string                 directory where commands are executed (default: current dir)\n--skip-update-check              skip automatic update check on command execution\n')),(0,o.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/latest/graphql/core/hasura-cli/hasura_metadata"},"hasura metadata")," - Manage Hasura GraphQL engine metadata saved in the database")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Auto generated by spf13/cobra")))}m.isMDXComponent=!0}}]);