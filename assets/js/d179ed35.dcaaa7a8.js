"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9105],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),h=p(n),c=r,m=h["".concat(i,".").concat(c)]||h[c]||d[c]||s;return n?a.createElement(m,l(l({ref:t},u),{},{components:n})):a.createElement(m,l({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=h;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<s;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},19340:function(e,t,n){var a=n(84035),r=n(21720),s=n.n(r),l=n(67294);t.Z=function(e){var t=e.prerelease,n=(0,l.useState)({latest:"v2.3.0",prerelease:"v2.4.0-beta.1"}),r=n[0],o=n[1];return(0,l.useEffect)((function(){(0,a.Z)(s().mark((function e(){var t,n;return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("https://releases.hasura.io/graphql-engine?agent=docs.hasura.io");case 2:return t=e.sent,e.next=5,t.json();case 5:n=e.sent,o(n);case 7:case"end":return e.stop()}}),e)})))()}),[]),l.createElement("span",null,t?r.prerelease:r.latest)}},14462:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return h}});var a=n(83117),r=n(80102),s=(n(67294),n(3905)),l=n(19340),o=["components"],i={description:"Deploy Hasura GraphQL engine with Kubernetes",keywords:["hasura","docs","deployment","kubernetes"],sidebar_position:4,sidebar_label:"Using Kubernetes"},p="Run Hasura GraphQL engine on Kubernetes",u={unversionedId:"graphql/core/deployment/deployment-guides/kubernetes",id:"graphql/core/deployment/deployment-guides/kubernetes",title:"Run Hasura GraphQL engine on Kubernetes",description:"Deploy Hasura GraphQL engine with Kubernetes",source:"@site/docs/graphql/core/deployment/deployment-guides/kubernetes.mdx",sourceDirName:"graphql/core/deployment/deployment-guides",slug:"/graphql/core/deployment/deployment-guides/kubernetes",permalink:"/graphql-engine/latest/graphql/core/deployment/deployment-guides/kubernetes",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/deployment/deployment-guides/kubernetes.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{description:"Deploy Hasura GraphQL engine with Kubernetes",keywords:["hasura","docs","deployment","kubernetes"],sidebar_position:4,sidebar_label:"Using Kubernetes"},sidebar:"docsSidebar",previous:{title:"Using Docker",permalink:"/graphql-engine/latest/graphql/core/deployment/deployment-guides/docker"},next:{title:"Using Heroku (one-click)",permalink:"/graphql-engine/latest/graphql/core/deployment/deployment-guides/heroku"}},d={},h=[{value:"Introduction",id:"introduction",level:2},{value:"Deploying Hasura using Kubernetes",id:"deploying-hasura-using-kubernetes",level:2},{value:"Step 1: Get the Kubernetes deployment and service files",id:"step-1-get-the-kubernetes-deployment-and-service-files",level:3},{value:"Step 2: Set the Postgres database url",id:"step-2-set-the-postgres-database-url",level:3},{value:"Step 3: Create the Kubernetes deployment and service",id:"step-3-create-the-kubernetes-deployment-and-service",level:3},{value:"Step 4: Open the Hasura console",id:"step-4-open-the-hasura-console",level:3},{value:"Step 5: Track existing tables and relationships",id:"step-5-track-existing-tables-and-relationships",level:3},{value:"Securing the GraphQL endpoint",id:"kubernetes-secure",level:2},{value:"Add the HASURA_GRAPHQL_ADMIN_SECRET env var",id:"add-the-hasura_graphql_admin_secret-env-var",level:3},{value:"(optional) Use the admin secret key with the CLI",id:"optional-use-the-admin-secret-key-with-the-cli",level:3},{value:"Hasura GraphQL engine server logs",id:"kubernetes-logs",level:2},{value:"Updating Hasura GraphQL engine",id:"kubernetes-update",level:2},{value:"Step 1: Check the latest release version",id:"step-1-check-the-latest-release-version",level:3},{value:"Step 2: Update the container image",id:"step-2-update-the-container-image",level:3},{value:"Step 3: Rollout the change",id:"step-3-rollout-the-change",level:3},{value:"Advanced",id:"advanced",level:2}],c={toc:h};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"run-hasura-graphql-engine-on-kubernetes"},"Run Hasura GraphQL engine on Kubernetes"),(0,s.kt)("h2",{id:"introduction"},"Introduction"),(0,s.kt)("p",null,"This guide assumes that you already have Postgres running and helps you\nset up the Hasura GraphQL engine on Kubernetes and connect it to your\nPostgres database."),(0,s.kt)("h2",{id:"deploying-hasura-using-kubernetes"},"Deploying Hasura using Kubernetes"),(0,s.kt)("h3",{id:"step-1-get-the-kubernetes-deployment-and-service-files"},"Step 1: Get the Kubernetes deployment and service files"),(0,s.kt)("p",null,"The ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/hasura/graphql-engine/tree/stable/install-manifests"},"hasura/graphql-engine/install-manifests"),"\nrepo contains all installation manifests required to deploy Hasura\nanywhere. Get the Kubernetes deployment and service files from there:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"$ wget https://raw.githubusercontent.com/hasura/graphql-engine/stable/install-manifests/kubernetes/deployment.yaml\n$ wget https://raw.githubusercontent.com/hasura/graphql-engine/stable/install-manifests/kubernetes/svc.yaml\n")),(0,s.kt)("h3",{id:"step-2-set-the-postgres-database-url"},"Step 2: Set the Postgres database url"),(0,s.kt)("p",null,"Edit ",(0,s.kt)("inlineCode",{parentName:"p"},"deployment.yaml")," and set the right database url:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{4}","{4}":!0},"...\n  env:\n  - name: HASURA_GRAPHQL_DATABASE_URL\n    value: postgres://<username>:<password>@hostname:<port>/<dbname>\n...\n")),(0,s.kt)("p",null,"Examples of ",(0,s.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_DATABASE_URL"),":"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"postgres://admin:password@localhost:5432/my-db")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"postgres://admin:@localhost:5432/my-db")," ",(0,s.kt)("em",{parentName:"li"},"(if there is no password)"))),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("ul",{parentName:"div"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"If your ",(0,s.kt)("strong",{parentName:"p"},"password contains special characters")," (e.g. #, %, $, @,\netc.), you need to URL encode them in the\n",(0,s.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_DATABASE_URL")," env var (e.g. %40 for @)."),(0,s.kt)("p",{parentName:"li"},"You can check the ",(0,s.kt)("a",{parentName:"p",href:"#kubernetes-logs"},"logs")," to see if the database\ncredentials are proper and if Hasura is able to connect to the\ndatabase.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"The Hasura GraphQL engine needs access permissions on your Postgres\ndatabase as described in\n",(0,s.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/deployment/postgres-requirements#postgres-permissions"},"Postgres permissions"),"."))))),(0,s.kt)("h3",{id:"step-3-create-the-kubernetes-deployment-and-service"},"Step 3: Create the Kubernetes deployment and service"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl create -f deployment.yaml\n$ kubectl create -f svc.yaml\n")),(0,s.kt)("h3",{id:"step-4-open-the-hasura-console"},"Step 4: Open the Hasura console"),(0,s.kt)("p",null,"The above creates a LoadBalancer type service with port 80. So you\nshould be able to access the console at the external IP."),(0,s.kt)("p",null,"For example, using Docker-for-desktop on Mac:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl get svc\nNAME         TYPE           CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE\nhasura       LoadBalancer   10.96.214.240   localhost     80:30303/TCP   4m\nkubernetes   ClusterIP      10.96.0.1       <none>        443/TCP        8m\n")),(0,s.kt)("p",null,"Head to: ",(0,s.kt)("inlineCode",{parentName:"p"},"http://localhost")," and the console should load!"),(0,s.kt)("h3",{id:"step-5-track-existing-tables-and-relationships"},"Step 5: Track existing tables and relationships"),(0,s.kt)("p",null,"See ",(0,s.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/databases/postgres/schema/using-existing-database"},"Setting up a GraphQL schema using an existing Postgres database")," to enable GraphQL over the database."),(0,s.kt)("h2",{id:"kubernetes-secure"},"Securing the GraphQL endpoint"),(0,s.kt)("p",null,"To make sure that your GraphQL endpoint and the Hasura console are not\npublicly accessible, you need to configure an admin secret key."),(0,s.kt)("h3",{id:"add-the-hasura_graphql_admin_secret-env-var"},"Add the HASURA_GRAPHQL_ADMIN_SECRET env var"),(0,s.kt)("p",null,"Update the ",(0,s.kt)("inlineCode",{parentName:"p"},"deployment.yaml")," to set the ",(0,s.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ADMIN_SECRET"),"\nenvironment variable."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{10-11}","{10-11}":!0},'...\nspec:\n   containers:\n     ...\n     command: ["graphql-engine"]\n     args: ["serve", "--enable-console"]\n     env:\n     - name: HASURA_GRAPHQL_DATABASE_URL\n       value: postgres://<username>:<password>@hostname:<port>/<dbname>\n     - name: HASURA_GRAPHQL_ADMIN_SECRET\n       value: mysecretkey\n     ports:\n     - containerPort: 8080\n       protocol: TCP\n     resources: {}\n')),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"The ",(0,s.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ADMIN_SECRET")," should never be passed from the client\nto the Hasura GraphQL engine as it would give the client full admin\nrights to your Hasura instance. See ",(0,s.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/auth/index"},"Authentication & Authorization")," for information on setting up\nauthentication."))),(0,s.kt)("h3",{id:"optional-use-the-admin-secret-key-with-the-cli"},"(optional) Use the admin secret key with the CLI"),(0,s.kt)("p",null,"In case you're using the CLI to open the Hasura console, use the\n",(0,s.kt)("inlineCode",{parentName:"p"},"admin-secret")," flag when you open the console:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"hasura console --admin-secret=<myadminsecretkey>\n")),(0,s.kt)("h2",{id:"kubernetes-logs"},"Hasura GraphQL engine server logs"),(0,s.kt)("p",null,"You can check the logs of the Hasura GraphQL engine deployed on\nKubernetes by checking the logs of the GraphQL engine service, i.e.\n",(0,s.kt)("inlineCode",{parentName:"p"},"hasura"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'$ kubectl logs -f svc/hasura\n\n{"timestamp":"2018-10-09T11:20:32.054+0000", "level":"info", "type":"http-log", "detail":{"status":200, "query_hash":"01640c6dd131826cff44308111ed40d7fbd1cbed", "http_version":"HTTP/1.1", "query_execution_time":3.0177627e-2, "request_id":null, "url":"/v1/graphql", "user":{"x-hasura-role":"admin"}, "ip":"127.0.0.1", "response_size":209329, "method":"POST", "detail":null}}\n...\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"See:")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/cluster-administration/logging"},"https://kubernetes.io/docs/concepts/cluster-administration/logging"),"\nfor more details on logging in Kubernetes."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/deployment/logging"},"Hasura GraphQL engine logs")," for more details on Hasura logs")),(0,s.kt)("h2",{id:"kubernetes-update"},"Updating Hasura GraphQL engine"),(0,s.kt)("p",null,"This guide will help you update the Hasura GraphQL engine running on\nKubernetes. This guide assumes that you already have the Hasura GraphQL\nengine running on Kubernetes."),(0,s.kt)("h3",{id:"step-1-check-the-latest-release-version"},"Step 1: Check the latest release version"),(0,s.kt)("p",null,"The current latest version is:"),(0,s.kt)("code",null,"hasura/graphql-engine:",(0,s.kt)(l.Z,{mdxType:"LatestRelease"})),(0,s.kt)("p",null,"All the versions can be found at: ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/hasura/graphql-engine/releases"},"https://github.com/hasura/graphql-engine/releases"),"."),(0,s.kt)("h3",{id:"step-2-update-the-container-image"},"Step 2: Update the container image"),(0,s.kt)("p",null,"In the ",(0,s.kt)("inlineCode",{parentName:"p"},"deployment.yaml")," file, update the image tag to this latest\nversion."),(0,s.kt)("p",null,"For example, if you had:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"containers:\n  - image: hasura/graphql-engine:v1.0.0-alpha01\n")),(0,s.kt)("p",null,"you should change it to:"),(0,s.kt)("pre",null,(0,s.kt)("code",null,"containers:",(0,s.kt)("br",null),"  ","- image: hasura/graphql-engine:",(0,s.kt)(l.Z,{mdxType:"LatestRelease"}))),(0,s.kt)("h3",{id:"step-3-rollout-the-change"},"Step 3: Rollout the change"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"$ kubectl replace -f deployment.yaml\n")),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"If you are downgrading to an older version of the GraphQL engine you\nmight need to downgrade your metadata catalogue version as described in\n",(0,s.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/deployment/downgrading"},"Downgrading Hasura GraphQL engine")))),(0,s.kt)("h2",{id:"advanced"},"Advanced"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/migrations/index"},"Setting up migrations"))))}m.isMDXComponent=!0}}]);