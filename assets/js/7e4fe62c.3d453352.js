"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7972],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return c}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,g=m["".concat(s,".").concat(c)]||m[c]||u[c]||l;return n?a.createElement(g,i(i({ref:t},d),{},{components:n})):a.createElement(g,i({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},36474:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var a=n(83117),r=n(80102),l=(n(67294),n(3905)),i=["components"],o={sidebar_label:"Event trigger payload",sidebar_position:2,description:"Event trigger payload in Hasura",keywords:["hasura","docs","event trigger","payload"]},s="Event trigger payload",p={unversionedId:"graphql/core/event-triggers/payload",id:"graphql/core/event-triggers/payload",title:"Event trigger payload",description:"Event trigger payload in Hasura",source:"@site/docs/graphql/core/event-triggers/payload.mdx",sourceDirName:"graphql/core/event-triggers",slug:"/graphql/core/event-triggers/payload",permalink:"/docs/latest/graphql/core/event-triggers/payload",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/event-triggers/payload.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Event trigger payload",sidebar_position:2,description:"Event trigger payload in Hasura",keywords:["hasura","docs","event trigger","payload"]},sidebar:"docsSidebar",previous:{title:"Creating an event trigger",permalink:"/docs/latest/graphql/core/event-triggers/create-trigger"},next:{title:"REST Connectors for event triggers",permalink:"/docs/latest/graphql/core/event-triggers/rest-connectors"}},d={},u=[{value:"Introduction",id:"introduction",level:2},{value:"HTTP request method",id:"http-request-method",level:2},{value:"JSON payload",id:"json-payload",level:2},{value:"Syntax definitions",id:"syntax-definitions",level:2},{value:"Object",id:"object",level:3},{value:"OpName",id:"opname",level:3},{value:"Webhook response structure",id:"webhook-response-structure",level:2},{value:"Retry-After header",id:"retry-after-header",level:3}],m={toc:u};function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"event-trigger-payload"},"Event trigger payload"),(0,l.kt)("h2",{id:"introduction"},"Introduction"),(0,l.kt)("p",null,"The following is the payload and delivery mechanism of an event to the\nwebhook when an event trigger is invoked."),(0,l.kt)("h2",{id:"http-request-method"},"HTTP request method"),(0,l.kt)("p",null,"Delivered over ",(0,l.kt)("inlineCode",{parentName:"p"},"HTTP POST")," with the following headers:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-none"},"Content-Type: application/json\n")),(0,l.kt)("h2",{id:"json-payload"},"JSON payload"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-none"},'{\n  "event": {\n      "session_variables": <session-variables>,\n      "op": "<op-name>",\n      "data": {\n          "old": <column-values>,\n          "new": <column-values>\n      }\n  },\n  "created_at": "<timestamp>",\n  "id": "<uuid>",\n  "trigger": {\n      "name": "<name-of-trigger>"\n  },\n  "table":  {\n      "schema": "<schema-name>",\n      "name": "<table-name>"\n  }\n}\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"session-variables"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#object"},"Object")," or NULL"),(0,l.kt)("td",{parentName:"tr",align:null},'Key-value pairs of session variables (i.e. "x-hasura-',"*",'" variables) and their values (NULL if no session variables found)')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"op-name"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#opname"},"OpName")),(0,l.kt)("td",{parentName:"tr",align:null},'Name of the operation. Can only be "INSERT", "UPDATE", "DELETE", "MANUAL"')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"column-values"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#object"},"Object")),(0,l.kt)("td",{parentName:"tr",align:null},"Key-value pairs of column name and their values of the table")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Timestamp at which event was created")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"uuid"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"UUID identifier for the event")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name-of-trigger"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the trigger")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"schema-name"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the schema for the table")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"table-name"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the table")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"In case of"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"INSERT",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"event.data.old")," will be ",(0,l.kt)("inlineCode",{parentName:"li"},"null")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"event.data.new")," will contain the insert row"))),(0,l.kt)("li",{parentName:"ul"},"UPDATE",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"event.data.old")," will be values before the update"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"event.data.new")," will contain the values after the update"))),(0,l.kt)("li",{parentName:"ul"},"DELETE",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"event.data.old")," will contain the row that is deleted"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"event.data.new")," will be ",(0,l.kt)("inlineCode",{parentName:"li"},"null")))),(0,l.kt)("li",{parentName:"ul"},"MANUAL",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"event.data.old")," will be ",(0,l.kt)("inlineCode",{parentName:"li"},"null")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"event.data.new")," will contain the current row")))),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"In case of ",(0,l.kt)("inlineCode",{parentName:"li"},"UPDATE"),", the events are delivered only if new data is\ndistinct from old data. The ",(0,l.kt)("a",{parentName:"li",href:"https://www.postgresql.org/docs/current/functions-comparisons.html#COMPOSITE-TYPE-COMPARISON"},"composite type\ncomparison"),"\nis used to compare the old and new rows. If rows contain columns,\nwhich cannot be compared using ",(0,l.kt)("inlineCode",{parentName:"li"},"<>")," operator, then internal binary\nrepresentation of rows by Postgres is compared."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/latest/graphql/core/databases/postgres/schema/computed-fields"},"Table computed fields")," are not included in the\nevent trigger payload data")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"For example"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "85558393-c75d-4d2f-9c15-e80591b83894",\n  "created_at": "2018-09-05T07:14:21.601701Z",\n  "trigger": {\n    "name": "insert_user_trigger"\n  },\n  "table": {\n    "schema": "public",\n    "name": "users"\n  },\n  "event": {\n    "session_variables": {\n      "x-hasura-role": "admin",\n      "x-hasura-allowed-roles": "[\'user\', \'boo\', \'admin\']",\n      "x-hasura-user-id": "1"\n    },\n    "op": "INSERT",\n    "data": {\n      "old": null,\n      "new": {\n        "id": "42",\n        "name": "john doe"\n      }\n    }\n  }\n}\n')),(0,l.kt)("h2",{id:"syntax-definitions"},"Syntax definitions"),(0,l.kt)("h3",{id:"object"},"Object"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-none"},'{\n  "column1": "value1",\n  "column2": "value2",\n  ..\n}\n')),(0,l.kt)("h3",{id:"opname"},"OpName"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},'"INSERT" | "UPDATE" | "DELETE" | "MANUAL"')),(0,l.kt)("h2",{id:"webhook-response-structure"},"Webhook response structure"),(0,l.kt)("p",null,"A ",(0,l.kt)("inlineCode",{parentName:"p"},"2xx")," response status code is deemed to be a successful invocation of\nthe webhook. Any other response status will be deemed as an unsuccessful\ninvocation which will cause retries as per the retry configuration."),(0,l.kt)("p",null,"It is also recommended that you return a JSON object in your webhook\nresponse."),(0,l.kt)("h3",{id:"retry-after-header"},"Retry-After header"),(0,l.kt)("p",null,"If the webhook response contains a ",(0,l.kt)("inlineCode",{parentName:"p"},"Retry-After")," header, then the event\nwill be redelivered once more after the duration (in seconds) found in\nthe header. Note that the header will be respected only if the response\nstatus code is ",(0,l.kt)("inlineCode",{parentName:"p"},"non-2xx"),"."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Retry-After")," header can be used for\nretrying/rate-limiting/debouncing your webhook triggers."))}c.isMDXComponent=!0}}]);