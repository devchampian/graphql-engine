"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1223],{3905:function(t,e,a){a.d(e,{Zo:function(){return d},kt:function(){return N}});var n=a(67294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function m(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var p=n.createContext({}),o=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},d=function(t){var e=o(t.components);return n.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,p=t.parentName,d=m(t,["components","mdxType","originalType","parentName"]),k=o(a),N=l,s=k["".concat(p,".").concat(N)]||k[N]||u[N]||r;return a?n.createElement(s,i(i({ref:e},d),{},{components:a})):n.createElement(s,i({ref:e},d))}));function N(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,i=new Array(r);i[0]=k;var m={};for(var p in e)hasOwnProperty.call(e,p)&&(m[p]=e[p]);m.originalType=t,m.mdxType="string"==typeof t?t:l,i[1]=m;for(var o=2;o<r;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},79766:function(t,e,a){a.r(e),a.d(e,{assets:function(){return d},contentTitle:function(){return p},default:function(){return N},frontMatter:function(){return m},metadata:function(){return o},toc:function(){return u}});var n=a(83117),l=a(80102),r=(a(67294),a(3905)),i=["components"],m={sidebar_label:"Common syntax definitions",sidebar_position:12,description:"Common syntax definitions for the Hasura schema/metadata API",keywords:["hasura","docs","schema/metadata API","API reference","syntax definitions"]},p="API Reference: Common syntax definitions",o={unversionedId:"graphql/core/api-reference/syntax-defs",id:"graphql/core/api-reference/syntax-defs",title:"API Reference: Common syntax definitions",description:"Common syntax definitions for the Hasura schema/metadata API",source:"@site/docs/graphql/core/api-reference/syntax-defs.mdx",sourceDirName:"graphql/core/api-reference",slug:"/graphql/core/api-reference/syntax-defs",permalink:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/api-reference/syntax-defs.mdx",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_label:"Common syntax definitions",sidebar_position:12,description:"Common syntax definitions for the Hasura schema/metadata API",keywords:["hasura","docs","schema/metadata API","API reference","syntax definitions"]},sidebar:"docsSidebar",previous:{title:"Explain API",permalink:"/graphql-engine/latest/graphql/core/api-reference/explain"},next:{title:"How Hasura GraphQL engine works",permalink:"/graphql-engine/latest/graphql/core/how-it-works/index"}},d={},u=[{value:"TableName",id:"tablename",level:2},{value:"QualifiedTable",id:"qualifiedtable",level:2},{value:"BigQueryTableName",id:"bigquerytablename",level:2},{value:"SourceName",id:"sourcename",level:2},{value:"FunctionName",id:"functionname",level:2},{value:"QualifiedFunction",id:"qualifiedfunction",level:2},{value:"RoleName",id:"rolename",level:2},{value:"ComputedFieldName",id:"computedfieldname",level:2},{value:"PGConfiguration",id:"pgconfiguration",level:2},{value:"MsSQLConfiguration",id:"mssqlconfiguration",level:2},{value:"BigQueryConfiguration",id:"bigqueryconfiguration",level:2},{value:"PGSourceConnectionInfo",id:"pgsourceconnectioninfo",level:2},{value:"MsSQLSourceConnectionInfo",id:"mssqlsourceconnectioninfo",level:2},{value:"FromEnv",id:"fromenv",level:2},{value:"PGConnectionParameters",id:"pgconnectionparameters",level:2},{value:"PGPoolSettings",id:"pgpoolsettings",level:2},{value:"PGCertSettings",id:"pgcertsettings",level:2},{value:"MsSQLPoolSettings",id:"mssqlpoolsettings",level:2},{value:"PGColumnType",id:"pgcolumntype",level:2},{value:"PGColumn",id:"pgcolumn",level:2},{value:"RelationshipName",id:"relationshipname",level:2},{value:"Table Config",id:"table-config",level:2},{value:"Custom Root Fields",id:"custom-root-fields",level:2},{value:"CustomRootField",id:"customrootfield",level:2},{value:"ColumnConfig",id:"columnconfig",level:2},{value:"ColumnConfigValue",id:"columnconfigvalue",level:2},{value:"Custom Function Root Fields",id:"custom-function-root-fields",level:2},{value:"InsertPermission",id:"insertpermission",level:2},{value:"SelectPermission",id:"selectpermission",level:2},{value:"UpdatePermission",id:"updatepermission",level:2},{value:"DeletePermission",id:"deletepermission",level:2},{value:"ObjRelUsing",id:"objrelusing",level:2},{value:"ObjRelUsingChoice",id:"objrelusingchoice",level:2},{value:"SameTable",id:"sametable",level:2},{value:"RemoteTable",id:"remotetable",level:2},{value:"ObjRelUsingManualMapping",id:"objrelusingmanualmapping",level:2},{value:"InsertOrder",id:"insertorder",level:2},{value:"ArrRelUsing",id:"arrrelusing",level:2},{value:"ArrRelUsingFKeyOn",id:"arrrelusingfkeyon",level:2},{value:"ArrRelUsingManualMapping",id:"arrrelusingmanualmapping",level:2},{value:"BoolExp",id:"boolexp",level:2},{value:"AndExp",id:"andexp",level:2},{value:"OrExp",id:"orexp",level:2},{value:"NotExp",id:"notexp",level:2},{value:"ExistsExp",id:"existsexp",level:2},{value:"TrueExp",id:"trueexp",level:2},{value:"ColumnExp",id:"columnexp",level:2},{value:"Operator",id:"metadataoperator",level:2},{value:"Object",id:"object",level:2},{value:"Empty Object",id:"empty-object",level:2},{value:"ColumnPresetsExp",id:"columnpresetexp",level:2},{value:"RemoteSchemaName",id:"remoteschemaname",level:2},{value:"RemoteSchemaDef",id:"remoteschemadef",level:2},{value:"RemoteSchemaCustomization",id:"remoteschemacustomization",level:2},{value:"RemoteTypeCustomization",id:"remotetypecustomization",level:2},{value:"RemoteFieldCustomization",id:"remotefieldcustomization",level:2},{value:"SourceCustomization",id:"sourcecustomization",level:2},{value:"RootFieldsCustomization",id:"rootfieldscustomization",level:2},{value:"SourceTypeCustomization",id:"sourcetypecustomization",level:2},{value:"CollectionName",id:"collectionname",level:2},{value:"QueryName",id:"queryname",level:2},{value:"CollectionQuery",id:"collectionquery",level:2},{value:"AllowlistScope",id:"allowlistscope",level:2},{value:"EndpointUrl",id:"endpointurl",level:2},{value:"EndpointMethods",id:"endpointmethods",level:2},{value:"EndpointDefinition",id:"endpointdef",level:2},{value:"CustomColumnNames",id:"customcolumnnames",level:2},{value:"ActionName",id:"actionname",level:2},{value:"WebhookURL",id:"webhookurl",level:2},{value:"HeaderFromValue",id:"headerfromvalue",level:2},{value:"HeaderFromEnv",id:"headerfromenv",level:2},{value:"GraphQLType",id:"graphqltype",level:2},{value:"GraphQLName",id:"graphqlname",level:2},{value:"ActionDefinition",id:"actiondefinition",level:2},{value:"InputArgument",id:"inputargument",level:2},{value:"ComputedFieldDefinition",id:"computedfielddefinition",level:2},{value:"Function Configuration",id:"function-configuration",level:2},{value:"InputObjectType",id:"inputobjecttype",level:2},{value:"InputObjectField",id:"inputobjectfield",level:3},{value:"ObjectType",id:"objecttype",level:2},{value:"ObjectField",id:"objectfield",level:3},{value:"ObjectRelationship",id:"objectrelationship",level:3},{value:"ScalarType",id:"scalartype",level:2},{value:"EnumType",id:"enumtype",level:2},{value:"EnumValue",id:"enumvalue",level:3},{value:"TriggerName",id:"triggername",level:2},{value:"OperationSpec",id:"operationspec",level:2},{value:"EventTriggerColumns",id:"eventtriggercolumns",level:2},{value:"RequestTransformation",id:"requesttransformation",level:2},{value:"TransformHeaders",id:"transformheaders",level:2},{value:"HeaderKey",id:"headerkey",level:2},{value:"HeaderValue",id:"headervalue",level:2},{value:"BodyTransform",id:"bodytransform",level:2},{value:"TemplateEngine",id:"templateengine",level:2},{value:"ResponseTransformation",id:"responsetransformation",level:2},{value:"RetryConf",id:"retryconf",level:2},{value:"RemoteRelationshipName",id:"remoterelationshipname",level:2},{value:"RemoteRelationshipDefinition",id:"remoterelationshipdefinition",level:2},{value:"ToSourceRelationshipDefinition",id:"tosourcerelationshipdefinition",level:2},{value:"ToSchemaRelationshipDefinition",id:"toschemarelationshipdefinition",level:2},{value:"RemoteField",id:"remotefield",level:2},{value:"InputArguments",id:"inputarguments",level:2},{value:"RemoteSchemaPermission",id:"remoteschemapermission",level:2},{value:"UrlFromEnv",id:"urlfromenv",level:2},{value:"RetryConfST",id:"retryconfst",level:2}],k={toc:u};function N(t){var e=t.components,a=(0,l.Z)(t,i);return(0,r.kt)("wrapper",(0,n.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api-reference-common-syntax-definitions"},"API Reference: Common syntax definitions"),(0,r.kt)("h2",{id:"tablename"},"TableName"),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String | ",(0,r.kt)("a",{href:"#qualifiedtable"},"QualifiedTable")))),(0,r.kt)("h2",{id:"qualifiedtable"},"QualifiedTable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "name": String,\n    "schema": String\n}\n')),(0,r.kt)("h2",{id:"bigquerytablename"},"BigQueryTableName"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "name": String,\n    "dataset": String\n}\n')),(0,r.kt)("h2",{id:"sourcename"},"SourceName"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")),(0,r.kt)("h2",{id:"functionname"},"FunctionName"),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String | ",(0,r.kt)("a",{href:"#qualifiedfunction"},"QualifiedFunction")))),(0,r.kt)("h2",{id:"qualifiedfunction"},"QualifiedFunction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "name": String,\n    "schema": String\n}\n')),(0,r.kt)("h2",{id:"rolename"},"RoleName"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")),(0,r.kt)("h2",{id:"computedfieldname"},"ComputedFieldName"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")),(0,r.kt)("h2",{id:"pgconfiguration"},"PGConfiguration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"connection_info"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#pgsourceconnectioninfo"},"PGSourceConnectionInfo")),(0,r.kt)("td",{parentName:"tr",align:null},"Connection parameters for the source")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"read_replicas"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("a",{parentName:"td",href:"#pgsourceconnectioninfo"},"PGSourceConnectionInfo"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional list of read replica configuration ",(0,r.kt)("em",{parentName:"td"},"(supported only in cloud/enterprise versions)"))))),(0,r.kt)("h2",{id:"mssqlconfiguration"},"MsSQLConfiguration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"connection_info"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#mssqlsourceconnectioninfo"},"MsSQLSourceConnectionInfo")),(0,r.kt)("td",{parentName:"tr",align:null},"Connection parameters for the source")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"read_replicas"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("a",{parentName:"td",href:"#mssqlsourceconnectioninfo"},"MsSQLSourceConnectionInfo"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional list of read replica configuration ",(0,r.kt)("em",{parentName:"td"},"(supported only in cloud/enterprise versions)"))))),(0,r.kt)("h2",{id:"bigqueryconfiguration"},"BigQueryConfiguration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"service_account"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"JSON String")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"JSON")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#fromenv"},"FromEnv")),(0,r.kt)("td",{parentName:"tr",align:null},"Service account for BigQuery database")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"project_id"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#fromenv"},"FromEnv")),(0,r.kt)("td",{parentName:"tr",align:null},"Project Id for BigQuery database")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"datasets"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[String]")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#fromenv"},"FromEnv")),(0,r.kt)("td",{parentName:"tr",align:null},"List of BigQuery datasets")))),(0,r.kt)("h2",{id:"pgsourceconnectioninfo"},"PGSourceConnectionInfo"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"database_url"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#fromenv"},"FromEnv")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#pgconnectionparameters"},"PGConnectionParameters")),(0,r.kt)("td",{parentName:"tr",align:null},"The database connection URL as a string, as an environment variable, or as connection parameters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pool_settings"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#pgpoolsettings"},"PGPoolSettings")),(0,r.kt)("td",{parentName:"tr",align:null},"Connection pool settings")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"use_prepared_statements"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"If set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," the server prepares statement before executing on the source database (default: ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),"). For more details, refer to the ",(0,r.kt)("a",{parentName:"td",href:"https://www.postgresql.org/docs/current/sql-prepare.html"},"Postgres docs"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"isolation_level"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"read-committed")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"repeatable-read")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"serializable")),(0,r.kt)("td",{parentName:"tr",align:null},"The transaction isolation level in which the queries made to the source will be run with (default: ",(0,r.kt)("inlineCode",{parentName:"td"},"read-committed"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl_configuration"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#pgcertsettings"},"PGCertSettings")),(0,r.kt)("td",{parentName:"tr",align:null},"The client SSL certificate settings for the database (",(0,r.kt)("em",{parentName:"td"},"Only available in Cloud"),").")))),(0,r.kt)("h2",{id:"mssqlsourceconnectioninfo"},"MsSQLSourceConnectionInfo"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"connection_string"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#fromenv"},"FromEnv")),(0,r.kt)("td",{parentName:"tr",align:null},"The database connection string, or as an environment variable")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pool_settings"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#mssqlpoolsettings"},"MsSQLPoolSettings")),(0,r.kt)("td",{parentName:"tr",align:null},"Connection pool settings")))),(0,r.kt)("h2",{id:"fromenv"},"FromEnv"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"from_env"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the environment variable")))),(0,r.kt)("h2",{id:"pgconnectionparameters"},"PGConnectionParameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"username"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The Postgres user to be connected")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"password"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The Postgres user's password")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"database"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The database name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"host"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the host to connect to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"port"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"The port number to connect with, at the server host")))),(0,r.kt)("h2",{id:"pgpoolsettings"},"PGPoolSettings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"max_connections"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of connections to be kept in the pool (default: 50)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"idle_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"The idle timeout (in seconds) per connection (default: 180)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"retries"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Number of retries to perform (default: 1)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pool_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum time to wait while acquiring a Postgres connection from the pool, in seconds (default: forever)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"connection_lifetime"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Time from connection creation after which the connection should be destroyed and a new one created. A value of 0 indicates we should never destroy an active connection. If 0 is passed, memory from large query results may not be reclaimed. (default: 600 sec)")))),(0,r.kt)("h2",{id:"pgcertsettings"},"PGCertSettings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sslmode"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The SSL connection mode. See the libpq ssl ",(0,r.kt)("a",{parentName:"td",href:"https://www.postgresql.org/docs/9.1/libpq-ssl.html"},"support docs")," for more details.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sslrootcert"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#fromenv"},"FromEnv")),(0,r.kt)("td",{parentName:"tr",align:null},"Environment variable which stores trusted certificate authorities.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sslcert"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#fromenv"},"FromEnv")),(0,r.kt)("td",{parentName:"tr",align:null},"Environment variable which stores the client certificate.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sslkey"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#fromenv"},"FromEnv")),(0,r.kt)("td",{parentName:"tr",align:null},"Environment variable which stores the client private key.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"sslpassword"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#fromenv"},"FromEnv")),(0,r.kt)("td",{parentName:"tr",align:null},"Password in the case where the sslkey is encrypted.")))),(0,r.kt)("h2",{id:"mssqlpoolsettings"},"MsSQLPoolSettings"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"max_connections"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of connections to be kept in the pool (default: 50)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"idle_timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"The idle timeout (in seconds) per connection (default: 180)")))),(0,r.kt)("h2",{id:"pgcolumntype"},"PGColumnType"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Numeric types"),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Alias"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"serial")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"autoincrementing integer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bigserial")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"autoincrementing bigint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"4 bytes, typical choice for integer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"smallint")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"2 bytes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bigint")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"8 bytes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"real")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"float4")),(0,r.kt)("td",{parentName:"tr",align:null},"6 decimal digits precision, inexact")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"double precision")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"float8")),(0,r.kt)("td",{parentName:"tr",align:null},"15 decimal digits precision, inexact")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"numeric")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"decimal")),(0,r.kt)("td",{parentName:"tr",align:null},"arbitrary precision, exact"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Character types"),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Alias"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"varchar")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"text")),(0,r.kt)("td",{parentName:"tr",align:null},"typical choice for storing string types"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Date/Time types"),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Alias"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"timestamp with time zone")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"timestamptz")),(0,r.kt)("td",{parentName:"tr",align:null},"both date and time, with time zone. Allowed values should be of ISO8601 format. E.g. 2016-07-20T17:30:15Z, 2016-07-20T17:30:15+05:30, 2016-07-20T17:30:15.234890+05:30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"time with time zone")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"timetz")),(0,r.kt)("td",{parentName:"tr",align:null},"time of day only, with time zone. Allowed values should be of ISO8601 format. E.g. 17:30:15Z, 17:30:15+05:30, 17:30:15.234890+05:30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"date")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"date (no time of day). Allowed values are yyyy-mm-dd"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Boolean type"),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Alias"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"state of true or false"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"JSON types"),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Alias"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"json")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Stored as plain text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"jsonb")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Stored in a binary format and can be indexed")))))),(0,r.kt)("h2",{id:"pgcolumn"},"PGColumn"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("h2",{id:"relationshipname"},"RelationshipName"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("h2",{id:"table-config"},"Table Config"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"custom_name"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the ",(0,r.kt)("inlineCode",{parentName:"td"},"<table-name>")," with the provided custom name value. The GraphQL nodes for the table will be generated according to the custom name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"custom_root_fields"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#custom-root-fields"},"Custom Root Fields")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the root fields")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"column_config"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#columnconfig"},"ColumnConfig")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the columns")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"custom_column_names (deprecated)"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#customcolumnnames"},"CustomColumnNames")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the column fields (deprecated in favour of custom_name on ",(0,r.kt)("a",{parentName:"td",href:"#columnconfig"},"ColumnConfig"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"comment"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the description shown in GraphQL introspection. If null or omitted then if a comment exists on the database table, it is used as the description (Postgres-only), and if not, an autogenerated description is used instead.")))),(0,r.kt)("h2",{id:"custom-root-fields"},"Custom Root Fields"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"select"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#customrootfield"},"CustomRootField")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the ",(0,r.kt)("inlineCode",{parentName:"td"},"<table-name>")," root field. Using a ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," customises the field name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"select_by_pk"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#customrootfield"},"CustomRootField")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the ",(0,r.kt)("inlineCode",{parentName:"td"},"<table-name>_by_pk")," root field. Using a ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," customises the field name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"select_aggregate"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#customrootfield"},"CustomRootField")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the ",(0,r.kt)("inlineCode",{parentName:"td"},"<table-name>_aggregate")," root field. Using a ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," customises the field name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"insert"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#customrootfield"},"CustomRootField")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the ",(0,r.kt)("inlineCode",{parentName:"td"},"insert_<table-name>")," root field. Using a ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," customises the field name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"insert_one"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#customrootfield"},"CustomRootField")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the ",(0,r.kt)("inlineCode",{parentName:"td"},"insert_<table-name>_one")," root field. Using a ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," customises the field name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"update"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#customrootfield"},"CustomRootField")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the ",(0,r.kt)("inlineCode",{parentName:"td"},"update_<table-name>")," root field. Using a ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," customises the field name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"update_by_pk"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#customrootfield"},"CustomRootField")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the ",(0,r.kt)("inlineCode",{parentName:"td"},"update_<table-name>_by_pk")," root field. Using a ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," customises the field name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"delete"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#customrootfield"},"CustomRootField")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the ",(0,r.kt)("inlineCode",{parentName:"td"},"delete_<table-name>")," root field. Using a ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," customises the field name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"delete_by_pk"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#customrootfield"},"CustomRootField")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the ",(0,r.kt)("inlineCode",{parentName:"td"},"delete_<table-name>_by_pk")," root field. Using a ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," customises the field name.")))),(0,r.kt)("h2",{id:"customrootfield"},"CustomRootField"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"The custom root field name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"comment"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the description shown for the root field in GraphQL introspection. If null or omitted then an autogenerated description is used instead.")))),(0,r.kt)("h2",{id:"columnconfig"},"ColumnConfig"),(0,r.kt)("p",null,"A ","[JSONObject][https://tools.ietf.org/html/rfc7159]"," of table column name to ",(0,r.kt)("inlineCode",{parentName:"p"},"ColumnConfigValue"),"."),(0,r.kt)("div",{class:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,'{\n    "column1" : ',(0,r.kt)("a",{href:"#columnconfigvalue"},"ColumnConfigValue"),',\n    "column2" : ',(0,r.kt)("a",{href:"#columnconfigvalue"},"ColumnConfigValue"),",\n    ...\n}"))),(0,r.kt)("h2",{id:"columnconfigvalue"},"ColumnConfigValue"),(0,r.kt)("p",null,"Configuration properties for particular column, as specified on ",(0,r.kt)("a",{parentName:"p",href:"#columnconfig"},"ColumnConfig"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"custom_name"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the name of the field in the GraphQL schema")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"comment"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the description shown for the field in GraphQL introspection. If null or omitted then an autogenerated description is used instead.")))),(0,r.kt)("h2",{id:"custom-function-root-fields"},"Custom Function Root Fields"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"function"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the ",(0,r.kt)("inlineCode",{parentName:"td"},"<function-name>")," root field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"function_aggregate"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the ",(0,r.kt)("inlineCode",{parentName:"td"},"<function-name>_aggregete")," root field")))),(0,r.kt)("h2",{id:"insertpermission"},"InsertPermission"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"check"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#boolexp"},"BoolExp")),(0,r.kt)("td",{parentName:"tr",align:null},"This expression has to hold true for every new row that is inserted")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"set"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#columnpresetexp"},"ColumnPresetsExp")),(0,r.kt)("td",{parentName:"tr",align:null},"Preset values for columns that can be sourced from session variables or static values")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"columns"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#pgcolumn"},"PGColumn")," array (or) ",(0,r.kt)("inlineCode",{parentName:"td"},"'*'")),(0,r.kt)("td",{parentName:"tr",align:null},"Can insert into only these columns (or all when ",(0,r.kt)("inlineCode",{parentName:"td"},"'*'")," is specified)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"backend_only"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"When set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," the mutation is accessible only if ",(0,r.kt)("inlineCode",{parentName:"td"},"x-hasura-use-backend-only-permissions")," session variable exists and is set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," and request is made with ",(0,r.kt)("inlineCode",{parentName:"td"},"x-hasura-admin-secret")," set if any auth is configured")))),(0,r.kt)("h2",{id:"selectpermission"},"SelectPermission"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"columns"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#pgcolumn"},"PGColumn")," array (or) ",(0,r.kt)("inlineCode",{parentName:"td"},"'*'")),(0,r.kt)("td",{parentName:"tr",align:null},"Only these columns are selectable (or all when ",(0,r.kt)("inlineCode",{parentName:"td"},"'*'")," is specified)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"computed_fields"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#computedfieldname"},"ComputedFieldName")," array"),(0,r.kt)("td",{parentName:"tr",align:null},"Only these computed fields are selectable")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filter"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#boolexp"},"BoolExp")),(0,r.kt)("td",{parentName:"tr",align:null},"Only the rows where this expression holds true are selectable")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"limit"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Integer")),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum number of rows that can be returned")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"allow_aggregations"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Toggle allowing aggregate queries")))),(0,r.kt)("h2",{id:"updatepermission"},"UpdatePermission"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"columns"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#pgcolumn"},"PGColumn")," array (or) ",(0,r.kt)("inlineCode",{parentName:"td"},"'*'")),(0,r.kt)("td",{parentName:"tr",align:null},"Only these columns are selectable (or all when ",(0,r.kt)("inlineCode",{parentName:"td"},"'*'")," is specified)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filter"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#boolexp"},"BoolExp")),(0,r.kt)("td",{parentName:"tr",align:null},"Only the rows where this precondition holds true are updatable")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"check"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#boolexp"},"BoolExp")),(0,r.kt)("td",{parentName:"tr",align:null},"Postcondition which must be satisfied by rows which have been updated")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"set"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#columnpresetexp"},"ColumnPresetsExp")),(0,r.kt)("td",{parentName:"tr",align:null},"Preset values for columns that can be sourced from session variables or static values.")))),(0,r.kt)("h2",{id:"deletepermission"},"DeletePermission"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"filter"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#boolexp"},"BoolExp")),(0,r.kt)("td",{parentName:"tr",align:null},"Only the rows where this expression holds true are deletable")))),(0,r.kt)("h2",{id:"objrelusing"},"ObjRelUsing"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"foreign_key_constraint_on"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#objrelusingchoice"},"ObjRelUsingChoice")),(0,r.kt)("td",{parentName:"tr",align:null},"The column with foreign key constraint or the remote table and column")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manual_configuration"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#objrelusingmanualmapping"},"ObjRelUsingManualMapping")),(0,r.kt)("td",{parentName:"tr",align:null},"Manual mapping of table and columns")))),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"There has to be at least one and only one of ",(0,r.kt)("inlineCode",{parentName:"p"},"foreign_key_constraint_on"),"\nand ",(0,r.kt)("inlineCode",{parentName:"p"},"manual_configuration"),"."))),(0,r.kt)("h2",{id:"objrelusingchoice"},"ObjRelUsingChoice"),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,(0,r.kt)("a",{href:"#sametable"},"SameTable")," | ",(0,r.kt)("a",{href:"#remotetable"},"RemoteTable")))),(0,r.kt)("h2",{id:"sametable"},"SameTable"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,(0,r.kt)("a",{href:"#pgcolumn"},"PGColumn"))))),(0,r.kt)("h2",{id:"remotetable"},"RemoteTable"),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,'{\n  "table"  : ',(0,r.kt)("a",{href:"#tablename"},"TableName"),'\n  "column" : ',(0,r.kt)("a",{href:"#pgcolumn"},"PGColumn"),"\n}"))),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Supported from")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Supported in ",(0,r.kt)("inlineCode",{parentName:"p"},"v2.0.0-alpha.3")," and above."))),(0,r.kt)("h2",{id:"objrelusingmanualmapping"},"ObjRelUsingManualMapping"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"remote_table"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#tablename"},"TableName")),(0,r.kt)("td",{parentName:"tr",align:null},"The table to which the relationship has to be established")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"column_mapping"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"Object (",(0,r.kt)("a",{parentName:"td",href:"#pgcolumn"},"PGColumn")," : ",(0,r.kt)("a",{parentName:"td",href:"#pgcolumn"},"PGColumn"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"Mapping of columns from current table to remote table")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"insertion_order"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#insertorder"},"InsertOrder")),(0,r.kt)("td",{parentName:"tr",align:null},"insertion order: before or after parent (default: before)")))),(0,r.kt)("h2",{id:"insertorder"},"InsertOrder"),(0,r.kt)("p",null,'Describes when should the referenced table row be inserted in relation\nto the current table row in case of a nested insert. Defaults to\n"before_parent".'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'"before_parent" | "after_parent"\n')),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Supported from")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Supported in ",(0,r.kt)("inlineCode",{parentName:"p"},"v2.0.0-alpha.3")," and above."))),(0,r.kt)("h2",{id:"arrrelusing"},"ArrRelUsing"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"foreign_key_constraint_on"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#arrrelusingfkeyon"},"ArrRelUsingFKeyOn")),(0,r.kt)("td",{parentName:"tr",align:null},"The column with foreign key constraint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manual_configuration"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#arrrelusingmanualmapping"},"ArrRelUsingManualMapping")),(0,r.kt)("td",{parentName:"tr",align:null},"Manual mapping of table and columns")))),(0,r.kt)("h2",{id:"arrrelusingfkeyon"},"ArrRelUsingFKeyOn"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"table"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#tablename"},"TableName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the table")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"column"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#pgcolumn"},"PGColumn")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the column with foreign key constraint")))),(0,r.kt)("h2",{id:"arrrelusingmanualmapping"},"ArrRelUsingManualMapping"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"remote_table"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#tablename"},"TableName")),(0,r.kt)("td",{parentName:"tr",align:null},"The table to which the relationship has to be established")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"column_mapping"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"Object (",(0,r.kt)("a",{parentName:"td",href:"#pgcolumn"},"PGColumn")," : ",(0,r.kt)("a",{parentName:"td",href:"#pgcolumn"},"PGColumn"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"Mapping of columns from current table to remote table")))),(0,r.kt)("h2",{id:"boolexp"},"BoolExp"),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,(0,r.kt)("a",{href:"#andexp"},"AndExp")," | ",(0,r.kt)("a",{href:"#orexp"},"OrExp")," | ",(0,r.kt)("a",{href:"#notexp"},"NotExp")," | ",(0,r.kt)("a",{href:"#existsexp"},"ExistsExp")," | ",(0,r.kt)("a",{href:"#trueexp"},"TrueExp")," | ",(0,r.kt)("a",{href:"#columnexp"},"ColumnExp")))),(0,r.kt)("h2",{id:"andexp"},"AndExp"),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,'{\n  "$and" : [',(0,r.kt)("a",{href:"#boolexp"},"BoolExp"),"]\n}"))),(0,r.kt)("h2",{id:"orexp"},"OrExp"),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,'{\n  "$or" : [',(0,r.kt)("a",{href:"#boolexp"},"BoolExp"),"]\n}"))),(0,r.kt)("h2",{id:"notexp"},"NotExp"),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,'{\n  "$not" : ',(0,r.kt)("a",{href:"#boolexp"},"BoolExp"),"\n}"))),(0,r.kt)("h2",{id:"existsexp"},"ExistsExp"),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,'{\n  "$exists" : {\n    "_table" : ',(0,r.kt)("a",{href:"#tablename"},"TableName"),',\n    "_where" : ',(0,r.kt)("a",{href:"#taboolexpblename"},"BoolExp"),"\n  }\n}"))),(0,r.kt)("h2",{id:"trueexp"},"TrueExp"),(0,r.kt)("pre",null,(0,r.kt)("code",null,"{}")),(0,r.kt)("h2",{id:"columnexp"},"ColumnExp"),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"{\n  ",(0,r.kt)("a",{href:"#pgcolumn"},"PGColumn")," | ","scalar ",(0,r.kt)("a",{href:"#computedfieldname"},"ComputedFieldName"),": { ",(0,r.kt)("a",{href:"#metadataoperator"},"Operator"),": Value }\n}"))),(0,r.kt)("h2",{id:"metadataoperator"},"Operator"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Generic operators (all column types except json, jsonb) :")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operator"),(0,r.kt)("th",{parentName:"tr",align:null},"PostgreSQL equivalent"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$eq"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"="))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$ne"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<>"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$gt"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},">"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$lt"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$gte"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},">="))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$lte"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<="))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$in"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IN"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$nin"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"NOT IN"))))),(0,r.kt)("p",null,"(For more details, refer to the Postgres docs for ",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/functions-comparison.html"},"comparison\noperators"),"\nand ",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/functions-comparisons.html"},"list based search\noperators"),".)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Text related operators :")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operator"),(0,r.kt)("th",{parentName:"tr",align:null},"PostgreSQL equivalent"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$like"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"LIKE"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$nlike"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"NOT LIKE"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$ilike"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ILIKE"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$nilike"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"NOT ILIKE"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$similar"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"SIMILAR TO"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$nsimilar"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"NOT SIMILAR TO"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$regex")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"~"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$iregex")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"~*"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$nregex")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"!~"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"$niregex")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"!~*"))))),(0,r.kt)("p",null,"(For more details on text related operators, refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/functions-matching.html"},"Postgres\ndocs"),".)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Operators for comparing columns (all column types except json,\njsonb):")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Column Comparison Operator")),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"{\n  ",(0,r.kt)("a",{href:"#pgcolumn"},"PGColumn"),": {\n    ",(0,r.kt)("a",{href:"#metadataoperator"},"Operator"),": {\n      ",(0,r.kt)("a",{href:"#pgcolumn"},"PGColumn"),' | ["$", ',(0,r.kt)("a",{href:"#pgcolumn"},"PGColumn"),"]\n    }\n  }\n}"))),(0,r.kt)("p",null,"Column comparison operators can be used to compare columns of the same\ntable or a related table. To compare a column of a table with another\ncolumn of :"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The same table -")),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"{\n  ",(0,r.kt)("a",{href:"#pgcolumn"},"PGColumn"),": {\n    ",(0,r.kt)("a",{href:"#metadataoperator"},"Operator"),": {\n      ",(0,r.kt)("a",{href:"#pgcolumn"},"PGColumn"),"\n    }\n  }\n}"))),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"The table on which the permission is being defined on -")),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"{\n  ",(0,r.kt)("a",{href:"#pgcolumn"},"PGColumn"),": {\n    ",(0,r.kt)("a",{href:"#metadataoperator"},"Operator"),': {\n      ["$", ',(0,r.kt)("a",{href:"#pgcolumn"},"PGColumn"),"]\n    }\n  }\n}"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operator"),(0,r.kt)("th",{parentName:"tr",align:null},"PostgreSQL equivalent"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$ceq"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"="))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$cne"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<>"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$cgt"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},">"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$clt"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$cgte"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},">="))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"$clte"')),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<="))))),(0,r.kt)("p",null,"(For more details on comparison operators, refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/functions-comparison.html"},"Postgres\ndocs"),".)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Checking for NULL values :")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operator"),(0,r.kt)("th",{parentName:"tr",align:null},"PostgreSQL equivalent"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_is_null")," (takes true/false as values)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IS NULL"))))),(0,r.kt)("p",null,"(For more details on the ",(0,r.kt)("inlineCode",{parentName:"p"},"IS NULL")," expression, refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/functions-comparison.html"},"Postgres\ndocs"),".)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"JSONB operators :")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operator"),(0,r.kt)("th",{parentName:"tr",align:null},"PostgreSQL equivalent"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_contains")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"@>"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_contained_in")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<@"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_has_key")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"?"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_has_keys_any")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"?!"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_has_keys_all")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"?&"))))),(0,r.kt)("p",null,"(For more details on JSONB operators, refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/static/functions-json.html#FUNCTIONS-JSONB-OP-TABLE"},"Postgres\ndocs"),".)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"PostGIS related operators on GEOMETRY columns:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operator"),(0,r.kt)("th",{parentName:"tr",align:null},"PostGIS equivalent"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_st_contains")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ST_Contains(column, input)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_st_crosses")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ST_Crosses(column, input)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_st_equals")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ST_Equals(column, input)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_st_3d_intersects")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ST_3DIntersects(column, input)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_st_intersects")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ST_Intersects(column, input)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_st_overlaps")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ST_Overlaps(column, input)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_st_touches")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ST_Touches(column, input)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_st_within")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ST_Within(column, input)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_st_d_within")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ST_DWithin(column, input)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_st_3d_d_within")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ST_3DDWithin(column, input)"))))),(0,r.kt)("p",null,"(For more details on spatial relationship operators, refer to the\n",(0,r.kt)("a",{parentName:"p",href:"http://postgis.net/workshops/postgis-intro/spatial_relationships.html"},"PostGIS\ndocs"),".)"),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"All operators take a JSON representation of ",(0,r.kt)("inlineCode",{parentName:"p"},"geometry/geography"),"\nvalues as input value.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The input value for ",(0,r.kt)("inlineCode",{parentName:"p"},"_st_d_within")," operator is an object:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"{\n  field-name : {_st_d_within: {distance: Float, from: Value} }\n}\n")))))),(0,r.kt)("h2",{id:"object"},"Object"),(0,r.kt)("p",null,"A ",(0,r.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7159"},"JSONObject")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "k1" : v1,\n  "k2" : v2,\n  ..\n}\n')),(0,r.kt)("h2",{id:"empty-object"},"Empty Object"),(0,r.kt)("p",null,"An empty ",(0,r.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7159"},"JSONObject")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{}\n")),(0,r.kt)("h2",{id:"columnpresetexp"},"ColumnPresetsExp"),(0,r.kt)("p",null,"A ",(0,r.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7159"},"JSONObject")," of a Postgres column\nname to value mapping, where the value can be static or derived from a\nsession variable."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "column1" : colVal1,\n  "column2" : colVal2,\n  ..\n}\n')),(0,r.kt)("p",null,"E.g. where ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," is derived from a session variable and ",(0,r.kt)("inlineCode",{parentName:"p"},"city")," is a\nstatic value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "id" : "x-hasura-User-Id",\n   "city" : "San Francisco"\n}\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},'If the value of any key begins with "x-hasura-" (',(0,r.kt)("em",{parentName:"p"},"case-insensitive"),"),\nthe value of the column specified in the key will be derived from a\nsession variable of the same name."))),(0,r.kt)("h2",{id:"remoteschemaname"},"RemoteSchemaName"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("h2",{id:"remoteschemadef"},"RemoteSchemaDef"),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,'{\n  "url" : url-string,\n  "url_from_env" : env-var-string,\n  "headers": [\n    {\n      "name": header-name-string,\n      "value": header-value-string,\n      "value_from_env": env-var-string\n    }\n  ],\n  "forward_client_headers": boolean,\n  "timeout_seconds": integer,\n  "customization": ',(0,r.kt)("a",{href:"#remoteschemacustomization"},"RemoteSchemaCustomization"),"\n\n}"))),(0,r.kt)("h2",{id:"remoteschemacustomization"},"RemoteSchemaCustomization"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "root_fields_namespace": String,\n  "type_names": {\n    "prefix": String,\n    "suffix": String,\n    "mapping": {\n        String: String\n        }\n    },\n  "field_names": [\n      {\n      "parent_type": String,\n      "prefix": String,\n      "suffix": String,\n      "mapping": {\n          String: String\n          }\n      }\n    ]\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"root_fields_namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"If provided, the fields of the remote schema will be nested under this top level field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"type_names")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#remotetypecustomization"},"RemoteTypeCustomization")),(0,r.kt)("td",{parentName:"tr",align:null},"Customization of type names in the remote schema")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"field_names")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("a",{parentName:"td",href:"#remotefieldcustomization"},"RemoteFieldCustomization"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Customization of field names for types in the remote schema")))),(0,r.kt)("h2",{id:"remotetypecustomization"},"RemoteTypeCustomization"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"prefix")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Prefix applied to type names in the remote schema")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"suffix")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Suffix applied to type names in the remote schema")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mapping")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{String: String}")),(0,r.kt)("td",{parentName:"tr",align:null},"Explicit mapping of type names in the remote schema Note: explicit mapping takes precedence over ",(0,r.kt)("inlineCode",{parentName:"td"},"prefix")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"suffix"),".")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Type name prefix and suffix will be applied to all types in the\nschema except the root types (for query, mutation and subscription),\ntypes starting with ",(0,r.kt)("inlineCode",{parentName:"li"},"__"),", standard scalar types (",(0,r.kt)("inlineCode",{parentName:"li"},"Int"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Float"),",\n",(0,r.kt)("inlineCode",{parentName:"li"},"String"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Boolean"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"ID"),"), and types with an explicit mapping."),(0,r.kt)("li",{parentName:"ul"},"Root types, types starting with ",(0,r.kt)("inlineCode",{parentName:"li"},"__"),", and standard scalar types may\nonly be customized with an explicit mapping.")),(0,r.kt)("h2",{id:"remotefieldcustomization"},"RemoteFieldCustomization"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"parent_type")),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the parent type (in the original remote schema) for fields to be customized")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"prefix")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Prefix applied to field names in parent type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"suffix")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Suffix applied to field names in the parent type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"mapping")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{String: String}")),(0,r.kt)("td",{parentName:"tr",align:null},"Explicit mapping of field names in the parent type Note: explicit mapping takes precedence over ",(0,r.kt)("inlineCode",{parentName:"td"},"prefix")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"suffix"),".")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fields that are part of an interface must be renamed consistently\nacross all object types that implement that interface.")),(0,r.kt)("h2",{id:"sourcecustomization"},"SourceCustomization"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "root_fields": {\n    "namespace": String,\n    "prefix": String,\n    "suffix": String\n    },\n  "type_names": {\n    "prefix": String,\n    "suffix": String\n    }\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"root_fields")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#rootfieldscustomization"},"RootFieldsCustomization")),(0,r.kt)("td",{parentName:"tr",align:null},"Customization of root field names for a source")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"type_names")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#sourcetypecustomization"},"SourceTypeCustomization")),(0,r.kt)("td",{parentName:"tr",align:null},"Customization of type names for a source")))),(0,r.kt)("h2",{id:"rootfieldscustomization"},"RootFieldsCustomization"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"namespace")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Namespace root field under which fields for this source will be nested")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"prefix")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Prefix to be prepended to all root fields in this source")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"suffix")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Suffix to be appended to all root fields in this source")))),(0,r.kt)("h2",{id:"sourcetypecustomization"},"SourceTypeCustomization"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"prefix")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Prefix to be prepended to all type names in this source")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"suffix")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Suffix to be appended to all type names in this source")))),(0,r.kt)("h2",{id:"collectionname"},"CollectionName"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("h2",{id:"queryname"},"QueryName"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("h2",{id:"collectionquery"},"CollectionQuery"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "name": String,\n  "query": String\n}\n')),(0,r.kt)("h2",{id:"allowlistscope"},"AllowlistScope"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,'{\n  "global": Boolean,\n  "roles" : [',(0,r.kt)("a",{href:"#rolename"},"RoleName"),"]\n}"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"global"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"When set to ",(0,r.kt)("inlineCode",{parentName:"td"},"false")," a non empty array of role names is expected in the ",(0,r.kt)("inlineCode",{parentName:"td"},"roles")," key. When set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the ",(0,r.kt)("inlineCode",{parentName:"td"},"roles")," key must be omitted. (default: ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"roles"),(0,r.kt)("td",{parentName:"tr",align:null},"when ",(0,r.kt)("inlineCode",{parentName:"td"},"global")," is set to ",(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("a",{parentName:"td",href:"#rolename"},"RoleName"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Roles to which the a query collection's queries should be accessible. ",(0,r.kt)("em",{parentName:"td"},"(supported only in cloud/enterprise versions)"))))),(0,r.kt)("h2",{id:"endpointurl"},"EndpointUrl"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("h2",{id:"endpointmethods"},"EndpointMethods"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"[String]"))),(0,r.kt)("h2",{id:"endpointdef"},"EndpointDefinition"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "query": {\n    "query_name : String, "collection_name" : CollectionName\n  }\n}\n')),(0,r.kt)("h2",{id:"customcolumnnames"},"CustomColumnNames"),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Deprecation")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"CustomColumnNames is deprecated in favour of using the ",(0,r.kt)("inlineCode",{parentName:"p"},"custom_name")," property on columns in ",(0,r.kt)("a",{parentName:"p",href:"#columnconfig"},"ColumnConfig"),".\nIf both CustomColumnNames and ",(0,r.kt)("a",{parentName:"p",href:"#columnconfig"},"ColumnConfig")," is used, any ",(0,r.kt)("inlineCode",{parentName:"p"},"custom_name ")," properties used in\n",(0,r.kt)("a",{parentName:"p",href:"#columnconfig"},"ColumnConfig")," will take precedence and any overlapped values in ",(0,r.kt)("inlineCode",{parentName:"p"},"custom_column_names")," will be discarded."))),(0,r.kt)("p",null,"A ",(0,r.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7159"},"JSONObject")," of Postgres column\nname to GraphQL name mapping"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "column1" : String,\n  "column2" : String,\n  ..\n}\n')),(0,r.kt)("h2",{id:"actionname"},"ActionName"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("h2",{id:"webhookurl"},"WebhookURL"),(0,r.kt)("p",null,"A String value which supports templating environment variables enclosed\nin ",(0,r.kt)("inlineCode",{parentName:"p"},"{{")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"}}"),"."),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("p",null,"Template example: ",(0,r.kt)("inlineCode",{parentName:"p"},"https://{{ACTION_API_DOMAIN}}/create-user")),(0,r.kt)("h2",{id:"headerfromvalue"},"HeaderFromValue"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the header")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Value of the header")))),(0,r.kt)("h2",{id:"headerfromenv"},"HeaderFromEnv"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the header")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value_from_env"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the environment variable which holds the value of the header")))),(0,r.kt)("h2",{id:"graphqltype"},"GraphQLType"),(0,r.kt)("p",null,"A GraphQL ",(0,r.kt)("a",{parentName:"p",href:"https://spec.graphql.org/June2018/#sec-Type-References"},"Type\nReference"),"\nstring."),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("p",null,"Example: ",(0,r.kt)("inlineCode",{parentName:"p"},"String!")," for non-nullable String type and ",(0,r.kt)("inlineCode",{parentName:"p"},"[String]")," for array\nof String types"),(0,r.kt)("h2",{id:"graphqlname"},"GraphQLName"),(0,r.kt)("p",null,"A string literal that conform to ",(0,r.kt)("a",{parentName:"p",href:"https://spec.graphql.org/June2018/#Name"},"GraphQL\nspec"),"."),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("h2",{id:"actiondefinition"},"ActionDefinition"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"arguments"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Array of ",(0,r.kt)("a",{parentName:"td",href:"#inputargument"},"InputArgument")),(0,r.kt)("td",{parentName:"tr",align:null},"Input arguments")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output_type"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#graphqltype"},"GraphQLType")),(0,r.kt)("td",{parentName:"tr",align:null},"The output type of the action. Only object and list of objects are allowed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"kind"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"["," ",(0,r.kt)("inlineCode",{parentName:"td"},"synchronous")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"asynchronous")," ","]"),(0,r.kt)("td",{parentName:"tr",align:null},"The kind of the mutation action (default: ",(0,r.kt)("inlineCode",{parentName:"td"},"synchronous"),"). If the type of the action is ",(0,r.kt)("inlineCode",{parentName:"td"},"query")," then the ",(0,r.kt)("inlineCode",{parentName:"td"},"kind")," field should be omitted.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"headers"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("a",{parentName:"td",href:"#headerfromvalue"},"HeaderFromValue")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"#headerfromenv"},"HeaderFromEnv")," ","]"),(0,r.kt)("td",{parentName:"tr",align:null},"List of defined headers to be sent to the handler")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"forward_client_headers"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"If set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," the client headers are forwarded to the webhook handler (default: ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"handler"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#webhookurl"},"WebhookURL")),(0,r.kt)("td",{parentName:"tr",align:null},"The action's webhook URL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"["," ",(0,r.kt)("inlineCode",{parentName:"td"},"mutation")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"query")," ","]"),(0,r.kt)("td",{parentName:"tr",align:null},"The type of the action (default: ",(0,r.kt)("inlineCode",{parentName:"td"},"mutation"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of seconds to wait for response before timing out. Default: 30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request_transform"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#requesttransformation"},"RequestTransformation")),(0,r.kt)("td",{parentName:"tr",align:null},"Request Transformation to be applied to this Action's request")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"response_transform"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#responsetransformation"},"ResponseTransformation")),(0,r.kt)("td",{parentName:"tr",align:null},"Response Transformation to be applied to this Action's response")))),(0,r.kt)("h2",{id:"inputargument"},"InputArgument"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the argument")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#graphqltype"},"GraphQLType")),(0,r.kt)("td",{parentName:"tr",align:null},"Type of the argument")))),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphQL Types")," used in creating an action must be defined before\nvia ",(0,r.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/metadata-api/custom-types"},"Custom Types")))),(0,r.kt)("h2",{id:"computedfielddefinition"},"ComputedFieldDefinition"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"function"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#functionname"},"FunctionName")),(0,r.kt)("td",{parentName:"tr",align:null},"The SQL function")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"table_argument"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the argument which accepts a table row type. If omitted, the first argument is considered a table argument")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"session_argument"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the argument which accepts the Hasura session object as a JSON/JSONB value. If omitted, the Hasura session object is not passed to the function")))),(0,r.kt)("h2",{id:"function-configuration"},"Function Configuration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"custom_name"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the ",(0,r.kt)("inlineCode",{parentName:"td"},"<function-name>")," with the provided custom name value. The GraphQL nodes for the function will be generated according to the custom name.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"custom_root_fields"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#custom-function-root-fields"},"Custom Function Root Fields")),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the root fields")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"session_argument"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",null,"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Function argument which accepts session info JSON")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"exposed_as"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",null,"String")),(0,r.kt)("td",{parentName:"tr",align:null},'In which part of the schema should we expose this function? Either "mutation" or "query".')))),(0,r.kt)("div",{id:"function-req-note"}),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Currently, only functions which satisfy the following constraints can be\nexposed over the GraphQL API (",(0,r.kt)("em",{parentName:"p"},"terminology from")," ",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/sql-createfunction.html"},"Postgres\ndocs"),"):"),(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Function behaviour"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"STABLE")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"IMMUTABLE")," functions may ",(0,r.kt)("em",{parentName:"li"},"only"),"\nbe exposed as queries (i.e. with ",(0,r.kt)("inlineCode",{parentName:"li"},"exposed_as: query"),") ",(0,r.kt)("inlineCode",{parentName:"li"},"VOLATILE"),"\nfunctions may be exposed as mutations or queries."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Return type"),": MUST be ",(0,r.kt)("inlineCode",{parentName:"li"},"SETOF <table-name>")," OR ",(0,r.kt)("inlineCode",{parentName:"li"},"<table_name>"),"\nwhere ",(0,r.kt)("inlineCode",{parentName:"li"},"<table-name>")," is already tracked"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Argument modes"),": ONLY ",(0,r.kt)("inlineCode",{parentName:"li"},"IN"))))),(0,r.kt)("h2",{id:"inputobjecttype"},"InputObjectType"),(0,r.kt)("p",null,"A simple JSON object to define ",(0,r.kt)("a",{parentName:"p",href:"https://spec.graphql.org/June2018/#sec-Input-Objects"},"GraphQL Input\nObject")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#graphqlname"},"GraphQLName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Input object type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Description of the Input object type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fields"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"Array of ",(0,r.kt)("a",{parentName:"td",href:"#inputobjectfield"},"InputObjectField")),(0,r.kt)("td",{parentName:"tr",align:null},"Fields of the Input object type")))),(0,r.kt)("h3",{id:"inputobjectfield"},"InputObjectField"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#graphqlname"},"GraphQLName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Input object field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Description of the Input object field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#graphqltype"},"GraphQLType")),(0,r.kt)("td",{parentName:"tr",align:null},"GraphQL ype of the input object field")))),(0,r.kt)("h2",{id:"objecttype"},"ObjectType"),(0,r.kt)("p",null,"A simple JSON object to define ",(0,r.kt)("a",{parentName:"p",href:"https://spec.graphql.org/June2018/#sec-Objects"},"GraphQL\nObject")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#graphqlname"},"GraphQLName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Object type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Description of the Object type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fields"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"Array of ",(0,r.kt)("a",{parentName:"td",href:"#objectfield"},"ObjectField")),(0,r.kt)("td",{parentName:"tr",align:null},"Fields of the Object type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"relationships"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Array of ",(0,r.kt)("a",{parentName:"td",href:"#objectrelationship"},"ObjectRelationship")),(0,r.kt)("td",{parentName:"tr",align:null},"Relationships of the Object type to tables")))),(0,r.kt)("h3",{id:"objectfield"},"ObjectField"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#graphqlname"},"GraphQLName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Input object field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Description of the Input object field")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#graphqltype"},"GraphQLType")),(0,r.kt)("td",{parentName:"tr",align:null},"GraphQL type of the input object field")))),(0,r.kt)("h3",{id:"objectrelationship"},"ObjectRelationship"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#relationshipname"},"RelationshipName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the relationship, shouldn't conflict with existing field names")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"["," ",(0,r.kt)("inlineCode",{parentName:"td"},"object")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"array")," ","]"),(0,r.kt)("td",{parentName:"tr",align:null},"Type of the relationship")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"remote_table"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#tablename"},"TableName")),(0,r.kt)("td",{parentName:"tr",align:null},"The table to which relationship is defined")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"field_mapping"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"Object (",(0,r.kt)("a",{parentName:"td",href:"#objectfield"},"ObjectField")," name : Remote table's ",(0,r.kt)("a",{parentName:"td",href:"#pgcolumn"},"PGColumn"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"Mapping of fields of object type to columns of remote table")))),(0,r.kt)("h2",{id:"scalartype"},"ScalarType"),(0,r.kt)("p",null,"A simple JSON object to define ",(0,r.kt)("a",{parentName:"p",href:"https://spec.graphql.org/June2018/#sec-Scalars"},"GraphQL\nScalar")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#graphqlname"},"GraphQLName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Scalar type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Description of the Scalar type")))),(0,r.kt)("h2",{id:"enumtype"},"EnumType"),(0,r.kt)("p",null,"A simple JSON object to define ",(0,r.kt)("a",{parentName:"p",href:"https://spec.graphql.org/June2018/#sec-Enums"},"GraphQL\nEnum")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#graphqlname"},"GraphQLName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the Enum type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Description of the Enum type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"values"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"Array of ",(0,r.kt)("a",{parentName:"td",href:"#enumvalue"},"EnumValue")),(0,r.kt)("td",{parentName:"tr",align:null},"Values of the Enum type")))),(0,r.kt)("h3",{id:"enumvalue"},"EnumValue"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"value"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#graphqlname"},"GraphQLName")),(0,r.kt)("td",{parentName:"tr",align:null},"Value of the Enum type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Description of the value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"is_deprecated"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"If set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the enum value is marked as deprecated")))),(0,r.kt)("h2",{id:"triggername"},"TriggerName"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("h2",{id:"operationspec"},"OperationSpec"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"columns"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#eventtriggercolumns"},"EventTriggerColumns")),(0,r.kt)("td",{parentName:"tr",align:null},'List of columns or "',"*",'" to listen to changes')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payload"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#eventtriggercolumns"},"EventTriggerColumns")),(0,r.kt)("td",{parentName:"tr",align:null},'List of columns or "',"*",'" to send as part of webhook payload')))),(0,r.kt)("h2",{id:"eventtriggercolumns"},"EventTriggerColumns"),(0,r.kt)("div",{className:"parsed-literal haskell-pre"},(0,r.kt)("pre",null,(0,r.kt)("code",null,'"*" | [',(0,r.kt)("a",{href:"#pgcolumn"},"PGColumn"),"]"))),(0,r.kt)("h2",{id:"requesttransformation"},"RequestTransformation"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"version"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},'"1" ',"|",' "2"'),(0,r.kt)("td",{parentName:"tr",align:null},"Sets the ",(0,r.kt)("inlineCode",{parentName:"td"},"RequestTransformation")," schema version. Version ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," uses a ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," for the ",(0,r.kt)("inlineCode",{parentName:"td"},"body")," field and Version ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," takes a ",(0,r.kt)("a",{parentName:"td",href:"#bodytransform"},"BodyTransform"),". Defaults to version ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),'. Warning: You must remove any  "version 2" schemas from your metadata prior to downgrading to ',(0,r.kt)("inlineCode",{parentName:"td"},"v2.4.0")," or earlier")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"method"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Change the request method to this value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"url"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Change the request URL to this value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#bodytransform"},"BodyTransform")," ","|"," String"),(0,r.kt)("td",{parentName:"tr",align:null},"A template script for transforming the request body.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"content_type"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},'Replace the Content-Type with this value. Only "application/json" and "application/x-www-form-urlencoded" are allowed. Default: "application/json"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"query_params"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Object (String : String)"),(0,r.kt)("td",{parentName:"tr",align:null},"Replace the query params on the URL with this value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request_headers"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#transformheaders"},"TransformHeaders")),(0,r.kt)("td",{parentName:"tr",align:null},"Request Header Transformation.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"template_engine"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#templateengine"},"TemplateEngine")),(0,r.kt)("td",{parentName:"tr",align:null},'Template language to be used for this transformation. Default: "Kriti"')))),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"HGE provides the following functions that can be used in the template:"),(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"not"),": This function takes a boolean and returns its negation."),(0,r.kt)("p",{parentName:"li"},"eg::"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"  > {{not true}}\n  false\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"escapeUri"),": This function takes a string and escapes it as per URI specification."),(0,r.kt)("p",{parentName:"li"},"eg::"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'  > {{ escapeUri "?foo=bar/baz" }}\n  "%3Ffoo%3Dbar%2Fbaz"\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"getSessionVariable"),": This function takes a string and returns the session variable of the given name. This function can throw the following errors:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Session variable {variable name} not found"),(0,r.kt)("li",{parentName:"ul"},"Session variable name should be a string")),(0,r.kt)("p",{parentName:"li"},"eg::"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'  > {{getSessionVariable "myVariableName"}}\n  "myVariableValue"\n')))))),(0,r.kt)("h2",{id:"transformheaders"},"TransformHeaders"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"add_headers"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Object (",(0,r.kt)("a",{parentName:"td",href:"#headerkey"},"HeaderKey")," : ",(0,r.kt)("a",{parentName:"td",href:"#headervalue"},"HeaderValue"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"A map of Header Key Value pairs to be added to the request.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"remove_headers"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Array of (",(0,r.kt)("a",{parentName:"td",href:"#headerkey"},"HeaderKey"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"Headers to be removed from the request.")))),(0,r.kt)("h2",{id:"headerkey"},"HeaderKey"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("h2",{id:"headervalue"},"HeaderValue"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("h2",{id:"bodytransform"},"BodyTransform"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"action"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"remove ","|"," transform"),(0,r.kt)("td",{parentName:"tr",align:null},"The action to perform on the request body.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"template"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"The transformation template to be applied to the body. This is required if the action is ",(0,r.kt)("em",{parentName:"td"},"transform"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"form_template"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Object (",(0,r.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/databases/postgres/postgresql-types#string"},"String")," : ",(0,r.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/databases/postgres/postgresql-types#string"},"String"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"The key/value pairs to be used in a ",(0,r.kt)("inlineCode",{parentName:"td"},"x-www-url-formencoded")," body. The values can be transfomation templates.")))),(0,r.kt)("h2",{id:"templateengine"},"TemplateEngine"),(0,r.kt)("p",null,"The JSON templating language to be used for this JSON transformation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'"Kriti"\n')),(0,r.kt)("h2",{id:"responsetransformation"},"ResponseTransformation"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"version"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},'"1" ',"|",' "2"'),(0,r.kt)("td",{parentName:"tr",align:null},"Sets the ",(0,r.kt)("em",{parentName:"td"},"RequestTransformation")," schema version. Version ",(0,r.kt)("em",{parentName:"td"},"1")," uses a ",(0,r.kt)("em",{parentName:"td"},"String")," for the ",(0,r.kt)("em",{parentName:"td"},"body")," field and Version ",(0,r.kt)("em",{parentName:"td"},"2")," takes a ",(0,r.kt)("a",{parentName:"td",href:"#bodytransform"},"BodyTransform"),". Defaults to version ",(0,r.kt)("em",{parentName:"td"},"1"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#bodytransform"},"BodyTransform")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"A template script for transforming the response body.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"template_engine"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#templateengine"},"TemplateEngine")),(0,r.kt)("td",{parentName:"tr",align:null},'Template language to be used for this transformation. Default: "Kriti"')))),(0,r.kt)("h2",{id:"retryconf"},"RetryConf"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"num_retries"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of times to retry delivery. Default: 0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"interval_sec"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of seconds to wait between each retry. Default: 10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timeout_sec"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of seconds to wait for response before timing out. Default: 60")))),(0,r.kt)("h2",{id:"remoterelationshipname"},"RemoteRelationshipName"),(0,r.kt)("div",{className:"parsed-literal"},(0,r.kt)("pre",null,(0,r.kt)("code",null,"String"))),(0,r.kt)("h2",{id:"remoterelationshipdefinition"},"RemoteRelationshipDefinition"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"to_source"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#tosourcerelationshipdefinition"},"ToSourceRelationshipDefinition")),(0,r.kt)("td",{parentName:"tr",align:null},"Remote Relationship definition to a table on a different database")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"to_remote_schema"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#toschemarelationshipdefinition"},"ToSchemaRelationshipDefinition")),(0,r.kt)("td",{parentName:"tr",align:null},"Remote Relationship definition to a Remote Schema")))),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Note: ",(0,r.kt)("em",{parentName:"p"},"One")," of and ",(0,r.kt)("em",{parentName:"p"},"only one")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"to_source")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"to_remote_schema")," must be present"))),(0,r.kt)("h2",{id:"tosourcerelationshipdefinition"},"ToSourceRelationshipDefinition"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"relationship_type"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},'"object" ',"|",' "array"'),(0,r.kt)("td",{parentName:"tr",align:null},"The type of the relationship")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"field_mapping"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"Object (",(0,r.kt)("a",{parentName:"td",href:"#pgcolumn"},"PGColumn")," : ",(0,r.kt)("a",{parentName:"td",href:"#pgcolumn"},"PGColumn"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"Mapping of columns from current table to remote table")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"source"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#sourcename"},"SourceName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the source of the target table")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"table"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#tablename"},"TableName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the target table")))),(0,r.kt)("h2",{id:"toschemarelationshipdefinition"},"ToSchemaRelationshipDefinition"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"remote_schema"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#remoteschemaname"},"RemoteSchemaName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the remote schema to join with")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"lhs_fields"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#pgcolumn"},"PGColumn")," ","|"," ",(0,r.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#computedfieldname"},"ComputedFieldName"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"Column/Computed field(s) in the table that is used for joining with remote schema field. All join keys in ",(0,r.kt)("inlineCode",{parentName:"td"},"remote_field")," must appear here.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"remote_field"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#remotefield"},"RemoteField")),(0,r.kt)("td",{parentName:"tr",align:null},"The schema tree ending at the field in remote schema which needs to be joined with.")))),(0,r.kt)("h2",{id:"remotefield"},"RemoteField"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  FieldName: {\n    "arguments": InputArguments "field": RemoteField # optional\n  }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RemoteField")," is a recursive tree structure that points to the field in\nthe remote schema that needs to be joined with. It is recursive because\nthe remote field maybe nested deeply in the remote schema."),(0,r.kt)("p",null,"Examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "message": {\n    "arguments":{\n      "message_id":"$id"\n      }\n  }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "messages": {\n    "arguments": {\n      "limit": 100\n    },\n    "field": {\n    "private": {\n      "arguments": {\n        "id" : "$id"\n      }\n    }\n    }\n  }\n}\n')),(0,r.kt)("h2",{id:"inputarguments"},"InputArguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{\n  InputField : $PGColumn | Scalar\n}\n")),(0,r.kt)("p",null,"Table columns can be referred by prefixing ",(0,r.kt)("inlineCode",{parentName:"p"},"$")," e.g ",(0,r.kt)("inlineCode",{parentName:"p"},"$id"),"."),(0,r.kt)("h2",{id:"remoteschemapermission"},"RemoteSchemaPermission"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"schema"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"GraphQL SDL"),(0,r.kt)("td",{parentName:"tr",align:null},"GraphQL SDL defining the role based schema")))),(0,r.kt)("h2",{id:"urlfromenv"},"UrlFromEnv"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"from_env"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the environment variable which has the URL")))),(0,r.kt)("h2",{id:"retryconfst"},"RetryConfST"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"num_retries"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of times to retry delivery. Default: 0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"retry_interval_seconds"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of seconds to wait between each retry. Default: 10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timeout_seconds"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of seconds to wait for response before timing out. Default: 60")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tolerance_seconds"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of seconds between scheduled time and actual delivery time that is acceptable. If the time difference is more than this, then the event is dropped. Default: 21600 (6 hours)")))))}N.isMDXComponent=!0}}]);