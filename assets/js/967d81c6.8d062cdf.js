"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4126],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),u=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(t),m=r,h=c["".concat(l,".").concat(m)]||c[m]||d[m]||i;return t?a.createElement(h,s(s({ref:n},p),{},{components:t})):a.createElement(h,s({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=c;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var u=2;u<i;u++)s[u]=t[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},22138:function(e,n,t){var a=t(67294),r=t(57932),i=t(72389),s=t(86010),o=t(71077);n.Z=function(e){var n=e.query,t=e.variables,l=e.response,u=e.viewOnly,p=void 0===u||u,d=(0,i.Z)();return a.createElement("div",{className:"graphiql "+(0,s.Z)({"with-vars":!!t,"view-only":p})},a.createElement(r.ZP,{readOnly:p,editorTheme:"dracula",schema:null,fetcher:d?(0,o.n)({url:"https://hasura.io/graphql"}):function(){return null},query:n,variables:t,response:l}))}},56747:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var a=t(83117),r=t(80102),i=(t(67294),t(3905)),s=t(22138),o=["components"],l={sidebar_label:"Paginate query results",sidebar_position:7,description:"Manage pagination on Postgres in Hasura",keywords:["hasura","docs","postgres","query","pagination"]},u="Postgres: Paginate query results",p={unversionedId:"graphql/core/databases/postgres/queries/pagination",id:"graphql/core/databases/postgres/queries/pagination",title:"Postgres: Paginate query results",description:"Manage pagination on Postgres in Hasura",source:"@site/docs/graphql/core/databases/postgres/queries/pagination.mdx",sourceDirName:"graphql/core/databases/postgres/queries",slug:"/graphql/core/databases/postgres/queries/pagination",permalink:"/graphql-engine/latest/graphql/core/databases/postgres/queries/pagination",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/databases/postgres/queries/pagination.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_label:"Paginate query results",sidebar_position:7,description:"Manage pagination on Postgres in Hasura",keywords:["hasura","docs","postgres","query","pagination"]},sidebar:"docsSidebar",previous:{title:"Distinct query results",permalink:"/graphql-engine/latest/graphql/core/databases/postgres/queries/distinct-queries"},next:{title:"Using multiple arguments",permalink:"/graphql-engine/latest/graphql/core/databases/postgres/queries/multiple-arguments"}},d={},c=[{value:"The <strong>limit</strong> &amp; <strong>offset</strong> arguments",id:"the-limit--offset-arguments",level:2},{value:"Limit results",id:"limit-results",level:2},{value:"Limit results from an offset",id:"limit-results-from-an-offset",level:2},{value:"Limit results in a nested object",id:"pg-nested-paginate",level:2},{value:"Keyset cursor based pagination",id:"keyset-cursor-based-pagination",level:2},{value:"Fetch limited results along with data aggregated over all results <em>(e.g. total count)</em> in the same query",id:"fetch-limited-results-along-with-data-aggregated-over-all-results-eg-total-count-in-the-same-query",level:2}],m={toc:c};function h(e){var n=e.components,t=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"postgres-paginate-query-results"},"Postgres: Paginate query results"),(0,i.kt)("h2",{id:"the-limit--offset-arguments"},"The ",(0,i.kt)("strong",{parentName:"h2"},"limit")," & ",(0,i.kt)("strong",{parentName:"h2"},"offset")," arguments"),(0,i.kt)("p",null,"The operators ",(0,i.kt)("inlineCode",{parentName:"p"},"limit")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"offset")," are used for pagination."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"limit")," specifies the number of rows to retain from the result set and\n",(0,i.kt)("inlineCode",{parentName:"p"},"offset")," determines which slice to retain from the results."),(0,i.kt)("p",null,"You can see the complete specification of the ",(0,i.kt)("inlineCode",{parentName:"p"},"limit")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"offset"),"\narguments in the ",(0,i.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/graphql-api/query#paginationexp"},"API reference"),"."),(0,i.kt)("p",null,"The following are examples of different pagination scenarios:"),(0,i.kt)("h2",{id:"limit-results"},"Limit results"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")," Fetch the first 5 authors from the list of all authors:"),(0,i.kt)(s.Z,{query:"query {\n  authors(\n    limit: 5\n  ) {\n    id\n    name\n  }\n}",response:'{\n  "data": {\n    "authors": [\n      {\n        "id": 1,\n        "name": "Justin"\n      },\n      {\n        "id": 2,\n        "name": "Beltran"\n      },\n      {\n        "id": 3,\n        "name": "Sidney"\n      },\n      {\n        "id": 4,\n        "name": "Anjela"\n      },\n      {\n        "id": 5,\n        "name": "Amii"\n      }\n    ]\n  }\n}',mdxType:"GraphiQLIDE"}),(0,i.kt)("h2",{id:"limit-results-from-an-offset"},"Limit results from an offset"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")," Fetch 5 authors from the list of all authors, starting with\nthe 6th one:"),(0,i.kt)(s.Z,{query:"query {\n  authors(\n    limit: 5,\n    offset:5\n  ) {\n    id\n    name\n  }\n}",response:'{\n  "data": {\n    "authors": [\n      {\n        "id": 6,\n        "name": "Corny"\n      },\n      {\n        "id": 7,\n        "name": "Berti"\n      },\n      {\n        "id": 8,\n        "name": "April"\n      },\n      {\n        "id": 9,\n        "name": "Ninnetta"\n      },\n      {\n        "id": 10,\n        "name": "Lyndsay"\n      }\n    ]\n  }\n}',mdxType:"GraphiQLIDE"}),(0,i.kt)("h2",{id:"pg-nested-paginate"},"Limit results in a nested object"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")," Fetch a list of authors and a list of their first 2\narticles:"),(0,i.kt)(s.Z,{query:"query {\n  authors {\n    id\n    name\n    articles (\n      limit: 2\n      offset: 0\n    ) {\n      id\n      title\n    }\n  }\n}",response:'{\n  "data": {\n    "authors": [\n      {\n        "id": 1,\n        "name": "Justin",\n        "articles": [\n          {\n            "id": 15,\n            "title": "vel dapibus at"\n          },\n          {\n            "id": 16,\n            "title": "sem duis aliquam"\n          }\n        ]\n      },\n      {\n        "id": 2,\n        "name": "Beltran",\n        "articles": [\n          {\n            "id": 2,\n            "title": "a nibh"\n          },\n          {\n            "id": 9,\n            "title": "sit amet"\n          }\n        ]\n      },\n      {\n        "id": 3,\n        "name": "Sidney",\n        "articles": [\n          {\n            "id": 6,\n            "title": "sapien ut"\n          },\n          {\n            "id": 11,\n            "title": "turpis eget"\n          }\n        ]\n      },\n      {\n        "id": 4,\n        "name": "Anjela",\n        "articles": [\n          {\n            "id": 1,\n            "title": "sit amet"\n          },\n          {\n            "id": 3,\n            "title": "amet justo morbi"\n          }\n        ]\n      }\n    ]\n  }\n}',mdxType:"GraphiQLIDE"}),(0,i.kt)("h2",{id:"keyset-cursor-based-pagination"},"Keyset cursor based pagination"),(0,i.kt)("p",null,"Cursors are used to traverse across rows of a dataset. They work by\nreturning a pointer to a specific row which can then be used to fetch\nthe next batch of data."),(0,i.kt)("p",null,"Keyset cursors are a column (or a set of columns) of the data that are\nused as the cursor. The column(s) used as the cursor must be unique and\nsequential. This ensures that data is read after a specific row rather\nthan relying on the position of the row in the dataset as done by\n",(0,i.kt)("inlineCode",{parentName:"p"},"offset"),", and that duplicate records are not fetched again."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"For example"),", consider the following query to fetch a list of authors\nwith a ",(0,i.kt)("inlineCode",{parentName:"p"},"where")," clause used in place of ",(0,i.kt)("inlineCode",{parentName:"p"},"offset"),":"),(0,i.kt)(s.Z,{query:"query {\n  authors(\n    limit: 5,\n    where: { id: {_gt: 5} }\n  ) {\n    id\n    name\n  }\n}",response:'{\n  "data": {\n    "authors": [\n      {\n        "id": 6,\n        "name": "Corny"\n      },\n      {\n        "id": 7,\n        "name": "Berti"\n      },\n      {\n        "id": 8,\n        "name": "April"\n      },\n      {\n        "id": 9,\n        "name": "Ninnetta"\n      },\n      {\n        "id": 10,\n        "name": "Lyndsay"\n      }\n    ]\n  }\n}',mdxType:"GraphiQLIDE"}),(0,i.kt)("p",null,"Here we are fetching authors where the value of ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," is greater than 5.\nThis will always skip the previously fetched results which would have\nbeen ids 1 to 5, ensuring no duplicate results. Column ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," is acting as\nthe cursor here, unique and sequential."),(0,i.kt)("p",null,"The choice of cursor columns depends on the order of the expected\nresults i.e. if the query has an ",(0,i.kt)("inlineCode",{parentName:"p"},"order_by")," clause, the column(s) used\nin the ",(0,i.kt)("inlineCode",{parentName:"p"},"order_by")," need to be used as the cursor."),(0,i.kt)("p",null,"Columns such as ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," (auto-incrementing integer/big integer) or\n",(0,i.kt)("inlineCode",{parentName:"p"},"created_at")," (timestamp) are commonly used as cursors when an order is\nnot explicit, as they should be unique and sequential."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Keyset cursor based pagination using ",(0,i.kt)("inlineCode",{parentName:"p"},"where")," is more performant than\nusing ",(0,i.kt)("inlineCode",{parentName:"p"},"offset")," because we can leverage database indexes on the columns\nthat are being used as cursors."))),(0,i.kt)("h2",{id:"fetch-limited-results-along-with-data-aggregated-over-all-results-eg-total-count-in-the-same-query"},"Fetch limited results along with data aggregated over all results ",(0,i.kt)("em",{parentName:"h2"},"(e.g. total count)")," in the same query"),(0,i.kt)("p",null,"Sometimes, some aggregated information on all the data is required along\nwith a subset of data."),(0,i.kt)("p",null,"E.g. the total count of results can be returned along with a page of\nresults. The count can then be used to calculate the number of pages\nbased on the limit that is set."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")," Fetch a list of articles where a certain condition is true\nand get their count. Then limit the number of articles to return."),(0,i.kt)(s.Z,{query:"query articles ($where: articles_bool_exp!) {\n  articles_aggregate(where: $where) {\n    aggregate {\n      totalCount: count\n    }\n  }\n  articles (where: $where limit: 4) {\n    id\n    title\n  }\n}",response:'{\n  "data": {\n    "articles_aggregate": {\n      "aggregate": {\n        "totalCount": 8\n      }\n    },\n    "articles": [\n      {\n        "id": 33,\n        "title": "How to make fajitas"\n      },\n      {\n        "id": 31,\n        "title": "How to make fajitas"\n      },\n      {\n        "id": 32,\n        "title": "How to make fajitas"\n      },\n      {\n        "id": 2,\n        "title": "How to climb mount everest"\n      }\n    ]\n  }\n}',mdxType:"GraphiQLIDE"}),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Caveat")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If this needs to be done over ",(0,i.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/databases/postgres/subscriptions/index"},"subscriptions"),", two\nsubscriptions will need to be run as Hasura follows the ",(0,i.kt)("a",{parentName:"p",href:"https://graphql.github.io/graphql-spec/June2018/#sec-Single-root-field"},"GraphQL spec"),"\nwhich allows for only one root field in a subscription."))))}h.isMDXComponent=!0}}]);