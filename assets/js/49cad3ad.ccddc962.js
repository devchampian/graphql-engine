"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6904],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),h=r,m=d["".concat(l,".").concat(h)]||d[h]||u[h]||o;return n?a.createElement(m,s(s({ref:t},c),{},{components:n})):a.createElement(m,s({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},50152:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var a=n(83117),r=n(80102),o=(n(67294),n(3905)),s=["components"],i={description:"Manage subscriptions on Postgres with Hasura",keywords:["hasura","docs","postgres","subscription"],slug:"index"},l="Postgres: Subscriptions",p={unversionedId:"graphql/core/databases/postgres/subscriptions/index",id:"graphql/core/databases/postgres/subscriptions/index",title:"Postgres: Subscriptions",description:"Manage subscriptions on Postgres with Hasura",source:"@site/docs/graphql/core/databases/postgres/subscriptions/index.mdx",sourceDirName:"graphql/core/databases/postgres/subscriptions",slug:"/graphql/core/databases/postgres/subscriptions/index",permalink:"/graphql-engine/latest/graphql/core/databases/postgres/subscriptions/index",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/databases/postgres/subscriptions/index.mdx",tags:[],version:"current",frontMatter:{description:"Manage subscriptions on Postgres with Hasura",keywords:["hasura","docs","postgres","subscription"],slug:"index"},sidebar:"docsSidebar",previous:{title:"Multiple mutations in a request",permalink:"/graphql-engine/latest/graphql/core/databases/postgres/mutations/multiple-mutations"},next:{title:"Sample use cases",permalink:"/graphql-engine/latest/graphql/core/databases/postgres/subscriptions/use-cases"}},c={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Implementation",id:"implementation",level:2},{value:"Convert a query to a subscription",id:"convert-a-query-to-a-subscription",level:2},{value:"Use cases",id:"use-cases",level:2},{value:"Communication protocol",id:"communication-protocol",level:2},{value:"Cookies and WebSockets",id:"cookies-and-websockets",level:2},{value:"Cookies, WebSockets and CORS",id:"cookies-websockets-and-cors",level:3}],d={toc:u};function h(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"postgres-subscriptions"},"Postgres: Subscriptions"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"A GraphQL subscription is essentially a query where the client receives\nan update whenever the value of any field changes upstream."),(0,o.kt)("p",null,"Subscriptions are supported for all kinds of queries. All the concepts\nof ",(0,o.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/databases/postgres/queries/index"},"queries")," hold true for subscriptions as well."),(0,o.kt)("h2",{id:"implementation"},"Implementation"),(0,o.kt)("p",null,"The Hasura GraphQL engine subscriptions are actually ",(0,o.kt)("strong",{parentName:"p"},"live queries"),",\ni.e. a subscription will return the latest result of the query being\nmade and not necessarily all the individual events leading up to the\nresult. By default, updates are delivered to clients every ",(0,o.kt)("strong",{parentName:"p"},"1 sec"),"."),(0,o.kt)("p",null,"See more details on\n`subscriptions execution and performance ",(0,o.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/databases/postgres/subscriptions/execution-and-performance"},"subscriptions execution and performance"),"."),(0,o.kt)("h2",{id:"convert-a-query-to-a-subscription"},"Convert a query to a subscription"),(0,o.kt)("p",null,"You can turn any query into a subscription by simply replacing ",(0,o.kt)("inlineCode",{parentName:"p"},"query"),"\nwith ",(0,o.kt)("inlineCode",{parentName:"p"},"subscription")," as the operation type."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Caveat")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Hasura follows the ",(0,o.kt)("a",{parentName:"p",href:"https://graphql.github.io/graphql-spec/June2018/#sec-Single-root-field"},"GraphQL spec"),"\nwhich allows for only one root field in a subscription."))),(0,o.kt)("h2",{id:"use-cases"},"Use cases"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/databases/postgres/subscriptions/use-cases#pg-subscribe-field"},"Subscribe to the latest value of a particular field")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/databases/postgres/subscriptions/use-cases#pg-subscribe-table"},"Subscribe to changes to a table\u2019s entries")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/databases/postgres/subscriptions/use-cases#pg-subscribe-derived"},"Subscribe to the latest value of some derived data"))),(0,o.kt)("h2",{id:"communication-protocol"},"Communication protocol"),(0,o.kt)("p",null,"Hasura GraphQL engine uses the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apollographql/subscriptions-transport-ws/blob/master/PROTOCOL.md"},"GraphQL over WebSocket Protocol"),"\nby the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apollographql/subscriptions-transport-ws"},"apollographql/subscriptions-transport-ws"),"\nlibrary and the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/enisdenjo/graphql-ws/blob/master/PROTOCOL.md"},"GraphQL over WebSocket Protocol"),"\nby the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/enisdenjo/graphql-ws"},"graphql-ws")," library for\nsending and receiving events. The GraphQL engine uses the\n",(0,o.kt)("inlineCode",{parentName:"p"},"Sec-WebSocket-Protocol")," header to determine the communication protocol\nthat'll be used. By default, the GraphQL engine will use the\n",(0,o.kt)("inlineCode",{parentName:"p"},"apollographql/subscriptions-transport-ws")," protocol."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Setting headers for subscriptions with Apollo client")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you are using Apollo Client, headers can be passed to a subscription\nby setting ",(0,o.kt)("inlineCode",{parentName:"p"},"connectionParams")," while ",(0,o.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/react/data/subscriptions/#client-setup"},"creating the wsLink"),":"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"{6-8}","{6-8}":!0},"// Create a WebSocket link:\nconst wsLink = new WebSocketLink({\n  uri: `<graphql-endpoint>`,\n  options: {\n    reconnect: true,\n    connectionParams: {\n      headers: {headers-object}\n    }\n  }\n});\n")),(0,o.kt)("p",{parentName:"div"},"See ",(0,o.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/react/data/subscriptions/#authentication-over-websocket"},"this"),"\nfor more info on using ",(0,o.kt)("inlineCode",{parentName:"p"},"connectionParams"),"."))),(0,o.kt)("h2",{id:"cookies-and-websockets"},"Cookies and WebSockets"),(0,o.kt)("p",null,"The Hasura GraphQL engine will read cookies sent by the browser when\ninitiating a WebSocket connection. The browser will send the cookie only\nif it is a secure cookie (",(0,o.kt)("inlineCode",{parentName:"p"},"secure")," flag in the cookie) and if the cookie\nhas a ",(0,o.kt)("inlineCode",{parentName:"p"},"HttpOnly")," flag."),(0,o.kt)("p",null,"Hasura will read this cookie and use it as headers when resolving\nauthorization (i.e. when resolving the auth webhook)."),(0,o.kt)("h3",{id:"cookies-websockets-and-cors"},"Cookies, WebSockets and CORS"),(0,o.kt)("p",null,"As browsers don't enforce Same Origin Policy (SOP) for websockets, the\nHasura server enforces the CORS rules when accepting the websocket\nconnection."),(0,o.kt)("p",null,"It uses the provided CORS configuration (as per ",(0,o.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/deployment/graphql-engine-flags/config-examples#configure-cors"},"Configure CORS"),")."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"When it is ",(0,o.kt)("inlineCode",{parentName:"li"},"*"),", the cookie is read and the CORS check is not\nenforced."),(0,o.kt)("li",{parentName:"ol"},"When there are explicit domains, the cookie will only be read if the\nrequest originates from one of the listed domains."),(0,o.kt)("li",{parentName:"ol"},"If CORS is disabled, the default behaviour is that the cookie won't\nbe read (because of potential security issues). To override the\nbehaviour, you can use the flag ",(0,o.kt)("inlineCode",{parentName:"li"},"--ws-read-cookie")," or the\nenvironment variable ",(0,o.kt)("inlineCode",{parentName:"li"},"HASURA_GRAPHQL_WS_READ_COOKIE"),". See\n",(0,o.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/deployment/graphql-engine-flags/reference"},"GraphQL Engine server config reference")," for the setting.")))}h.isMDXComponent=!0}}]);