"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9291],{3905:function(e,t,n){n.d(t,{Zo:function(){return f},kt:function(){return u}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},f=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=r,d=m["".concat(c,".").concat(u)]||m[u]||p[u]||i;return n?a.createElement(d,o(o({ref:t},f),{},{components:n})):a.createElement(d,o({ref:t},f))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},24152:function(e,t,n){n.r(t),n.d(t,{assets:function(){return f},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var a=n(83117),r=n(80102),i=(n(67294),n(3905)),o=["components"],l={sidebar_label:"Migration file format",sidebar_position:1,description:"Hasura Migration file format reference",keywords:["hasura","docs","migration","file format"]},c="Migration file format reference (config v1)",s={unversionedId:"graphql/core/migrations/config-v1/reference/migration-file-format",id:"graphql/core/migrations/config-v1/reference/migration-file-format",title:"Migration file format reference (config v1)",description:"Hasura Migration file format reference",source:"@site/docs/graphql/core/migrations/config-v1/reference/migration-file-format.mdx",sourceDirName:"graphql/core/migrations/config-v1/reference",slug:"/graphql/core/migrations/config-v1/reference/migration-file-format",permalink:"/docs/latest/graphql/core/migrations/config-v1/reference/migration-file-format",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/migrations/config-v1/reference/migration-file-format.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Migration file format",sidebar_position:1,description:"Hasura Migration file format reference",keywords:["hasura","docs","migration","file format"]},sidebar:"docsSidebar",previous:{title:"Migrations reference documentation (config v1)",permalink:"/docs/latest/graphql/core/migrations/config-v1/reference/"},next:{title:"Metadata file format",permalink:"/docs/latest/graphql/core/migrations/config-v1/reference/metadata-file-format"}},f={},p=[{value:"Migration filename format",id:"migration-filename-format",level:2},{value:"YAML files",id:"yaml-files",level:2},{value:"SQL Files",id:"sql-files",level:2}],m={toc:p};function u(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"migration-file-format-reference-config-v1"},"Migration file format reference (config v1)"),(0,i.kt)("h2",{id:"migration-filename-format"},"Migration filename format"),(0,i.kt)("p",null,"Each migration file has the following format:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"<version>_<name>.{up|down}.{sql|yaml}\n")),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"version")," which is the Unix timestamp in nanoseconds when the file was\ncreated is the first part. Followed by a ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," which is either manually\nadded or auto-generated by the console. The next part indicates what\nstep this is. If it is ",(0,i.kt)("inlineCode",{parentName:"p"},"up"),", it means that this is the forward step, for\ne.g. creating a relationship or a table. The ",(0,i.kt)("inlineCode",{parentName:"p"},"down")," indicates that it is\nthe corresponding rollback step. The last part denotes the file format -\nwhether it is an SQL file or a YAML file."),(0,i.kt)("h2",{id:"yaml-files"},"YAML files"),(0,i.kt)("p",null,"Each ",(0,i.kt)("inlineCode",{parentName:"p"},"up")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"down")," YAML file contains Hasura metadata API actions to be\nexecuted for that particular migration. The file should have a list of\nsuch API actions, which is represented with a ",(0,i.kt)("inlineCode",{parentName:"p"},"-")," in YAML. Here is an\nexample file:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"1551151778747_create_table_public_author.up.yaml")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'- type: run_sql\n  args:\n    sql: |\n      CREATE TABLE "public"."author" (\n        "id" SERIAL NOT NULL,\n        "name" TEXT NOT NULL,\n        PRIMARY KEY ("id")\n      );\n- type: track_table\n  args:\n    schema: public\n    name: author\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"1551151778747_create_table_public_author.down.yaml")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'- type: untrack_table\n  args:\n    schema: public\n    name: author\n- type: run_sql\n  args:\n    sql: |\n      DROP TABLE "public"."author"\n')),(0,i.kt)("p",null,"Each one of the actions in these files are actually Hasura metadata API\ncalls, which are executed in ",(0,i.kt)("strong",{parentName:"p"},"sequence")," when the migration is applied.\nYou can find all the metadata actions that are available in the\n",(0,i.kt)("a",{parentName:"p",href:"/docs/latest/graphql/core/api-reference/metadata-api/index#metadata-query"},"metadata API reference"),"."),(0,i.kt)("h2",{id:"sql-files"},"SQL Files"),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The files are there just for the user's convenience, since the SQL can\nalready be included in the YAML files."))),(0,i.kt)("p",null,"As the name indicates, an SQL file can contain SQL statements which are\nexecuted on the apply step of the migration. There can be an ",(0,i.kt)("inlineCode",{parentName:"p"},"up")," SQL\nand a ",(0,i.kt)("inlineCode",{parentName:"p"},"down")," SQL file. The SQL file is executed first if it is present\nin an up migration and the YAML file is executed first in a down\nmigration."))}u.isMDXComponent=!0}}]);