"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9523],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return u}});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var c=n.createContext({}),d=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=d(a),u=l,k=m["".concat(c,".").concat(u)]||m[u]||s[u]||r;return a?n.createElement(k,o(o({ref:t},p),{},{components:a})):n.createElement(k,o({ref:t},p))}));function u(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,o=new Array(r);o[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var d=2;d<r;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},16154:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return s}});var n=a(83117),l=a(80102),r=(a(67294),a(3905)),o=["components"],i={sidebar_label:"Query Collections",sidebar_position:13,description:"Manage query collections with the Hasura metadata API",keywords:["hasura","docs","metadata API","API reference","query collection"]},c="Metadata API Reference: Query collections",d={unversionedId:"graphql/core/api-reference/metadata-api/query-collections",id:"graphql/core/api-reference/metadata-api/query-collections",title:"Metadata API Reference: Query collections",description:"Manage query collections with the Hasura metadata API",source:"@site/docs/graphql/core/api-reference/metadata-api/query-collections.mdx",sourceDirName:"graphql/core/api-reference/metadata-api",slug:"/graphql/core/api-reference/metadata-api/query-collections",permalink:"/docs/latest/graphql/core/api-reference/metadata-api/query-collections",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/api-reference/metadata-api/query-collections.mdx",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_label:"Query Collections",sidebar_position:13,description:"Manage query collections with the Hasura metadata API",keywords:["hasura","docs","metadata API","API reference","query collection"]},sidebar:"docsSidebar",previous:{title:"Remote Relationships",permalink:"/docs/latest/graphql/core/api-reference/metadata-api/remote-relationships"},next:{title:"RESTified GraphQL Endpoints",permalink:"/docs/latest/graphql/core/api-reference/metadata-api/restified-endpoints"}},p={},s=[{value:"Introduction",id:"introduction",level:2},{value:"create_query_collection",id:"metadata-create-query-collection",level:2},{value:"Args Syntax",id:"metadata-create-query-collection-syntax",level:3},{value:"drop_query_collection",id:"metadata-drop-query-collection",level:2},{value:"Args syntax",id:"metadata-drop-query-collection-syntax",level:3},{value:"add_query_to_collection",id:"metadata-add-query-to-collection",level:2},{value:"Args Syntax",id:"metadata-add-query-to-collection-syntax",level:3},{value:"drop_query_from_collection",id:"metadata-drop-query-from-collection",level:2},{value:"Args Syntax",id:"metadata-drop-query-from-collection-syntax",level:3},{value:"add_collection_to_allowlist",id:"metadata-add-collection-to-allowlist",level:2},{value:"Args Syntax",id:"metadata-add-collection-to-allowlist-syntax",level:3},{value:"update_scope_of_collection_in_allowlist",id:"metadata-update-scope-of-collection-in-allowlist",level:2},{value:"Args Syntax",id:"metadata-update-scope-of-collection-in-allowlist-syntax",level:3},{value:"drop_collection_from_allowlist",id:"metadata-drop-collection-from-allowlist",level:2},{value:"Args Syntax",id:"metadata-drop-collection-from-allowlist-syntax",level:3}],m={toc:s};function u(e){var t=e.components,a=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"metadata-api-reference-query-collections"},"Metadata API Reference: Query collections"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Group queries using query collections."),(0,r.kt)("p",null,"Create/drop query collections and add/drop a query to a collection using\nthe following query types."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Supported from")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The metadata API is supported for versions ",(0,r.kt)("inlineCode",{parentName:"p"},"v2.0.0")," and above and\nreplaces the older ",(0,r.kt)("a",{parentName:"p",href:"/docs/latest/graphql/core/api-reference/schema-metadata-api/index"},"schema/metadata API"),"."))),(0,r.kt)("h2",{id:"metadata-create-query-collection"},"create_query_collection"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"create_query_collection")," is used to define a collection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "create_query_collection",\n      "args": {\n          "name": "my_collection",\n          "comment": "an optional comment",\n          "definition": {\n              "queries": [\n                  {\n                      "name": "query_1",\n                      "query": "query { test { id name } }"\n                  }\n              ]\n          }\n      }\n}\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The queries in query collections are validated against the schema. So, adding an invalid query would result in inconsistent metadata error.\nAs the query collection is used in allowlists and REST endpoints, they are validated as well."))),(0,r.kt)("h3",{id:"metadata-create-query-collection-syntax"},"Args Syntax"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionname"},"CollectionName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the query collection")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"definition"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionquery"},"CollectionQuery")," array"),(0,r.kt)("td",{parentName:"tr",align:null},"List of queries")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"comment"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional comment")))),(0,r.kt)("h2",{id:"metadata-drop-query-collection"},"drop_query_collection"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"drop_query_collection")," is used to drop a collection"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "drop_query_collection",\n    "args": {\n        "collection": "my_collection",\n        "cascade": false\n    }\n}\n')),(0,r.kt)("h3",{id:"metadata-drop-query-collection-syntax"},"Args syntax"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"collection"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionname"},"CollectionName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the query collection")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cascade"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"When set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the collection (if present) is removed from the allowlist")))),(0,r.kt)("h2",{id:"metadata-add-query-to-collection"},"add_query_to_collection"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"add_query_to_collection")," is used to add a query to a given collection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "add_query_to_collection",\n    "args": {\n        "collection_name": "my_collection",\n        "query_name": "query_2",\n        "query": "query {test {name}}"\n    }\n}\n')),(0,r.kt)("h3",{id:"metadata-add-query-to-collection-syntax"},"Args Syntax"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"collection_name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionname"},"CollectionName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the query collection")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"query_name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#queryname"},"QueryName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the query")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"query"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"The GraphQL query text")))),(0,r.kt)("h2",{id:"metadata-drop-query-from-collection"},"drop_query_from_collection"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"drop_query_from_collection")," is used to remove a query from a given collection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "drop_query_from_collection",\n    "args": {\n        "collection_name": "my_collection",\n        "query_name": "query_2"\n    }\n}\n')),(0,r.kt)("h3",{id:"metadata-drop-query-from-collection-syntax"},"Args Syntax"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"collection_name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionname"},"CollectionName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the query collection")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"query_name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#queryname"},"QueryName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the query")))),(0,r.kt)("h2",{id:"metadata-add-collection-to-allowlist"},"add_collection_to_allowlist"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"add_collection_to_allowlist")," is used to add a collection to the allow-list. It is possible to specify a scope, defaulting to global."),(0,r.kt)("p",null,"If the given collection already exists in the allowlist regardless of scope, ",(0,r.kt)("inlineCode",{parentName:"p"},"add_collection_to_allowlist")," is a no-op.\nTo change the scope, use ",(0,r.kt)("a",{parentName:"p",href:"#metadata-update-scope-of-collection-in-allowlist"},"update_scope_of_collection_in_allowlist"),"."),(0,r.kt)("p",null,"If the scope is global, all roles will be able to access the queries present in the query collection:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},' POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "add_collection_to_allowlist",\n    "args": {\n        "collection": "my_collection",\n        "scope": {\n            "global": true\n        }\n    }\n}\n')),(0,r.kt)("p",null,"If the scope is not global, only the listed roles are allowed to\nto access the queries:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "add_collection_to_allowlist",\n    "args": {\n        "collection": "role_based_query_collection",\n        "scope": {\n            "global": false,\n            "roles": [\n              "user",\n              "editor"\n            ]\n        }\n    }\n}\n')),(0,r.kt)("p",null,"If a query occurs in multiple collections, a role will be allowed to access the query if it is listed for any of the collections."),(0,r.kt)("h3",{id:"metadata-add-collection-to-allowlist-syntax"},"Args Syntax"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"collection"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionname"},"CollectionName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of a query collection to be added to the allow-list")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"scope"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#allowlistscope"},"AllowlistScope")),(0,r.kt)("td",{parentName:"tr",align:null},"Scope of the collection in the allowlist. (default: ",(0,r.kt)("inlineCode",{parentName:"td"},"{global: true}"),") When the scope is global, the query collection's queries will be accessible to all roles. When the scope is non-global, the query collection's queries will be accessible to all of the roles listed in the scope. ",(0,r.kt)("em",{parentName:"td"},"(non-global scope supported only in cloud/enterprise versions)"))))),(0,r.kt)("h2",{id:"metadata-update-scope-of-collection-in-allowlist"},"update_scope_of_collection_in_allowlist"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"update_scope_of_collection_in_allowlist")," is used to add change the\nscope of a collection in the allowlist. Its effect is the same as first\ndropping the collection from the allowlist using\n",(0,r.kt)("a",{parentName:"p",href:"#metadata-drop-collection-from-allowlist"},"drop_collection_from_allowlist"),", and then adding it with the given\nscope using ",(0,r.kt)("a",{parentName:"p",href:"#metadata-add-collection-to-allowlist"},"add_collection_to_allowlist"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "update_scope_of_collection_in_allowlist",\n    "args": {\n        "collection": "previously_global_query_collection",\n        "scope": {\n            "global": false,\n            "roles": [\n               "user",\n               "editor"\n            ]\n        }\n    }\n}\n')),(0,r.kt)("h3",{id:"metadata-update-scope-of-collection-in-allowlist-syntax"},"Args Syntax"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"collection"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionname"},"CollectionName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of a query collection to be added to the allow-list")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"scope"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#allowlistscope"},"AllowlistScope")),(0,r.kt)("td",{parentName:"tr",align:null},"Scope of the collection in the allowlist. When the scope is global, the query collection's queries will be accessible to all roles. When the scope is non-global, the query collection's queries will be accessible to all of the roles listed in the scope. ",(0,r.kt)("em",{parentName:"td"},"(non-global scope supported only in cloud/enterprise versions)"))))),(0,r.kt)("h2",{id:"metadata-drop-collection-from-allowlist"},"drop_collection_from_allowlist"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"drop_collection_from_allowlist")," is used to remove a collection from the allow-list."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "drop_collection_from_allowlist",\n    "args": {\n        "collection": "my_collection_1"\n    }\n}\n')),(0,r.kt)("h3",{id:"metadata-drop-collection-from-allowlist-syntax"},"Args Syntax"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"collection"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionname"},"CollectionName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of a query collection to be removed from the allow-list")))))}u.isMDXComponent=!0}}]);