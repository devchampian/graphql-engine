"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6503],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return g}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),l=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=l(a),g=r,u=d["".concat(p,".").concat(g)]||d[g]||c[g]||i;return a?n.createElement(u,o(o({ref:t},m),{},{components:a})):n.createElement(u,o({ref:t},m))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=a[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},22660:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return g},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c}});var n=a(83117),r=a(80102),i=(a(67294),a(3905)),o=["components"],s={sidebar_label:"Auto-apply migrations/metadata when the server starts (config v2)",sidebar_position:1,description:"Auto-apply migrations and metadata when the server starts",keywords:["hasura","docs","auto-apply","migration","metadata","server"]},p="Auto-apply migrations/metadata when the server starts (config v2)",l={unversionedId:"graphql/core/migrations/config-v2/advanced/auto-apply-migrations",id:"graphql/core/migrations/config-v2/advanced/auto-apply-migrations",title:"Auto-apply migrations/metadata when the server starts (config v2)",description:"Auto-apply migrations and metadata when the server starts",source:"@site/docs/graphql/core/migrations/config-v2/advanced/auto-apply-migrations.mdx",sourceDirName:"graphql/core/migrations/config-v2/advanced",slug:"/graphql/core/migrations/config-v2/advanced/auto-apply-migrations",permalink:"/graphql-engine/latest/graphql/core/migrations/config-v2/advanced/auto-apply-migrations",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/migrations/config-v2/advanced/auto-apply-migrations.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Auto-apply migrations/metadata when the server starts (config v2)",sidebar_position:1,description:"Auto-apply migrations and metadata when the server starts",keywords:["hasura","docs","auto-apply","migration","metadata","server"]},sidebar:"docsSidebar",previous:{title:"Advanced use cases",permalink:"/graphql-engine/latest/graphql/core/migrations/config-v2/advanced/index"},next:{title:"Writing migrations manually (config v2)",permalink:"/graphql-engine/latest/graphql/core/migrations/config-v2/advanced/writing-migrations-manually"}},m={},c=[{value:"<strong>cli-migrations</strong> image",id:"cli-migrations-image",level:2},{value:"Applying migrations",id:"applying-migrations",level:2},{value:"Applying only metadata",id:"auto-apply-metadata-v2",level:2}],d={toc:c};function g(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"auto-apply-migrationsmetadata-when-the-server-starts-config-v2"},"Auto-apply migrations/metadata when the server starts (config v2)"),(0,i.kt)("h2",{id:"cli-migrations-image"},(0,i.kt)("strong",{parentName:"h2"},"cli-migrations")," image"),(0,i.kt)("p",null,"Hasura ships a special Docker image which can be used to automatically\napply migrations/metadata when the server starts:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"hasura/graphql-engine:<version>.cli-migrations-v2\n")),(0,i.kt)("p",null,"This container image includes the Hasura CLI at ",(0,i.kt)("inlineCode",{parentName:"p"},"/bin/hasura-cli")," and\ncan be used for running any other CI/CD scripts in your workflow."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"For ",(0,i.kt)("inlineCode",{parentName:"p"},"config v3"),", see ",(0,i.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/migrations/advanced/auto-apply-migrations"},"Auto-apply migrations/metadata when the server starts"),"."))),(0,i.kt)("h2",{id:"applying-migrations"},"Applying migrations"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"migrations")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata")," directories created by the Hasura CLI in\na Hasura project can be mounted at the ",(0,i.kt)("inlineCode",{parentName:"p"},"/hasura-migrations")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"/hasura-metadata")," path of this Docker container and the container's\nentry point script will apply the migrations and metadata before\nstarting the server. If no directory is mounted at the designated paths,\nthe server will start ignoring the migrations and/or metadata."),(0,i.kt)("p",null,"If you want to mount the migrations/metadata directories at some\nlocation other than the above, set the following environment variables:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"HASURA_GRAPHQL_MIGRATIONS_DIR=/custom-path-for-migrations\nHASURA_GRAPHQL_METADATA_DIR=/custom-path-for-metadata\n")),(0,i.kt)("p",null,"Once the migrations and metadata are applied, the container resumes\noperation as a normal Hasura GraphQL engine server."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Start Hasura after applying the migrations and metadata present in the Hasura project\ndocker run -p 8080:8080 \\\n       -v /home/me/my-project/migrations:/hasura-migrations \\\n       -v /home/me/my-project/metadata:/hasura-metadata \\\n       -e HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:@postgres:5432/postgres \\\n       hasura/graphql-engine:v1.2.0.cli-migrations-v2\n")),(0,i.kt)("h2",{id:"auto-apply-metadata-v2"},"Applying only metadata"),(0,i.kt)("p",null,"If you're managing migrations with a different tool and want to use this\nimage to apply only the metadata, mount the ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata")," directory of your\nHasura project at the ",(0,i.kt)("inlineCode",{parentName:"p"},"/hasura-metadata")," path of this Docker container\nthe container\u2019s entry point script will apply the metadata before\nstarting the server."))}g.isMDXComponent=!0}}]);