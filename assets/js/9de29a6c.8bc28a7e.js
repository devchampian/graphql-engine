"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2452],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),g=l(t),d=o,m=g["".concat(c,".").concat(d)]||g[d]||p[d]||a;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=g;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},22138:function(e,n,t){var r=t(67294),o=t(57932),a=t(72389),i=t(86010),s=t(71077);n.Z=function(e){var n=e.query,t=e.variables,c=e.response,l=e.viewOnly,u=void 0===l||l,p=(0,a.Z)();return r.createElement("div",{className:"graphiql "+(0,i.Z)({"with-vars":!!t,"view-only":u})},r.createElement(o.ZP,{readOnly:u,editorTheme:"dracula",schema:null,fetcher:p?(0,s.n)({url:"https://hasura.io/graphql"}):function(){return null},query:n,variables:t,response:c}))}},5751:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return g}});var r=t(83117),o=t(80102),a=(t(67294),t(3905)),i=t(22138),s=["components"],c={sidebar_label:"Debugging actions",sidebar_position:10,description:"Debugging Hasura actions",keywords:["hasura","docs","actions","debug","debugging"]},l="Debugging actions",u={unversionedId:"graphql/core/actions/debugging",id:"graphql/core/actions/debugging",title:"Debugging actions",description:"Debugging Hasura actions",source:"@site/docs/graphql/core/actions/debugging.mdx",sourceDirName:"graphql/core/actions",slug:"/graphql/core/actions/debugging",permalink:"/graphql-engine/latest/graphql/core/actions/debugging",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/actions/debugging.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_label:"Debugging actions",sidebar_position:10,description:"Debugging Hasura actions",keywords:["hasura","docs","actions","debug","debugging"]},sidebar:"docsSidebar",previous:{title:"REST Connectors for actions",permalink:"/graphql-engine/latest/graphql/core/actions/rest-connectors"},next:{title:"Cleaning up async action logs",permalink:"/graphql-engine/latest/graphql/core/actions/logs-clean-up"}},p={},g=[],d={toc:g};function m(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"debugging-actions"},"Debugging actions"),(0,a.kt)("p",null,"While you're developing actions for your application, to debug faster\nyou may want to see the exact details of the webhook call for the action\nas well."),(0,a.kt)("p",null,"To do so, start the server in ",(0,a.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/deployment/graphql-engine-flags/config-examples#dev-mode"},"debugging mode"),". In the case\nof errors, the GraphQL response will contain debugging information of\nthe webhook calls in the ",(0,a.kt)("inlineCode",{parentName:"p"},"extensions.internal")," field."),(0,a.kt)("p",null,"If you are using action transforms, then you will also see the\n",(0,a.kt)("inlineCode",{parentName:"p"},"transformed_request")," inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"request")," field."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"For example"),":"),(0,a.kt)(i.Z,{query:'mutation {\n  create_user(email: "foo@bar.com", name: "Foo"){\n    id\n    user {\n      name\n      email\n    }\n  }\n}',response:'{\n  "errors": [\n    {\n      "message": "got scalar String for the action webhook response, expecting UserId",\n      "extensions": {\n        "code": "unexpected",\n        "path": "$",\n        "internal": {\n          "error": "got scalar String for the action webhook response, expecting UserId",\n          "response": {\n            "status": 200,\n            "headers": [\n              {\n                "value": "application/json",\n                "name": "Content-Type"\n              }\n            ],\n            "body": "[incorrect response]"\n          },\n          "request": {\n            "url": "http://127.0.0.1:5593/scalar-response",\n            "headers": [],\n            "body": {\n              "action": {\n                "name": "create_user"\n              },\n              "session_variables": {\n                "x-hasura-role": "admin"\n              },\n              "input": {\n                "email": "foo@boo.com",\n                "name": "Foo"\n              },\n              "request_query": "mutation {\\n    create_user(email: \\"foo@bar.com\\", name: \\"Foo\\"){\\n id\\n user {\\n name\\n email\\n }\\n }\\n }\\n"\n            },\n            "transformed_request": {\n              "query_string": "",\n              "body": "[transformed body]",\n              "url": "http://127.0.0.1:3000/abcd",\n              "headers": [\n                [\n                  "Content-Type",\n                  "application/json"\n                ]\n              ],\n              "method": "PATCH",\n              "response_timeout": "30000000"\n            },\n          }\n        }\n      }\n    }\n  ]\n}\n',mdxType:"GraphiQLIDE"}),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Additional Resources")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Introduction to Hasura Actions - ",(0,a.kt)("a",{parentName:"p",href:"https://hasura.io/events/webinar/hasura-actions/?pg=docs&plcmt=body&cta=view-recording&tech="},"View\nRecording"),"."))))}m.isMDXComponent=!0}}]);