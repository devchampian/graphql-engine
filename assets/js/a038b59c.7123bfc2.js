"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[387],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return c}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),s=d(a),c=r,u=s["".concat(o,".").concat(c)]||s[c]||g[c]||l;return a?n.createElement(u,i(i({ref:t},m),{},{components:a})):n.createElement(u,i({ref:t},m))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=s;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},40191:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return p},metadata:function(){return d},toc:function(){return g}});var n=a(83117),r=a(80102),l=(a(67294),a(3905)),i=["components"],p={sidebar_label:"Event Triggers",sidebar_position:8,description:"Manage event triggers with the Hasura schema/metadata API",keywords:["hasura","docs","schema/metadata API","API reference","event trigger"]},o="Schema/Metadata API Reference: Event Triggers (Deprecated)",d={unversionedId:"graphql/core/api-reference/schema-metadata-api/event-triggers",id:"graphql/core/api-reference/schema-metadata-api/event-triggers",title:"Schema/Metadata API Reference: Event Triggers (Deprecated)",description:"Manage event triggers with the Hasura schema/metadata API",source:"@site/docs/graphql/core/api-reference/schema-metadata-api/event-triggers.mdx",sourceDirName:"graphql/core/api-reference/schema-metadata-api",slug:"/graphql/core/api-reference/schema-metadata-api/event-triggers",permalink:"/graphql-engine/latest/graphql/core/api-reference/schema-metadata-api/event-triggers",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/api-reference/schema-metadata-api/event-triggers.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_label:"Event Triggers",sidebar_position:8,description:"Manage event triggers with the Hasura schema/metadata API",keywords:["hasura","docs","schema/metadata API","API reference","event trigger"]},sidebar:"docsSidebar",previous:{title:"Computed Fields",permalink:"/graphql-engine/latest/graphql/core/api-reference/schema-metadata-api/computed-field"},next:{title:"Scheduled Triggers",permalink:"/graphql-engine/latest/graphql/core/api-reference/schema-metadata-api/scheduled-triggers"}},m={},g=[{value:"Introduction",id:"introduction",level:2},{value:"create_event_trigger",id:"schema-metadata-create-event-trigger",level:2},{value:"Args syntax",id:"schema-metadata-create-event-trigger-syntax",level:3},{value:"delete_event_trigger",id:"schema-metadata-delete-event-trigger",level:2},{value:"Args syntax",id:"schema-metadata-delete-event-trigger-syntax",level:3},{value:"redeliver_event",id:"schema-metadata-redeliver-event",level:2},{value:"Args syntax",id:"schema-metadata-redeliver-event-syntax",level:3},{value:"invoke_event_trigger",id:"schema-metadata-invoke-event-trigger",level:2},{value:"Args syntax",id:"schema-metadata-invoke-event-trigger-syntax",level:3}],s={toc:g};function c(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"schemametadata-api-reference-event-triggers-deprecated"},"Schema/Metadata API Reference: Event Triggers (Deprecated)"),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Deprecation")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"In versions ",(0,l.kt)("inlineCode",{parentName:"p"},"v2.0.0")," and above, the schema/metadata API is deprecated in\nfavour of the ",(0,l.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/schema-api/index"},"schema API")," and the\n",(0,l.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/metadata-api/index"},"metadata API"),"."),(0,l.kt)("p",{parentName:"div"},"Though for backwards compatibility, the schema/metadata APIs will\ncontinue to function."))),(0,l.kt)("h2",{id:"introduction"},"Introduction"),(0,l.kt)("p",null,"Event triggers are used to capture database changes and send them to a\nconfigured webhook."),(0,l.kt)("h2",{id:"schema-metadata-create-event-trigger"},"create_event_trigger"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"create_event_trigger")," is used to create a new event trigger or replace\nan existing event trigger."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "create_event_trigger",\n    "args" : {\n        "name": "sample_trigger",\n        "table": {\n           "name": "users",\n           "schema": "public"\n        },\n        "webhook": "https://httpbin.org/post",\n        "insert": {\n            "columns": "*",\n            "payload": ["username"]\n        },\n        "update": {\n            "columns": ["username", "real_name"],\n            "payload": "*"\n        },\n        "delete": {\n            "columns": "*"\n        },\n        "headers":[\n          {\n              "name": "X-Hasura-From-Val",\n              "value": "myvalue"\n          },\n          {\n              "name": "X-Hasura-From-Env",\n              "value_from_env": "EVENT_WEBHOOK_HEADER"\n          }\n        ],\n        "replace": false\n    }\n}\n')),(0,l.kt)("h3",{id:"schema-metadata-create-event-trigger-syntax"},"Args syntax"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Schema"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#triggername"},"TriggerName")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the event trigger")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"table"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#qualifiedtable"},"QualifiedTable")),(0,l.kt)("td",{parentName:"tr",align:null},"Object with table name and schema")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"webhook"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Full url of webhook (","*",")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"webhook_from_env"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Environment variable name of webhook (must exist at boot time) (","*",")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"insert"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#operationspec"},"OperationSpec")),(0,l.kt)("td",{parentName:"tr",align:null},"Specification for insert operation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"update"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#operationspec"},"OperationSpec")),(0,l.kt)("td",{parentName:"tr",align:null},"Specification for update operation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"delete"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#operationspec"},"OperationSpec")),(0,l.kt)("td",{parentName:"tr",align:null},"Specification for delete operation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"headers"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"["," ",(0,l.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#headerfromvalue"},"HeaderFromValue")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#headerfromenv"},"HeaderFromEnv")," ","]"),(0,l.kt)("td",{parentName:"tr",align:null},"List of headers to be sent with the webhook")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"retry_conf"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#retryconf"},"RetryConf")),(0,l.kt)("td",{parentName:"tr",align:null},"Retry configuration if event delivery fails")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"replace"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"If set to true, the event trigger is replaced with the new definition")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"enable_manual"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"If set to true, the event trigger can be invoked manually")))),(0,l.kt)("p",null,"(","*",") Either ",(0,l.kt)("inlineCode",{parentName:"p"},"webhook")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"webhook_from_env")," are required."),(0,l.kt)("h2",{id:"schema-metadata-delete-event-trigger"},"delete_event_trigger"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"delete_event_trigger")," is used to delete an event trigger."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "delete_event_trigger",\n    "args" : {\n        "name": "sample_trigger"\n    }\n}\n')),(0,l.kt)("h3",{id:"schema-metadata-delete-event-trigger-syntax"},"Args syntax"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Schema"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#triggername"},"TriggerName")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the event trigger")))),(0,l.kt)("h2",{id:"schema-metadata-redeliver-event"},"redeliver_event"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"redeliver_event")," is used to redeliver an existing event. For example,\nif an event is marked as error ( say it did not succeed after retries),\nyou can redeliver it using this API. Note that this will reset the count\nof retries so far. If the event fails to deliver, it will be retried\nautomatically according to its ",(0,l.kt)("inlineCode",{parentName:"p"},"retry_conf"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "redeliver_event",\n    "args" : {\n        "event_id": "ad4f698f-a14e-4a6d-a01b-38cd252dd8bf"\n    }\n}\n')),(0,l.kt)("h3",{id:"schema-metadata-redeliver-event-syntax"},"Args syntax"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Schema"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"event_id"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"UUID of the event")))),(0,l.kt)("h2",{id:"schema-metadata-invoke-event-trigger"},"invoke_event_trigger"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"invoke_event_trigger")," is used to invoke an event trigger with custom payload."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "invoke_event_trigger",\n    "args" : {\n        "name": "sample_trigger",\n        "payload": {}\n    }\n}\n')),(0,l.kt)("h3",{id:"schema-metadata-invoke-event-trigger-syntax"},"Args syntax"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Schema"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#triggername"},"TriggerName")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the event trigger")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"payload"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"JSON"),(0,l.kt)("td",{parentName:"tr",align:null},"Some JSON payload to send to trigger")))))}c.isMDXComponent=!0}}]);