"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1500],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return u}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},p=Object.keys(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),l=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,p=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=l(a),u=r,f=m["".concat(s,".").concat(u)]||m[u]||d[u]||p;return a?n.createElement(f,i(i({ref:t},c),{},{components:a})):n.createElement(f,i({ref:t},c))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=a.length,i=new Array(p);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var l=2;l<p;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},37538:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return d}});var n=a(83117),r=a(80102),p=(a(67294),a(3905)),i=["components"],o={sidebar_label:"Custom Types",sidebar_position:15,description:"Define custom types with the Hasura metadata API",keywords:["hasura","docs","metadata API","API reference","custom types"]},s="Metadata API Reference: Custom Types",l={unversionedId:"graphql/core/api-reference/metadata-api/custom-types",id:"graphql/core/api-reference/metadata-api/custom-types",title:"Metadata API Reference: Custom Types",description:"Define custom types with the Hasura metadata API",source:"@site/docs/graphql/core/api-reference/metadata-api/custom-types.mdx",sourceDirName:"graphql/core/api-reference/metadata-api",slug:"/graphql/core/api-reference/metadata-api/custom-types",permalink:"/graphql-engine/latest/graphql/core/api-reference/metadata-api/custom-types",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/api-reference/metadata-api/custom-types.mdx",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_label:"Custom Types",sidebar_position:15,description:"Define custom types with the Hasura metadata API",keywords:["hasura","docs","metadata API","API reference","custom types"]},sidebar:"docsSidebar",previous:{title:"RESTified GraphQL Endpoints",permalink:"/graphql-engine/latest/graphql/core/api-reference/metadata-api/restified-endpoints"},next:{title:"Actions",permalink:"/graphql-engine/latest/graphql/core/api-reference/metadata-api/actions"}},c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"set_custom_types",id:"metadata-set-custom-types",level:2},{value:"Args syntax",id:"metadata-set-custom-types-syntax",level:3}],m={toc:d};function u(e){var t=e.components,a=(0,r.Z)(e,i);return(0,p.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"metadata-api-reference-custom-types"},"Metadata API Reference: Custom Types"),(0,p.kt)("h2",{id:"introduction"},"Introduction"),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Custom Types")," are user-defined GraphQL types which help to define\n",(0,p.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/metadata-api/actions"},"Actions"),"."),(0,p.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,p.kt)("div",{parentName:"div",className:"admonition-heading"},(0,p.kt)("h5",{parentName:"div"},(0,p.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,p.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,p.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Supported from")),(0,p.kt)("div",{parentName:"div",className:"admonition-content"},(0,p.kt)("p",{parentName:"div"},"The metadata API is supported for versions ",(0,p.kt)("inlineCode",{parentName:"p"},"v2.0.0")," and above and\nreplaces the older ",(0,p.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/schema-metadata-api/index"},"schema/metadata API"),"."))),(0,p.kt)("h2",{id:"metadata-set-custom-types"},"set_custom_types"),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"set_custom_types")," is used to set user-defined GraphQL types. This API\nwill replace the given types with existing ones."),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n  "type": "set_custom_types",\n  "args": {\n    "scalars": [],\n    "enums": [],\n    "input_objects": [\n      {\n        "name": "User",\n        "fields": [\n          {\n            "name": "username",\n            "type": "String!"\n          },\n          {\n            "name": "password",\n            "type": "String!"\n          }\n        ]\n      }\n    ],\n    "objects": [\n      {\n        "name": "UserId",\n        "fields": [\n          {\n            "name": "id",\n            "type": "Int!"\n          }\n        ],\n        "relationships": [\n          {\n            "name": "posts",\n            "type": "array",\n            "remote_table": "post",\n            "field_mapping": {\n              "id": "user_id"\n            }\n          }\n        ]\n      }\n    ]\n  }\n}\n')),(0,p.kt)("h3",{id:"metadata-set-custom-types-syntax"},"Args syntax"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:null},"Key"),(0,p.kt)("th",{parentName:"tr",align:null},"Required"),(0,p.kt)("th",{parentName:"tr",align:null},"Schema"),(0,p.kt)("th",{parentName:"tr",align:null},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"input_objects"),(0,p.kt)("td",{parentName:"tr",align:null},"false"),(0,p.kt)("td",{parentName:"tr",align:null},"Array of ",(0,p.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#inputobjecttype"},"InputObjectType")),(0,p.kt)("td",{parentName:"tr",align:null},"Set of GraphQL ",(0,p.kt)("inlineCode",{parentName:"td"},"Input Object"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"objects"),(0,p.kt)("td",{parentName:"tr",align:null},"false"),(0,p.kt)("td",{parentName:"tr",align:null},"Array of ",(0,p.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#objecttype"},"ObjectType")),(0,p.kt)("td",{parentName:"tr",align:null},"Set of GraphQL ",(0,p.kt)("inlineCode",{parentName:"td"},"Object"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"scalars"),(0,p.kt)("td",{parentName:"tr",align:null},"false"),(0,p.kt)("td",{parentName:"tr",align:null},"Array of ",(0,p.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#scalartype"},"ScalarType")),(0,p.kt)("td",{parentName:"tr",align:null},"Set of GraphQL ",(0,p.kt)("inlineCode",{parentName:"td"},"Scalar"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"enums"),(0,p.kt)("td",{parentName:"tr",align:null},"false"),(0,p.kt)("td",{parentName:"tr",align:null},"Array of ",(0,p.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#enumtype"},"EnumType")),(0,p.kt)("td",{parentName:"tr",align:null},"Set of GraphQL ",(0,p.kt)("inlineCode",{parentName:"td"},"Enum"))))))}u.isMDXComponent=!0}}]);