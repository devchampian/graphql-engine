"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1216],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,m=u["".concat(p,".").concat(d)]||u[d]||h[d]||i;return n?a.createElement(m,l(l({ref:t},s),{},{components:n})):a.createElement(m,l({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},33316:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return h}});var a=n(83117),r=n(80102),i=(n(67294),n(3905)),l=["components"],o={sidebar_label:"Health check API",sidebar_position:8,description:"Hasura health API reference",keywords:["hasura","docs","health API","API reference"]},p="Health check API Reference",c={unversionedId:"graphql/core/api-reference/health",id:"graphql/core/api-reference/health",title:"Health check API Reference",description:"Hasura health API reference",source:"@site/docs/graphql/core/api-reference/health.mdx",sourceDirName:"graphql/core/api-reference",slug:"/graphql/core/api-reference/health",permalink:"/graphql-engine/latest/graphql/core/api-reference/health",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/api-reference/health.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_label:"Health check API",sidebar_position:8,description:"Hasura health API reference",keywords:["hasura","docs","health API","API reference"]},sidebar:"docsSidebar",previous:{title:"Version API",permalink:"/graphql-engine/latest/graphql/core/api-reference/version"},next:{title:"PG Dump API",permalink:"/graphql-engine/latest/graphql/core/api-reference/pgdump"}},s={},h=[{value:"Introduction",id:"introduction",level:2},{value:"Endpoint",id:"endpoint",level:2},{value:"API Spec",id:"api-spec",level:2},{value:"Request",id:"request",level:3},{value:"Response",id:"response",level:3},{value:"Sample response",id:"sample-response",level:4},{value:"Disabling Health check API",id:"disabling-health-check-api",level:2}],u={toc:h};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"health-check-api-reference"},"Health check API Reference"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"The Health API is a public endpoint which gives info on the server\nhealth."),(0,i.kt)("h2",{id:"endpoint"},"Endpoint"),(0,i.kt)("p",null,"All requests are ",(0,i.kt)("inlineCode",{parentName:"p"},"GET")," requests to the ",(0,i.kt)("inlineCode",{parentName:"p"},"/healthz")," endpoint. There's also\n",(0,i.kt)("inlineCode",{parentName:"p"},"/hasura/healthz")," available as an alternative, which mirrors ",(0,i.kt)("inlineCode",{parentName:"p"},"/healthz"),"\ncompletely."),(0,i.kt)("h2",{id:"api-spec"},"API Spec"),(0,i.kt)("h3",{id:"request"},"Request"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-http"},"GET /healthz HTTP/1.1\n")),(0,i.kt)("h3",{id:"response"},"Response"),(0,i.kt)("p",null,"Depending on the server health status any of the following responses can\nbe returned:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Server condition"),(0,i.kt)("th",{parentName:"tr",align:null},"HTTP Status"),(0,i.kt)("th",{parentName:"tr",align:null},"Message"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"All healthy"),(0,i.kt)("td",{parentName:"tr",align:null},"200"),(0,i.kt)("td",{parentName:"tr",align:null},"OK")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Serving requests but some metadata objects are inconsistent/not-available"),(0,i.kt)("td",{parentName:"tr",align:null},"200"),(0,i.kt)("td",{parentName:"tr",align:null},"WARN: inconsistent objects in schema")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Unhealthy"),(0,i.kt)("td",{parentName:"tr",align:null},"500"),(0,i.kt)("td",{parentName:"tr",align:null},"ERROR")))),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If there are metadata inconsistencies, you should use the Hasura console\nor the ",(0,i.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/metadata-api/manage-metadata#metadata-get-inconsistent-metadata"},"get_inconsistent_metadata")," metadata API to find out\nwhat the inconsistent objects are and resolve them."))),(0,i.kt)("h4",{id:"sample-response"},"Sample response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-http"},"HTTP/1.1 200 OK\n")),(0,i.kt)("h2",{id:"disabling-health-check-api"},"Disabling Health check API"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"healthz")," API endpoint is public and cannot be disabled."))}d.isMDXComponent=!0}}]);