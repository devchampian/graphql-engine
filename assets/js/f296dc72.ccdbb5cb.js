"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3545],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(h,s(s({ref:t},u),{},{components:n})):a.createElement(h,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},51401:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p}});var a=n(83117),r=n(80102),i=(n(67294),n(3905)),s=["components"],o={sidebar_label:"hasura metadata inconsistency list",sidebar_position:19,description:"List all inconsistent objects from the metadata using the Hasura CLI",keywords:["hasura","docs","CLI","hasura metadata inconsistency list"]},c="Hasura CLI: hasura metadata inconsistency list",l={unversionedId:"graphql/core/hasura-cli/hasura_metadata_inconsistency_list",id:"graphql/core/hasura-cli/hasura_metadata_inconsistency_list",title:"Hasura CLI: hasura metadata inconsistency list",description:"List all inconsistent objects from the metadata using the Hasura CLI",source:"@site/docs/graphql/core/hasura-cli/hasura_metadata_inconsistency_list.mdx",sourceDirName:"graphql/core/hasura-cli",slug:"/graphql/core/hasura-cli/hasura_metadata_inconsistency_list",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_metadata_inconsistency_list",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/hasura-cli/hasura_metadata_inconsistency_list.mdx",tags:[],version:"current",sidebarPosition:19,frontMatter:{sidebar_label:"hasura metadata inconsistency list",sidebar_position:19,description:"List all inconsistent objects from the metadata using the Hasura CLI",keywords:["hasura","docs","CLI","hasura metadata inconsistency list"]},sidebar:"docsSidebar",previous:{title:"hasura metadata inconsistency drop",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_metadata_inconsistency_drop"},next:{title:"hasura metadata inconsistency status",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_metadata_inconsistency_status"}},u={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hasura-cli-hasura-metadata-inconsistency-list"},"Hasura CLI: hasura metadata inconsistency list"),(0,i.kt)("p",null,"List all inconsistent objects from the metadata."),(0,i.kt)("h2",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"List all inconsistent objects from the metadata."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"hasura metadata inconsistency list [flags]\n")),(0,i.kt)("p",null,"Alias: ls"),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"-h, --help            help for list\n-o, --output string   select output format for inconsistent metadata objects(Allowed values: json)\n")),(0,i.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'--admin-secret string            admin secret for Hasura GraphQL engine (env "HASURA_GRAPHQL_ADMIN_SECRET")\n--certificate-authority string   path to a cert file for the certificate authority (env "HASURA_GRAPHQL_CERTIFICATE_AUTHORITY")\n--endpoint string                http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")\n--envfile string                 .env filename to load ENV vars from (default ".env")\n--insecure-skip-tls-verify       skip TLS verification and disable cert checking (default: false) (env "HASURA_GRAPHQL_INSECURE_SKIP_TLS_VERIFY")\n--log-level string               log level (DEBUG, INFO, WARN, ERROR, FATAL) (default "INFO")\n--no-color                       do not colorize output (default: false)\n--project string                 directory where commands are executed (default: current dir)\n--skip-update-check              skip automatic update check on command execution\n')),(0,i.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_metadata_inconsistency"},"hasura metadata inconsistency")," - Manage inconsistent objects in Hasura metadata")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Auto generated by spf13/cobra")))}m.isMDXComponent=!0}}]);