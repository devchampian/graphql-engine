"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4007],{3905:function(e,r,n){n.d(r,{Zo:function(){return u},kt:function(){return h}});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=t.createContext({}),c=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},u=function(e){var r=c(e.components);return t.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),h=a,m=d["".concat(l,".").concat(h)]||d[h]||p[h]||i;return n?t.createElement(m,o(o({ref:r},u),{},{components:n})):t.createElement(m,o({ref:r},u))}));function h(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},33231:function(e,r,n){n.r(r),n.d(r,{assets:function(){return u},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var t=n(83117),a=n(80102),i=(n(67294),n(3905)),o=["components"],s={sidebar_label:"hasura init",sidebar_position:11,description:"Initialize a directory for Hasura GraphQL engine migrations using the Hasura CLI",keywords:["hasura","docs","CLI","hasura init"]},l="Hasura CLI: hasura init",c={unversionedId:"graphql/core/hasura-cli/hasura_init",id:"graphql/core/hasura-cli/hasura_init",title:"Hasura CLI: hasura init",description:"Initialize a directory for Hasura GraphQL engine migrations using the Hasura CLI",source:"@site/docs/graphql/core/hasura-cli/hasura_init.mdx",sourceDirName:"graphql/core/hasura-cli",slug:"/graphql/core/hasura-cli/hasura_init",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_init",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/hasura-cli/hasura_init.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_label:"hasura init",sidebar_position:11,description:"Initialize a directory for Hasura GraphQL engine migrations using the Hasura CLI",keywords:["hasura","docs","CLI","hasura init"]},sidebar:"docsSidebar",previous:{title:"hasura deploy",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_deploy"},next:{title:"hasura metadata",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_metadata"}},u={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Examples",id:"examples",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],d={toc:p};function h(e){var r=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,t.Z)({},d,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hasura-cli-hasura-init"},"Hasura CLI: hasura init"),(0,i.kt)("p",null,"Initialize a directory for Hasura GraphQL engine migrations."),(0,i.kt)("h2",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"Create directories and files required for enabling migrations on the\nHasura GraphQL engine."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"hasura init [directory-name] [flags]\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"# Create a directory to store migrations\nhasura init [directory-name]\n\n# Now, edit <my-directory>/config.yaml to add endpoint and admin secret\n\n# Create a directory with endpoint and admin secret configured:\nhasura init <my-project> --endpoint https://my-graphql-engine.com --admin-secret adminsecretkey\n\n# Create a hasura project in the current working directory\nhasura init .\n\n# See https://hasura.io/docs/latest/graphql/core/migrations/index/ for more details\n")),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    --admin-secret string       admin secret for Hasura GraphQL engine\n    --endpoint string           http(s) endpoint for Hasura GraphQL engine\n-h, --help                      help for init\n    --install-manifest string   install manifest to be cloned\n    --version int               config version to be used (default 3)\n")),(0,i.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'--envfile string      .env filename to load ENV vars from (default ".env")\n--log-level string    log level (DEBUG, INFO, WARN, ERROR, FATAL) (default "INFO")\n--no-color            do not colorize output (default: false)\n--project string      directory where commands are executed (default: current dir)\n--skip-update-check   skip automatic update check on command execution\n')),(0,i.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/hasura-cli/hasura"},"hasura")," - Hasura GraphQL engine command line tool")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Auto generated by spf13/cobra")))}h.isMDXComponent=!0}}]);