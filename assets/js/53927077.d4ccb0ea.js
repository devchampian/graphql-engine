"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1365],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return c}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=p(a),c=r,h=u["".concat(o,".").concat(c)]||u[c]||d[c]||l;return a?n.createElement(h,i(i({ref:t},m),{},{components:a})):n.createElement(h,i({ref:t},m))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},12674:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return d}});var n=a(83117),r=a(80102),l=(a(67294),a(3905)),i=["components"],s={sidebar_label:"Permissions",sidebar_position:5,description:"Manage permissions with the Hasura schema/metadata API",keywords:["hasura","docs","schema/metadata API","API reference","permission"]},o="Schema/Metadata API Reference: Permissions (Deprecated)",p={unversionedId:"graphql/core/api-reference/schema-metadata-api/permission",id:"graphql/core/api-reference/schema-metadata-api/permission",title:"Schema/Metadata API Reference: Permissions (Deprecated)",description:"Manage permissions with the Hasura schema/metadata API",source:"@site/docs/graphql/core/api-reference/schema-metadata-api/permission.mdx",sourceDirName:"graphql/core/api-reference/schema-metadata-api",slug:"/graphql/core/api-reference/schema-metadata-api/permission",permalink:"/docs/latest/graphql/core/api-reference/schema-metadata-api/permission",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/api-reference/schema-metadata-api/permission.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_label:"Permissions",sidebar_position:5,description:"Manage permissions with the Hasura schema/metadata API",keywords:["hasura","docs","schema/metadata API","API reference","permission"]},sidebar:"docsSidebar",previous:{title:"Relationships",permalink:"/docs/latest/graphql/core/api-reference/schema-metadata-api/relationship"},next:{title:"Remote Schema Permissions",permalink:"/docs/latest/graphql/core/api-reference/schema-metadata-api/remote-schema-permissions"}},m={},d=[{value:"Introduction",id:"introduction",level:2},{value:"create_insert_permission",id:"schema-metadata-create-insert-permission",level:2},{value:"Args syntax",id:"schema-metadata-create-insert-permission-syntax",level:3},{value:"drop_insert_permission",id:"schema-metadata-drop-insert-permission",level:2},{value:"Args syntax",id:"schema-metadata-drop-insert-permission-syntax",level:3},{value:"create_select_permission",id:"schema-metadata-create-select-permission",level:2},{value:"Args syntax",id:"schema-metadata-create-select-permission-syntax",level:3},{value:"drop_select_permission",id:"schema-metadata-drop-select-permission",level:2},{value:"Args syntax",id:"schema-metadata-drop-select-permission-syntax",level:3},{value:"create_update_permission",id:"schema-metadata-create-update-permission",level:2},{value:"Args syntax",id:"schema-metadata-create-update-permission-syntax",level:3},{value:"drop_update_permission",id:"schema-metadata-drop-update-permission",level:2},{value:"Args syntax",id:"schema-metadata-drop-update-permission-syntax",level:3},{value:"create_delete_permission",id:"schema-metadata-create-delete-permission",level:2},{value:"Args syntax",id:"schema-metadata-create-delete-permission-syntax",level:3},{value:"drop_delete_permission",id:"schema-metadata-drop-delete-permission",level:2},{value:"Args syntax",id:"schema-metadata-drop-delete-permission-syntax",level:3},{value:"set_permission_comment",id:"schema-metadata-set-permission-comment",level:2},{value:"Args syntax",id:"schema-metadata-set-permission-comment-syntax",level:3}],u={toc:d};function c(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"schemametadata-api-reference-permissions-deprecated"},"Schema/Metadata API Reference: Permissions (Deprecated)"),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Deprecation")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"In versions ",(0,l.kt)("inlineCode",{parentName:"p"},"v2.0.0")," and above, the schema/metadata API is deprecated in\nfavour of the ",(0,l.kt)("a",{parentName:"p",href:"/docs/latest/graphql/core/api-reference/schema-api/index"},"schema API")," and the\n",(0,l.kt)("a",{parentName:"p",href:"/docs/latest/graphql/core/api-reference/metadata-api/index"},"metadata API"),"."),(0,l.kt)("p",{parentName:"div"},"Though for backwards compatibility, the schema/metadata APIs will\ncontinue to function."))),(0,l.kt)("h2",{id:"introduction"},"Introduction"),(0,l.kt)("p",null,"The permission layer is designed to restrict the operations that can be\nperformed by various users. Permissions can be defined on various\noperations (insert/select/update/delete) at a role level granularity. By\ndefault, the ",(0,l.kt)("inlineCode",{parentName:"p"},"admin")," role has unrestricted access to all operations."),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Variables in rules")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"All ",(0,l.kt)("inlineCode",{parentName:"p"},"X-Hasura-*")," header values can be used in the permission rules.\nThese values can come with the request and can be validated using\nwebhook or can be sent with the JWT token."))),(0,l.kt)("h2",{id:"schema-metadata-create-insert-permission"},"create_insert_permission"),(0,l.kt)("p",null,"An insert permission is used to enforce constraints on the data that is\nbeing inserted."),(0,l.kt)("p",null,"Let's look at an example, a permission for the ",(0,l.kt)("inlineCode",{parentName:"p"},"user")," role to insert\ninto the ",(0,l.kt)("inlineCode",{parentName:"p"},"article")," table. What is the constraint that we would like to\nenforce here? ",(0,l.kt)("em",{parentName:"p"},"A user can only insert articles for themselves")," ."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "create_insert_permission",\n    "args" : {\n        "table" : "article",\n        "role" : "user",\n        "permission" : {\n            "check" : {\n                "author_id" : "X-HASURA-USER-ID"\n            },\n            "set":{\n                "id":"X-HASURA-USER-ID"\n            },\n            "columns":["name","author_id"]\n        }\n    }\n}\n')),(0,l.kt)("p",null,"This reads as follows - for the ",(0,l.kt)("inlineCode",{parentName:"p"},"user")," role:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"For every row that is being inserted into the ",(0,l.kt)("em",{parentName:"li"},"article")," table, allow\ninsert only if the ",(0,l.kt)("inlineCode",{parentName:"li"},"check")," passes i.e. that the ",(0,l.kt)("inlineCode",{parentName:"li"},"author_id")," column\nvalue is the same as the value in the request header\n",(0,l.kt)("inlineCode",{parentName:"li"},"X-HASURA-USER-ID"),'".'),(0,l.kt)("li",{parentName:"ul"},"If the above ",(0,l.kt)("inlineCode",{parentName:"li"},"check")," passes, then access for insert will be limited\nto columns ",(0,l.kt)("inlineCode",{parentName:"li"},"name")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"author_id")," only."),(0,l.kt)("li",{parentName:"ul"},"When this insert happens, the value of the column ",(0,l.kt)("inlineCode",{parentName:"li"},"id")," will be\nautomatically ",(0,l.kt)("inlineCode",{parentName:"li"},"set")," to the value of the resolved session variable\n",(0,l.kt)("inlineCode",{parentName:"li"},"X-HASURA-USER-ID"),".")),(0,l.kt)("p",null,"The argument for ",(0,l.kt)("inlineCode",{parentName:"p"},"check")," is a boolean expression which has the same\nsyntax as the ",(0,l.kt)("inlineCode",{parentName:"p"},"where")," clause in the ",(0,l.kt)("inlineCode",{parentName:"p"},"select")," query, making it extremely\nexpressive."),(0,l.kt)("p",null,"An example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "create_insert_permission",\n    "args" : {\n        "table" : "article",\n        "role" : "user",\n        "permission" : {\n            "check" : {\n                "author_id" : "X-HASURA-USER-ID",\n                "$or" : [\n                    {\n                        "category" : "editorial",\n                        "is_reviewed" : false\n                    },\n                    {\n                        "category" : { "$neq" : "editorial"}\n                    }\n                ]\n            }\n        }\n    }\n}\n')),(0,l.kt)("p",null,"In the above definition, the row is allowed to be inserted if the\n",(0,l.kt)("inlineCode",{parentName:"p"},"author_id")," is the same as the request's user id and ",(0,l.kt)("inlineCode",{parentName:"p"},"is_reviewed")," is\n",(0,l.kt)("inlineCode",{parentName:"p"},"false")," when the ",(0,l.kt)("inlineCode",{parentName:"p"},"category"),' is "editorial".'),(0,l.kt)("h3",{id:"schema-metadata-create-insert-permission-syntax"},"Args syntax"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Schema"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"table"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#tablename"},"TableName")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the table")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"role"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#rolename"},"RoleName")),(0,l.kt)("td",{parentName:"tr",align:null},"Role")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"permission"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#insertpermission"},"InsertPermission")),(0,l.kt)("td",{parentName:"tr",align:null},"The permission definition")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"comment"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},"Comment")))),(0,l.kt)("h2",{id:"schema-metadata-drop-insert-permission"},"drop_insert_permission"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"drop_insert_permission")," API is used to drop an existing insert\npermission for a role on a table."),(0,l.kt)("p",null,"An example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "drop_insert_permission",\n    "args" : {\n        "table" : "article",\n        "role" : "user"\n    }\n}\n')),(0,l.kt)("h3",{id:"schema-metadata-drop-insert-permission-syntax"},"Args syntax"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Schema"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"table"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#tablename"},"TableName")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the table")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"role"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#rolename"},"RoleName")),(0,l.kt)("td",{parentName:"tr",align:null},"Role")))),(0,l.kt)("h2",{id:"schema-metadata-create-select-permission"},"create_select_permission"),(0,l.kt)("p",null,"A select permission is used to restrict access to only the specified\ncolumns and rows."),(0,l.kt)("p",null,"Let's look at an example, a permission for the ",(0,l.kt)("inlineCode",{parentName:"p"},"user")," role to select\nfrom the ",(0,l.kt)("inlineCode",{parentName:"p"},"article")," table: all columns can be read, as well as the rows\nthat have been published or authored by the user themselves."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "create_select_permission",\n    "args" : {\n        "table" : "article",\n        "role" : "user",\n        "permission" : {\n            "columns" : "*",\n            "filter" : {\n                "$or" : [\n                    { "author_id" : "X-HASURA-USER-ID" },\n                    { "is_published" : true }\n                ]\n             },\n             "limit": 10,\n             "allow_aggregations": true\n        }\n    }\n}\n')),(0,l.kt)("p",null,"This reads as follows - For the ",(0,l.kt)("inlineCode",{parentName:"p"},"user")," role:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Allow selecting rows where the ",(0,l.kt)("inlineCode",{parentName:"li"},"check")," passes i.e. ",(0,l.kt)("inlineCode",{parentName:"li"},"is_published")," is\n",(0,l.kt)("inlineCode",{parentName:"li"},"true")," or the ",(0,l.kt)("inlineCode",{parentName:"li"},"author_id")," matches the value of the session variable\n",(0,l.kt)("inlineCode",{parentName:"li"},"X-HASURA-USER-ID"),"."),(0,l.kt)("li",{parentName:"ul"},"Allow selecting all columns (because the ",(0,l.kt)("inlineCode",{parentName:"li"},"columns")," key is set to\n",(0,l.kt)("inlineCode",{parentName:"li"},"*"),")."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"limit")," the numbers of rows returned by a query to the ",(0,l.kt)("inlineCode",{parentName:"li"},"article"),"\ntable by the ",(0,l.kt)("inlineCode",{parentName:"li"},"user")," role to a maximum of 10."),(0,l.kt)("li",{parentName:"ul"},"Allow aggregate queries.")),(0,l.kt)("h3",{id:"schema-metadata-create-select-permission-syntax"},"Args syntax"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Schema"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"table"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#tablename"},"TableName")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the table")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"role"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#rolename"},"RoleName")),(0,l.kt)("td",{parentName:"tr",align:null},"Role")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"permission"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#selectpermission"},"SelectPermission")),(0,l.kt)("td",{parentName:"tr",align:null},"The permission definition")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"comment"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},"Comment")))),(0,l.kt)("h2",{id:"schema-metadata-drop-select-permission"},"drop_select_permission"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"drop_select_permission")," is used to drop an existing select\npermission for a role on a table."),(0,l.kt)("p",null,"An example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "drop_select_permission",\n    "args" : {\n        "table" : "article",\n        "role" : "user"\n    }\n}\n')),(0,l.kt)("h3",{id:"schema-metadata-drop-select-permission-syntax"},"Args syntax"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Schema"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"table"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#tablename"},"TableName")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the table")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"role"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#rolename"},"RoleName")),(0,l.kt)("td",{parentName:"tr",align:null},"Role")))),(0,l.kt)("h2",{id:"schema-metadata-create-update-permission"},"create_update_permission"),(0,l.kt)("p",null,"An update permission is used to restrict the columns and rows that can\nbe updated. Its structure is quite similar to the select permission."),(0,l.kt)("p",null,"An example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "create_update_permission",\n    "args" : {\n        "table" : "article",\n        "role" : "user",\n        "permission" : {\n            "columns" : ["title", "content", "category"],\n            "filter" : {\n                "author_id" : "X-HASURA-USER-ID"\n            },\n            "check" : {\n                "content" : {\n                  "_ne": ""\n                }\n            },\n            "set":{\n                "updated_at" : "NOW()"\n            }\n        }\n    }\n}\n')),(0,l.kt)("p",null,"This reads as follows - for the ",(0,l.kt)("inlineCode",{parentName:"p"},"user")," role:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Allow updating only those rows where the ",(0,l.kt)("inlineCode",{parentName:"li"},"filter")," passes i.e. the\nvalue of the ",(0,l.kt)("inlineCode",{parentName:"li"},"author_id")," column of a row matches the value of the\nsession variable ",(0,l.kt)("inlineCode",{parentName:"li"},"X-HASURA-USER-ID"),"."),(0,l.kt)("li",{parentName:"ul"},"If the above ",(0,l.kt)("inlineCode",{parentName:"li"},"filter")," passes for a given row, allow updating only\nthe ",(0,l.kt)("inlineCode",{parentName:"li"},"title"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"content")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"category")," columns (",(0,l.kt)("em",{parentName:"li"},"as specified in the"),(0,l.kt)("inlineCode",{parentName:"li"},"columns")," ",(0,l.kt)("em",{parentName:"li"},"key"),")."),(0,l.kt)("li",{parentName:"ul"},"After the update happens, verify that the ",(0,l.kt)("inlineCode",{parentName:"li"},"check")," condition holds\nfor the updated row i.e. that the value in the ",(0,l.kt)("inlineCode",{parentName:"li"},"content")," column is\nnot empty."),(0,l.kt)("li",{parentName:"ul"},"When this update happens, the value of the column ",(0,l.kt)("inlineCode",{parentName:"li"},"updated_at")," will\nbe automatically ",(0,l.kt)("inlineCode",{parentName:"li"},"set")," to the current timestamp.")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"It is important to deny updates to columns that will determine the row\nownership. In the above example, the ",(0,l.kt)("inlineCode",{parentName:"p"},"author_id")," column determines the\nownership of a row in the ",(0,l.kt)("inlineCode",{parentName:"p"},"article")," table. Columns such as this should\nnever be allowed to be updated."))),(0,l.kt)("h3",{id:"schema-metadata-create-update-permission-syntax"},"Args syntax"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Schema"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"table"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#tablename"},"TableName")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the table")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"role"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#rolename"},"RoleName")),(0,l.kt)("td",{parentName:"tr",align:null},"Role")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"permission"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#updatepermission"},"UpdatePermission")),(0,l.kt)("td",{parentName:"tr",align:null},"The permission definition")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"comment"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},"Comment")))),(0,l.kt)("h2",{id:"schema-metadata-drop-update-permission"},"drop_update_permission"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"drop_update_permission")," API is used to drop an existing update\npermission for a role on a table."),(0,l.kt)("p",null,"An example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "drop_update_permission",\n    "args" : {\n        "table" : "article",\n        "role" : "user"\n    }\n}\n')),(0,l.kt)("h3",{id:"schema-metadata-drop-update-permission-syntax"},"Args syntax"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Schema"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"table"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#tablename"},"TableName")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the table")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"role"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#rolename"},"RoleName")),(0,l.kt)("td",{parentName:"tr",align:null},"Role")))),(0,l.kt)("h2",{id:"schema-metadata-create-delete-permission"},"create_delete_permission"),(0,l.kt)("p",null,"A delete permission is used to restrict the rows that can be deleted."),(0,l.kt)("p",null,"An example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "create_delete_permission",\n    "args" : {\n        "table" : "article",\n        "role" : "user",\n        "permission" : {\n            "filter" : {\n                "author_id" : "X-HASURA-USER-ID"\n            }\n        }\n    }\n}\n')),(0,l.kt)("p",null,"This reads as follows:"),(0,l.kt)("p",null,'"',(0,l.kt)("inlineCode",{parentName:"p"},"delete")," for the ",(0,l.kt)("inlineCode",{parentName:"p"},"user")," role on the ",(0,l.kt)("inlineCode",{parentName:"p"},"article")," table is allowed on rows\nwhere ",(0,l.kt)("inlineCode",{parentName:"p"},"author_id")," is the same as the request header ",(0,l.kt)("inlineCode",{parentName:"p"},"X-HASURA-USER-ID"),'\nvalue."'),(0,l.kt)("h3",{id:"schema-metadata-create-delete-permission-syntax"},"Args syntax"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Schema"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"table"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#tablename"},"TableName")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the table")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"role"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#rolename"},"RoleName")),(0,l.kt)("td",{parentName:"tr",align:null},"Role")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"permission"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#deletepermission"},"DeletePermission")),(0,l.kt)("td",{parentName:"tr",align:null},"The permission definition")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"comment"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"text"),(0,l.kt)("td",{parentName:"tr",align:null},"Comment")))),(0,l.kt)("h2",{id:"schema-metadata-drop-delete-permission"},"drop_delete_permission"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"drop_delete_permission")," API is used to drop an existing delete\npermission for a role on a table."),(0,l.kt)("p",null,"An example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "drop_delete_permission",\n    "args" : {\n        "table" : "article",\n        "role" : "user"\n    }\n}\n')),(0,l.kt)("h3",{id:"schema-metadata-drop-delete-permission-syntax"},"Args syntax"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Schema"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"table"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#tablename"},"TableName")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the table")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"role"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#rolename"},"RoleName")),(0,l.kt)("td",{parentName:"tr",align:null},"Role")))),(0,l.kt)("h2",{id:"schema-metadata-set-permission-comment"},"set_permission_comment"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"set_permission_comment")," is used to set/update the comment on a\npermission. Setting the comment to ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," removes it."),(0,l.kt)("p",null,"An example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nAuthorization: Bearer <auth-token> # optional if cookie is set\nX-Hasura-Role: admin\n\n{\n    "type": "set_permission_comment",\n    "args": {\n        "table": "article",\n        "role": "user",\n        "type" : "update",\n        "comment" : "can only modify their own rows"\n    }\n}\n')),(0,l.kt)("h3",{id:"schema-metadata-set-permission-comment-syntax"},"Args syntax"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Schema"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"table"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#tablename"},"TableName")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the table")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"role"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#rolename"},"RoleName")),(0,l.kt)("td",{parentName:"tr",align:null},"The role in the permission")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"type"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"permission type (one of select/update/delete/insert)"),(0,l.kt)("td",{parentName:"tr",align:null},"The type of the permission")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"comment"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Text"),(0,l.kt)("td",{parentName:"tr",align:null},"Comment")))))}c.isMDXComponent=!0}}]);