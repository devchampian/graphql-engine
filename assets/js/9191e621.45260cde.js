"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5196],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var l=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=l.createContext({}),s=function(e){var t=l.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return l.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},k=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),k=s(n),m=a,c=k["".concat(p,".").concat(m)]||k[m]||u[m]||r;return n?l.createElement(c,i(i({ref:t},d),{},{components:n})):l.createElement(c,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var s=2;s<r;s++)i[s]=n[s];return l.createElement.apply(null,i)}return l.createElement.apply(null,n)}k.displayName="MDXCreateElement"},93970:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return u}});var l=n(83117),a=n(80102),r=(n(67294),n(3905)),i=["components"],o={description:"Hasura GraphQL engine server config reference (Flags/Environment variables)",keywords:["hasura","docs","deployment","server","config","flags","env vars","environment variables"],sidebar_position:2,sidebar_label:"Server config reference"},p="GraphQL Engine server config reference",s={unversionedId:"graphql/core/deployment/graphql-engine-flags/reference",id:"graphql/core/deployment/graphql-engine-flags/reference",title:"GraphQL Engine server config reference",description:"Hasura GraphQL engine server config reference (Flags/Environment variables)",source:"@site/docs/graphql/core/deployment/graphql-engine-flags/reference.mdx",sourceDirName:"graphql/core/deployment/graphql-engine-flags",slug:"/graphql/core/deployment/graphql-engine-flags/reference",permalink:"/graphql-engine/latest/graphql/core/deployment/graphql-engine-flags/reference",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/deployment/graphql-engine-flags/reference.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{description:"Hasura GraphQL engine server config reference (Flags/Environment variables)",keywords:["hasura","docs","deployment","server","config","flags","env vars","environment variables"],sidebar_position:2,sidebar_label:"Server config reference"},sidebar:"docsSidebar",previous:{title:"Server configuration",permalink:"/graphql-engine/latest/graphql/core/deployment/graphql-engine-flags/index"},next:{title:"Server config examples",permalink:"/graphql-engine/latest/graphql/core/deployment/graphql-engine-flags/config-examples"}},d={},u=[{value:"Introduction",id:"introduction",level:2},{value:"<strong>graphql-engine</strong> command flags / environment variables",id:"graphql-engine-command-flags--environment-variables",level:2},{value:"<strong>serve</strong> sub-command flags / environment variables",id:"command-flags",level:2}],k={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,l.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"graphql-engine-server-config-reference"},"GraphQL Engine server config reference"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Every GraphQL engine command is structured as:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ graphql-engine <server-flags> serve <command-flags>\n")),(0,r.kt)("p",null,"The flags can be passed as environment variables as well."),(0,r.kt)("h2",{id:"graphql-engine-command-flags--environment-variables"},(0,r.kt)("strong",{parentName:"h2"},"graphql-engine")," command flags / environment variables"),(0,r.kt)("p",null,"For the ",(0,r.kt)("inlineCode",{parentName:"p"},"graphql-engine")," command these are the available flags and\nenvironment variables:"),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{width:"15%"},"Flag"),(0,r.kt)("th",{width:"20%"},"ENV variable"),(0,r.kt)("th",{width:"30%"},"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--database-url <DB_URL>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_DATABASE_URL"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Postgres database URL: ",(0,r.kt)("inlineCode",{parentName:"p"},"postgres://<user>:<password>@<host>:<port>/<db-name>")),(0,r.kt)("p",null,"Example: ",(0,r.kt)("inlineCode",{parentName:"p"},"postgres://admin:mypass@mydomain.com:5432/mydb")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--metadata-database-url <METADATA-DATABASE-URL>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_METADATA_DATABASE_URL"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Postgres database URL that will be used to store the Hasura metadata. By default the\ndatabase configured using ",(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_DATABASE_URL")," will be used to store the metadata."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"postgres://<user>:<password>@<host>:<port>/<db-name>")),(0,r.kt)("p",null,"Example: ",(0,r.kt)("inlineCode",{parentName:"p"},"postgres://admin:mypass@mydomain.com:5432/metadata_db")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"(Available for versions > v2.0.0)")))))),(0,r.kt)("p",null,"Or you can specify the following options ",(0,r.kt)("em",{parentName:"p"},"(only via flags)"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-none"},"    --host                      Postgres server host\n-p, --port                      Postgres server port\n-u, --user                      Database user name\n-p, --password                  Password of the user\n-d, --dbname                    Database name to connect to\n-o, --pg-connection-options     PostgreSQL connection options\n")),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The default configuration of PostgreSQL 11 and older may result in loss\nof precision when retrieving IEEE 754 style data, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"float4"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"real")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"double precision")," values, from the database. To avoid this,\nset the ",(0,r.kt)("inlineCode",{parentName:"p"},"extra_float_digits")," PostgreSQL connection parameter to 3. This\ncan be done by passing\n",(0,r.kt)("inlineCode",{parentName:"p"},"'--pg-connection-options=-c extra_float_digits=3'")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"graphql-engine"),",\nor by passing this option as part of the database url:"),(0,r.kt)("p",{parentName:"div"},(0,r.kt)("inlineCode",{parentName:"p"},"postgres://admin:mypass@mydomain.com:5432/mydb?options=-c%20extra_float_digits%3D3")))),(0,r.kt)("h2",{id:"command-flags"},(0,r.kt)("strong",{parentName:"h2"},"serve")," sub-command flags / environment variables"),(0,r.kt)("p",null,"For the ",(0,r.kt)("inlineCode",{parentName:"p"},"serve")," sub-command these are the available flags and\nenvironment variables:"),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{width:"15%"},"Flag"),(0,r.kt)("th",{width:"20%"},"ENV variable"),(0,r.kt)("th",{width:"30%"},"Description"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--server-port <PORT>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_SERVER_PORT"))),(0,r.kt)("td",null,"Port on which graphql-engine should be served (default: 8080)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--server-host <HOST>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_SERVER_HOST"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Host on which graphql-engine will listen (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"*"),")"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--enable-console <true|false>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ENABLE_CONSOLE"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Enable the Hasura Console (served by the server on ",(0,r.kt)("inlineCode",{parentName:"p"},"/")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"/console"),") (default: false)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--admin-secret <ADMIN_SECRET_KEY>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ADMIN_SECRET"))),(0,r.kt)("td",null,"Admin secret key, required to access this instance. This is mandatory when you use webhook or JWT.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--auth-hook <WEBHOOK_URL>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_AUTH_HOOK"))),(0,r.kt)("td",null,"URL of the authorization webhook required to authorize requests. See auth webhooks docs for more details.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--auth-hook-mode <GET|POST>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_AUTH_HOOK_MODE"))),(0,r.kt)("td",null,"HTTP method to use for the authorization webhook (default: GET)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--jwt-secret <JSON_CONFIG>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_JWT_SECRET"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"A JSON string containing type and the JWK used for verifying (and other optional details). Example:\n",(0,r.kt)("inlineCode",{parentName:"p"},'{"type": "HS256", "key": "3bd561c37d214b4496d09049fadc542c"}'),". See the JWT docs for more details."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--unauthorized-role <ROLE>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_UNAUTHORIZED_ROLE"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Unauthorized role, used when access-key is not sent in access-key only mode or the\n",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," header is absent in JWT mode. Example: ",(0,r.kt)("inlineCode",{parentName:"p"},"anonymous"),'. Now whenever the\n"authorization" header is absent, the request\'s role will default to\n',(0,r.kt)("inlineCode",{parentName:"p"},"anonymous"),"."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--cors-domain <DOMAINS>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_CORS_DOMAIN"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"CSV of list of domains, incuding scheme (http/https) and port, to allow for CORS. Wildcard domains are allowed.\n(See ",(0,r.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/deployment/graphql-engine-flags/config-examples#configure-cors"},"Configure CORS"),")"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--disable-cors"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_DISABLE_CORS"))),(0,r.kt)("td",null,"Disable CORS. Do not send any CORS headers on any request.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--ws-read-cookie <true|false>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_WS_READ_COOKIE"))),(0,r.kt)("td",null,"Read cookie on WebSocket initial handshake even when CORS is disabled. This can be a potential security flaw! Please make sure you know what you're doing. This configuration is only applicable when CORS is disabled. (default: false)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--enable-telemetry <true|false>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ENABLE_TELEMETRY"))),(0,r.kt)("td",null,"Enable anonymous telemetry (default: true)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"N/A"),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_EVENTS_HTTP_POOL_SIZE"))),(0,r.kt)("td",null,"Maximum number of concurrent http workers delivering events at any time (default: 100)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"N/A"),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_EVENTS_FETCH_INTERVAL"))),(0,r.kt)("td",null,"Interval in milliseconds to sleep before trying to fetch events again after a fetch returned no events from postgres")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--events-fetch-batch-size"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_EVENTS_FETCH_BATCH_SIZE"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Maximum number of events to be fetched from the DB in a single batch (default: 100)"),(0,r.kt)("em",null,"(Available for versions > v2.0.0)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--async-actions-fetch-interval"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ASYNC_ACTIONS_FETCH_INTERVAL"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Interval in milliseconds to sleep before trying to fetch async actions again after a fetch returned no async actions from metadata storage. Value\n",(0,r.kt)("inlineCode",{parentName:"p"},"0")," implies completely disable fetching async actions from the storage."),(0,r.kt)("em",null,"(Available for versions > v2.0.0)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"-s, --stripes <NO_OF_STRIPES>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_PG_STRIPES"))),(0,r.kt)("td",null,"Number of stripes (distinct sub-pools) to maintain with Postgres (default: 1). New connections will be taken from a particular stripe pseudo-randomly.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"-c, --connections <NO_OF_CONNS>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_PG_CONNECTIONS"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Maximum number of Postgres connections that can be opened per stripe (default: 50). When the maximum is reached we will block until a new connection becomes available, even if there is capacity in other stripes."),(0,r.kt)("p",null,"(",(0,r.kt)("strong",null,"Deprecated in versions > v2.0.0"),". ",(0,r.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/guides/upgrade-hasura-v2#hasura-v2-env-changes"},"See details"),")"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--timeout <SECONDS>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_PG_TIMEOUT"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Each connection's idle time before it is closed (default: 180 sec)"),(0,r.kt)("p",null,"(",(0,r.kt)("strong",null,"Deprecated in versions > v2.0.0"),". ",(0,r.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/guides/upgrade-hasura-v2#hasura-v2-env-changes"},"See details"),")"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--use-prepared-statements <true|false>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_USE_PREPARED_STATEMENTS"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Use prepared statements for queries (default: true)"),(0,r.kt)("p",null,"(",(0,r.kt)("strong",null,"Deprecated in versions > v2.0.0"),". ",(0,r.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/guides/upgrade-hasura-v2#hasura-v2-env-changes"},"See details"),")"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"-i, --tx-iso <TXISO>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_TX_ISOLATION"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Transaction isolation. read-committed / repeatable-read / serializable (default: read-committed)"),(0,r.kt)("p",null,"(",(0,r.kt)("strong",null,"Deprecated in versions > v2.0.0"),". ",(0,r.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/guides/upgrade-hasura-v2#hasura-v2-env-changes"},"See details"),")"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--retries <NO_OF_RETRIES>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_NO_OF_RETRIES"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Number of retries if Postgres connection error occurs (default: 1)"),(0,r.kt)("p",null,"(",(0,r.kt)("strong",null,"Deprecated in versions > v2.0.0"),". ",(0,r.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/guides/upgrade-hasura-v2#hasura-v2-env-changes"},"See details"),")"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--conn-lifetime <SECONDS>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_PG_CONN_LIFETIME"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Time from connection creation after which the connection should be destroyed and a new one created. A value of 0 indicates we should never destroy an active connection. If 0 is passed, memory from large query results may not be reclaimed. (default: 600 sec)"),(0,r.kt)("p",null,"(",(0,r.kt)("strong",null,"Deprecated in versions > v2.0.0"),". ",(0,r.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/guides/upgrade-hasura-v2#hasura-v2-env-changes"},"See details"),")"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--stringify-numeric-types"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_STRINGIFY_NUMERIC_TYPES"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Stringify certain Postgres numeric types, specifically\n",(0,r.kt)("inlineCode",{parentName:"p"},"bigint")," ,",(0,r.kt)("inlineCode",{parentName:"p"},"numeric")," ,",(0,r.kt)("inlineCode",{parentName:"p"},"decimal")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"double precision")," as they don't fit into the ",(0,r.kt)("inlineCode",{parentName:"p"},"IEEE-754"),"\nspec for JSON encoding-decoding. (default: false)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--enabled-apis <APIS>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ENABLED_APIS"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Comma separated list of APIs (options: ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"graphql"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"pgdump"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"config"),") to be enabled.\n(default: ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata,graphql,pgdump,config"),")"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--live-queries-multiplexed-refetch-interval"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_REFETCH_INTERVAL"))),(0,r.kt)("td",null,"Updated results (if any) will be sent at most once in this interval (in milliseconds) for live queries which can be multiplexed. Default: 1000 (1sec)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--live-queries-multiplexed-batch-size"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_BATCH_SIZE"))),(0,r.kt)("td",null,"Multiplexed live queries are split into batches of the specified size. Default: 100")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--streaming-queries-multiplexed-refetch-interval"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_STREAMING_QUERIES_MULTIPLEXED_REFETCH_INTERVAL"))),(0,r.kt)("td",null,"Updated results (if any) will be sent at most once in this interval (in milliseconds) for streaming queries which can be multiplexed. Default: 1000 (1sec)")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--streaming-queries-multiplexed-batch-size"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_STREAMING_QUERIES_MULTIPLEXED_BATCH_SIZE"))),(0,r.kt)("td",null,"Multiplexed streaming queries are split into batches of the specified size. Default: 100")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--enable-allowlist"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ENABLE_ALLOWLIST"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Restrict queries allowed to be executed by the GraphQL engine to those that are part of the configured allow-list. Default: ",(0,r.kt)("inlineCode",{parentName:"p"},"false")))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--console-assets-dir"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_CONSOLE_ASSETS_DIR"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Set the value to ",(0,r.kt)("inlineCode",{parentName:"p"},"/srv/console-assets")," for the console to load assets from the server itself instead of CDN"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--enabled-log-types"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ENABLED_LOG_TYPES"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Set the enabled log types. This is a comma-separated list of log-types to enable. Default:\n",(0,r.kt)("inlineCode",{parentName:"p"},"startup, http-log, webhook-log, websocket-log"),".\nSee ",(0,r.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/deployment/logging#log-types"},"log types")," for more details."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--log-level"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_LOG_LEVEL"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Set the logging level. Default: ",(0,r.kt)("inlineCode",{parentName:"p"},"info"),". Options: ",(0,r.kt)("inlineCode",{parentName:"p"},"debug"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"info"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"warn"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"error"),"."))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--dev-mode"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_DEV_MODE"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Set dev mode for GraphQL requests; include the\n",(0,r.kt)("inlineCode",{parentName:"p"},"internal")," key in the errors extensions of the response (if required)."),(0,r.kt)("em",null,"(Available for versions > v1.2.0)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--admin-internal-errors"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ADMIN_INTERNAL_ERRORS"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Include the ",(0,r.kt)("inlineCode",{parentName:"p"},"internal")," key in the errors extensions of the response for GraphQL requests with the admin role (if required)."),(0,r.kt)("em",null,"(Available for versions > v1.2.0)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--enable-remote-schema-permissions"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Enable remote schema permissions (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),")"),(0,r.kt)("em",null,"(Available for versions > v2.0.0)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--infer-function-permissions"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_INFER_FUNCTION_PERMISSIONS"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"When the ",(0,r.kt)("inlineCode",{parentName:"p"},"--infer-function-permissions")," flag is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),", a function ",(0,r.kt)("inlineCode",{parentName:"p"},"f"),", stable, immutable or volatile is only exposed for a role\n",(0,r.kt)("inlineCode",{parentName:"p"},"r")," if there is a permission defined on the function ",(0,r.kt)("inlineCode",{parentName:"p"},"f")," for the role ",(0,r.kt)("inlineCode",{parentName:"p"},"r"),", creating a function permission will only be allowed if there is a select permission on the table type.\nWhen the ",(0,r.kt)("inlineCode",{parentName:"p"},"--infer-function-permissions")," flag is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," or the flag is omitted (defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),"), the permission of the function is inferred from the select permissions from the target table of the function, only for stable/immutable functions. Volatile functions are not exposed to any of the roles in this case."),(0,r.kt)("em",null,"(Available for versions > v2.0.0)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--schema-sync-poll-interval"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_SCHEMA_SYNC_POLL_INTERVAL"))),(0,r.kt)("td",null,"Interval to poll metadata storage for updates in milliseconds - Default 1000 (1s) - Set to 0 to disable.",(0,r.kt)("em",null,"(Available for versions > v2.0.0)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--experimental-features"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_EXPERIMENTAL_FEATURES"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"List of experimental features to be enabled. A comma separated value is expected. Options:\n",(0,r.kt)("inlineCode",{parentName:"p"},"inherited_roles, optimize_permission_filters, streaming_subscriptions"),"."),(0,r.kt)("em",null,"(Available for versions > v2.0.0)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--graceful-shutdown-timeout"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_GRACEFUL_SHUTDOWN_TIMEOUT"))),(0,r.kt)("td",null,"Timeout (in seconds) to wait for the in-flight events (event triggers and scheduled triggers) and async actions to complete before the server shuts down completely (default: 60 seconds). If the in-flight events are not completed within the timeout, those events are marked as pending.",(0,r.kt)("em",null,"(Available for versions > v2.0.0)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--enable-maintenance-mode"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ENABLE_MAINTENANCE_MODE"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Disable updating of metadata on the server (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),")"),(0,r.kt)("em",null,"(Available for versions > v2.0.0)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--websocket-compression"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_CONNECTION_COMPRESSION"))),(0,r.kt)("td",null,"Enable WebSocket permessage-deflate compression (default: false)",(0,r.kt)("em",null,"(Available for versions > v2.0.0)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--websocket-keepalive <SECONDS>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_WEBSOCKET_KEEPALIVE"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Used to set the ",(0,r.kt)("inlineCode",{parentName:"p"},"Keep Alive")," delay for client that use the\n",(0,r.kt)("inlineCode",{parentName:"p"},"subscription-transport-ws")," (Apollo) protocol. For ",(0,r.kt)("inlineCode",{parentName:"p"},"graphql-ws")," clients the graphql-engine sends\n",(0,r.kt)("inlineCode",{parentName:"p"},"PING")," messages instead."),(0,r.kt)("p",null,"(default: ",(0,r.kt)("inlineCode",{parentName:"p"},"5"),")"),(0,r.kt)("em",null,"(Available for versions > v2.0.0)"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"--websocket-connection-init-timeout <SECONDS>"))),(0,r.kt)("td",null,(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_WEBSOCKET_CONNECTION_INIT_TIMEOUT"))),(0,r.kt)("td",null,(0,r.kt)("p",null,"Used to set the connection initialisation timeout for\n",(0,r.kt)("inlineCode",{parentName:"p"},"graphql-ws")," clients. This is ignored for\n",(0,r.kt)("inlineCode",{parentName:"p"},"subscription-transport-ws")," (Apollo) clients."),(0,r.kt)("p",null,"(default: ",(0,r.kt)("inlineCode",{parentName:"p"},"3"),")"))))),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"When the equivalent flags for environment variables are used, the flags\nwill take precedence."))))}m.isMDXComponent=!0}}]);