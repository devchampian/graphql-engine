"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3272],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),s=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,h=d["".concat(o,".").concat(m)]||d[m]||c[m]||l;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},805:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return c}});var a=n(83117),r=n(80102),l=(n(67294),n(3905)),i=["components"],p={description:"Hasura schema API reference",keywords:["hasura","docs","schema API","API reference"],slug:"index"},o="Schema API Reference",s={unversionedId:"graphql/core/api-reference/schema-api/index",id:"graphql/core/api-reference/schema-api/index",title:"Schema API Reference",description:"Hasura schema API reference",source:"@site/docs/graphql/core/api-reference/schema-api/index.mdx",sourceDirName:"graphql/core/api-reference/schema-api",slug:"/graphql/core/api-reference/schema-api/index",permalink:"/graphql-engine/latest/graphql/core/api-reference/schema-api/index",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/api-reference/schema-api/index.mdx",tags:[],version:"current",frontMatter:{description:"Hasura schema API reference",keywords:["hasura","docs","schema API","API reference"],slug:"index"},sidebar:"docsSidebar",previous:{title:"Mutation",permalink:"/graphql-engine/latest/graphql/core/api-reference/relay-graphql-api/mutation"},next:{title:"Run SQL",permalink:"/graphql-engine/latest/graphql/core/api-reference/schema-api/run-sql"}},u={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Endpoint",id:"endpoint",level:2},{value:"Request structure",id:"request-structure",level:2},{value:"Request body",id:"request-body",level:3},{value:"Query",id:"schema-query",level:4},{value:"Request types",id:"request-types",level:2},{value:"Response structure",id:"response-structure",level:2},{value:"Disabling schema API",id:"disabling-schema-api",level:2}],d={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"schema-api-reference"},"Schema API Reference"),(0,l.kt)("h2",{id:"introduction"},"Introduction"),(0,l.kt)("p",null,"The schema API provides the following features:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Execute SQL on the underlying Postgres database, supports schema\nmodifying actions.")),(0,l.kt)("p",null,"This is primarily intended to be used as an ",(0,l.kt)("inlineCode",{parentName:"p"},"admin")," API to manage the\nHasura schema."),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Supported from")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The schema API is supported for versions ",(0,l.kt)("inlineCode",{parentName:"p"},"v2.0.0")," and above and replaces\nthe older ",(0,l.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/schema-metadata-api/index"},"schema/metadata API"),"."))),(0,l.kt)("h2",{id:"endpoint"},"Endpoint"),(0,l.kt)("p",null,"All requests are ",(0,l.kt)("inlineCode",{parentName:"p"},"POST")," requests to the ",(0,l.kt)("inlineCode",{parentName:"p"},"/v2/query")," endpoint."),(0,l.kt)("h2",{id:"request-structure"},"Request structure"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-http"},'POST /v2/query HTTP/1.1\n\n{\n   "type": "<query-type>",\n   "args": <args-object>\n}\n')),(0,l.kt)("h3",{id:"request-body"},"Request body"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"#schema-query"},"Query")),(0,l.kt)("h4",{id:"schema-query"},"Query"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Key"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Schema"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"type"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Type of the query")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"args"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"JSON Value"),(0,l.kt)("td",{parentName:"tr",align:null},"The arguments to the query")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"version"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"Integer"),(0,l.kt)("td",{parentName:"tr",align:null},"Version of the API (default: 1)")))),(0,l.kt)("h2",{id:"request-types"},"Request types"),(0,l.kt)("p",null,"The various types of queries are listed in the following table:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"type")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"args")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"th"},"version")),(0,l.kt)("th",{parentName:"tr",align:null},"Synopsis"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"bulk")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#schema-query"},"Query")," array"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Execute multiple operations in a single query")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/schema-api/run-sql#schema-run-sql"},"run_sql")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/graphql-engine/latest/graphql/core/api-reference/schema-api/run-sql#schema-run-sql-syntax"},"run_sql_args")),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Run SQL directly on Postgres")))),(0,l.kt)("h2",{id:"response-structure"},"Response structure"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Status code"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Response structure"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"200"),(0,l.kt)("td",{parentName:"tr",align:null},"Success"),(0,l.kt)("td",{parentName:"tr",align:null},"Request specific")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"400"),(0,l.kt)("td",{parentName:"tr",align:null},"Bad request"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'{ "path"  : String, "error" : String}'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"401"),(0,l.kt)("td",{parentName:"tr",align:null},"Unauthorized"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'{"error" : String}'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"500"),(0,l.kt)("td",{parentName:"tr",align:null},"Internal server error"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'{"error" : String}'))))),(0,l.kt)("h2",{id:"disabling-schema-api"},"Disabling schema API"),(0,l.kt)("p",null,"Since this API can be used to make changes to the GraphQL schema, it can\nbe disabled, especially in production deployments."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"enabled-apis")," flag or the ",(0,l.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ENABLED_APIS")," env var can\nbe used to enable/disable this API. By default, the schema/metadata API\nis enabled. To disable it, you need to explicitly state that this API is\nnot enabled i.e. remove it from the list of enabled APIs."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# enable only graphql api, disable metadata and pgdump\n--enabled-apis="graphql"\nHASURA_GRAPHQL_ENABLED_APIS="graphql"\n')),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/deployment/graphql-engine-flags/reference"},"GraphQL Engine server config reference")," for info on setting the above flag/env var."))}m.isMDXComponent=!0}}]);