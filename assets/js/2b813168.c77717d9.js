"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5663],{3905:function(e,a,t){t.d(a,{Zo:function(){return p},kt:function(){return c}});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),d=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},p=function(e){var a=d(e.components);return n.createElement(l.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=d(t),c=r,h=m["".concat(l,".").concat(c)]||m[c]||u[c]||i;return t?n.createElement(h,o(o({ref:a},p),{},{components:t})):n.createElement(h,o({ref:a},p))}));function c(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var d=2;d<i;d++)o[d]=t[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},59564:function(e,a,t){t.r(a),t.d(a,{assets:function(){return p},contentTitle:function(){return l},default:function(){return c},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return u}});var n=t(83117),r=t(80102),i=(t(67294),t(3905)),o=["components"],s={description:"Updating to Hasura GraphQL engine v2",keywords:["hasura","docs","guide","compatibility","update v2"],sidebar_position:13,sidebar_label:"Updating to Hasura v2"},l="Updating to Hasura GraphQL engine v2",d={unversionedId:"graphql/core/guides/upgrade-hasura-v2",id:"graphql/core/guides/upgrade-hasura-v2",title:"Updating to Hasura GraphQL engine v2",description:"Updating to Hasura GraphQL engine v2",source:"@site/docs/graphql/core/guides/upgrade-hasura-v2.mdx",sourceDirName:"graphql/core/guides",slug:"/graphql/core/guides/upgrade-hasura-v2",permalink:"/graphql-engine/latest/graphql/core/guides/upgrade-hasura-v2",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/guides/upgrade-hasura-v2.mdx",tags:[],version:"current",sidebarPosition:13,frontMatter:{description:"Updating to Hasura GraphQL engine v2",keywords:["hasura","docs","guide","compatibility","update v2"],sidebar_position:13,sidebar_label:"Updating to Hasura v2"},sidebar:"docsSidebar",previous:{title:"MySQL preview",permalink:"/graphql-engine/latest/graphql/core/guides/mysql-preview"},next:{title:"Security Vulnerability Protocol",permalink:"/graphql-engine/latest/graphql/core/security-disclosure/index"}},p={},u=[{value:"Introduction",id:"introduction",level:2},{value:"What has changed?",id:"what-has-changed",level:2},{value:"Concepts",id:"concepts",level:3},{value:"Breaking behaviour changes",id:"hasura-v2-behaviour-changes",level:3},{value:"Hasura configuration",id:"hasura-v2-config-changes",level:3},{value:"Moving from Hasura v1 to Hasura v2",id:"moving-from-hasura-v1-to-v2",level:2},{value:"Hasura v1 and Hasura v2 compatibility",id:"hasura-v1-v2-compatibility",level:3},{value:"Migrate Hasura v1 instance to Hasura v2",id:"migrate-hasura-v1-instance-to-hasura-v2",level:3},{value:"Post update steps",id:"hasura-v1-to-v2-post-update-steps",level:2},{value:"Remove deprecated ENV Vars",id:"remove-deprecated-env-vars",level:3},{value:"Upgrade CLI project to enable multiple database and other new features support",id:"upgrade-cli-project-to-enable-multiple-database-and-other-new-features-support",level:3},{value:"Updates to CI/CD after updating to Hasura v2",id:"updates-to-cicd-after-updating-to-hasura-v2",level:3},{value:"Downgrading back to Hasura v1",id:"downgrading-back-to-hasura-v1",level:2}],m={toc:u};function c(e){var a=e.components,t=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"updating-to-hasura-graphql-engine-v2"},"Updating to Hasura GraphQL engine v2"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"This page talks about the conceptual changes introduces in Hasura v2 and\nthings to keep in mind while updating from Hasura v1 to v2."),(0,i.kt)("p",null,"Do reach out to us if you run into any issues while using Hasura v2 or\nhave any questions regarding any changes introduced."),(0,i.kt)("h2",{id:"what-has-changed"},"What has changed?"),(0,i.kt)("h3",{id:"concepts"},"Concepts"),(0,i.kt)("p",null,"The following are the most significant conceptual changes introduced in\nHasura v2:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Hasura v2 can now connect to multiple databases to generate a\nunified GraphQL API. Each connected database will have a unique\n"source name" that is used to identify it. Apart from Postgres,\nconnecting to SQL server databases is also now supported.'),(0,i.kt)("li",{parentName:"ul"},"Config for connecting a database used to be a startup configuration\n(i.e. set via env vars/flags) but since v2, it is a part of Hasura\nmetadata and can be managed dynamically. See\n",(0,i.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/databases/connect-db"},"connecting databases"),"."),(0,i.kt)("li",{parentName:"ul"},"Hasura metadata can now be stored in a separate dedicated Postgres\nDB.")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"A detailed changelog with all the new features introduced in Hasura v2\nis available on the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/hasura/graphql-engine/releases"},"releases page"),"."))),(0,i.kt)("h3",{id:"hasura-v2-behaviour-changes"},"Breaking behaviour changes"),(0,i.kt)("div",{id:"hasura-v2-null-where-change"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},'Semantics of explicit "null" values in "where" filters have changed')),(0,i.kt)("p",{parentName:"li"},"  According to the discussion in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/hasura/graphql-engine/issues/704#issuecomment-635571407"},"this GitHub issue"),",\nan explicit ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," value in a comparison input object will be\ntreated as an error rather than resulting in the expression being\nevaluated to ",(0,i.kt)("inlineCode",{parentName:"p"},"True"),"."),(0,i.kt)("p",{parentName:"li"},"  For example: The mutation\n",(0,i.kt)("inlineCode",{parentName:"p"},"delete_users(where: {id: {_eq: $userId}}) { name }")," will yield an\nerror if ",(0,i.kt)("inlineCode",{parentName:"p"},"$userId")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," instead of deleting all users."),(0,i.kt)("p",{parentName:"li"},"  The older behaviour can be preserved by setting the\n",(0,i.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_V1_BOOLEAN_NULL_COLLAPSE")," env var to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},'Semantics of "null" join values in remote schema relationships\nhave changed')),(0,i.kt)("p",{parentName:"li"},"In a remote schema relationship query, the remote schema will be\nqueried when all of the joining arguments are not ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," values.\nWhen there are ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," value(s), the remote schema won't be queried\nand the response of the remote relationship field will be ",(0,i.kt)("inlineCode",{parentName:"p"},"null"),".\nEarlier, the remote schema was queried with the ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," value\narguments and the response depended upon how the remote schema\nhandled the ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," arguments but as per user feedback, this\nbehaviour was clearly not expected.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},'Order of keys in objects passed as "order_by" operator inputs is\nnot preserved')),(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"order_by")," operator accepts an array of objects as input to\nallow ordering by multiple fields in a given order, i.e.\n",(0,i.kt)("inlineCode",{parentName:"p"},"[{field1: sortOrder}, {field2: sortOrder}]")," but it is also accepts\na single object with multiple keys as an input, i.e.\n",(0,i.kt)("inlineCode",{parentName:"p"},"{field1: sortOrder, field2: sortOrder}"),". In earlier versions,\nHasura's query parsing logic used to maintain the order of keys in\nthe input object and hence the appropriate ",(0,i.kt)("inlineCode",{parentName:"p"},"order by")," clauses with\nthe fields in the right order were generated ."),(0,i.kt)("p",{parentName:"li"},"As the ",(0,i.kt)("a",{parentName:"p",href:"http://spec.graphql.org/June2018/#sec-Input-Object-Values"},"GraphQL spec"),"\nmentions that input object keys are unordered, Hasura v2.0's new and\nstricter query parsing logic doesn't maintain the order of keys in\nthe input object taking away the guarantee of the generated\n",(0,i.kt)("inlineCode",{parentName:"p"},"order by")," clauses to have the fields in the given order."),(0,i.kt)("p",{parentName:"li"},"For example: The query\n",(0,i.kt)("inlineCode",{parentName:"p"},"fetch_users(order_by: {age: desc, name: asc}) {id name age}")," which\nis intended to fetch users ordered by their age and then by their\nname is now not guaranteed to return results first ordered by age\nand then by their name as the ",(0,i.kt)("inlineCode",{parentName:"p"},"order_by")," input is passed as an\nobject. To achieve the expected behaviour, the following query\n",(0,i.kt)("inlineCode",{parentName:"p"},"fetch_users(order_by: [{age: desc}, {name: asc}]) {id name age}"),"\nshould be used which uses an array to define the order of fields to\ngenerate the appropriate ",(0,i.kt)("inlineCode",{parentName:"p"},"order by")," clause.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Type name for computed fields' input argument has changed")),(0,i.kt)("p",{parentName:"li"},"The name of the computed field input argument has changed from ",(0,i.kt)("inlineCode",{parentName:"p"},"<function_name>_args"),"\nto ",(0,i.kt)("inlineCode",{parentName:"p"},"<computed_field_name>_<table_name>_args"),".\nThis change enables adding a root-level tracked function as a\ncomputed field which previously would have thrown an input type\nconflict error.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Hasura APIs generated by older Hasura versions cannot be added as\nRemote Schemas to Hasura v2")),(0,i.kt)("p",{parentName:"li"},"With v2.0, some of the auto-generated schema types have been\nextended. For example, ",(0,i.kt)("inlineCode",{parentName:"p"},"String_comparison_exp")," has an additional\n",(0,i.kt)("inlineCode",{parentName:"p"},"regex")," input object field. This means if you have a Hasura API with\nan older Hasura version added as a remote schema then it will have a\ntype conflict. You should update all Hasura remote schemas to avoid\nsuch type conflicts.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"CLI Migrations are executed sequentially, instead of one large\ntransaction")),(0,i.kt)("p",{parentName:"li"},"While applying multiple migrations, in earlier Hasura CLI versions\nall migration files were run under one transaction block. i.e. if\nany migration threw an error, all the previously successfully\nexecuted migrations would be rolled back. With Hasura CLI v2.0, each\nmigration file is run in its own transaction block but all the\nmigrations are not executed under one. i.e. if any migration throws\nan error, applying further migrations will be stopped but the other\nsuccessfully executed migrations up till that point will not be\nrolled back."))),(0,i.kt)("div",{id:"hasura-v2-env-changes"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Deprecation of database specific env vars")),(0,i.kt)("p",{parentName:"li"},"In v2.0, the values of the following env vars are used to define the\nconnection parameters of the ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," database while updating an\nexisting instance or while starting a fresh instance. During\nmetadata initialization, their values are moved to the metadata of\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," database as defined ",(0,i.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/syntax-defs#pgconfiguration"},"here"),"."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HASURA_GRAPHQL_PG_CONNECTIONS")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HASURA_GRAPHQL_PG_TIMEOUT")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HASURA_GRAPHQL_NO_OF_RETRIES")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HASURA_GRAPHQL_PG_CONN_LIFETIME")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HASURA_GRAPHQL_PG_POOL_TIMEOUT")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HASURA_GRAPHQL_USE_PREPARED_STATEMENTS")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HASURA_GRAPHQL_TX_ISOLATION")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HASURA_GRAPHQL_READ_REPLICA_URLS")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HASURA_GRAPHQL_CONNECTIONS_PER_READ_REPLICA"))),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Post the initial setup/update once the metadata is initialized,\nthese env vars can be considered as Deprecated.")," i.e. Changing or\nsetting values of these env vars will have no impact as the values\nin the Hasura metadata are now used to define the connection\nparameters."))),(0,i.kt)("h3",{id:"hasura-v2-config-changes"},"Hasura configuration"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"To accommodate changes for storing information for multiple\ndatabases, the Hasura metadata and the Hasura CLI project versions\nhave been bumped from ",(0,i.kt)("inlineCode",{parentName:"p"},"v2")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"v3"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"v2")," versions of the\nmetadata and CLI project can continue to be used with Hasura v2\ninstances. Hasura v2 will assume the ",(0,i.kt)("inlineCode",{parentName:"p"},"v2")," metadata and migrations\nbelong to a database connected with the name ",(0,i.kt)("inlineCode",{parentName:"p"},"default"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A new optional env var ",(0,i.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_METADATA_DATABASE_URL")," is now\nintroduced. When set, this Postgres database is used to store the\nHasura metadata. If not set, the database set using\n",(0,i.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_DATABASE_URL")," is used to store the Hasura metadata."),(0,i.kt)("p",{parentName:"li"},"Either one of ",(0,i.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_METADATA_DATABASE_URL")," or\n",(0,i.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_DATABASE_URL")," needs to be set with a Postgres\ndatabase to start a Hasura v2 instance as Hasura always needs a\nPostgres database to store its metadata.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The database set using the ",(0,i.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_DATABASE_URL")," env var is\nconnected automatically with the name ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," in Hasura v2 while\nupdating an existing instance or while starting a fresh instance."),(0,i.kt)("p",{parentName:"li"},"Setting this env var post initial setup/update will have no effect\nas the Hasura metadata for data sources would already have been\ninitialized and the env var will be treated as any other custom env\nvar."),(0,i.kt)("p",{parentName:"li"},"It is now not mandatory to set this env var if a dedicated\n",(0,i.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_METADATA_DATABASE_URL")," is set.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Custom env vars can now be used to connect databases dynamically at\nruntime.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"With support for multiple databases, older database specific env\nvars have been deprecated. ",(0,i.kt)("a",{parentName:"p",href:"#hasura-v2-env-changes"},"See details")))),(0,i.kt)("h2",{id:"moving-from-hasura-v1-to-v2"},"Moving from Hasura v1 to Hasura v2"),(0,i.kt)("h3",{id:"hasura-v1-v2-compatibility"},"Hasura v1 and Hasura v2 compatibility"),(0,i.kt)("p",null,"All existing metadata and migrations from a Hasura v1 instance are\nassumed to belong to a database named ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," in Hasura v2."),(0,i.kt)("p",null,"Hence ",(0,i.kt)("strong",{parentName:"p"},'in Hasura v2, a database with name "default" needs to be added\nto apply metadata and migrations from a Hasura v1 instance'),"."),(0,i.kt)("p",null,"Post adding a database named ",(0,i.kt)("inlineCode",{parentName:"p"},"default"),", the Hasura v2 instance should\nbehave equivalently to the Hasura v1 instance and all previous workflows\nwill continue working as they were."),(0,i.kt)("p",null,"Refer to ",(0,i.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/databases/connect-db"},"connecting databases")," to add a database to\nHasura v2."),(0,i.kt)("h3",{id:"migrate-hasura-v1-instance-to-hasura-v2"},"Migrate Hasura v1 instance to Hasura v2"),(0,i.kt)("p",null,"Hasura v2 is backwards compatible with Hasura v1. Hence simply updating\nthe Hasura docker image version number and restarting your Hasura\ninstance should work seamlessly. The database connected using the\n",(0,i.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_DATABASE_URL")," env var will be added as a database with\nthe name ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," automatically and all existing metadata and\nmigrations will be assumed to belong to it."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"In case you happen to have a large number of past cron and event trigger\nlogs in your database, this might slow down the update to v2 and might\neven cause unexpected errors in certain scenarios."),(0,i.kt)("p",{parentName:"div"},(0,i.kt)("strong",{parentName:"p"},"It is highly recommended to clean up past cron and event trigger logs\ndata from the database before attempting the update if you have a lot of\nhistorical data.")),(0,i.kt)("p",{parentName:"div"},"You can take a dump of this data before cleaning up if you wish to keep\nthe log history. This data can be restored back into the DB if required\npost the update."))),(0,i.kt)("h2",{id:"hasura-v1-to-v2-post-update-steps"},"Post update steps"),(0,i.kt)("h3",{id:"remove-deprecated-env-vars"},"Remove deprecated ENV Vars"),(0,i.kt)("p",null,"With support for multiple databases, database connection related config\nis now stored in Hasura metadata and the older database specific env\nvars have been deprecated. ",(0,i.kt)("a",{parentName:"p",href:"#hasura-v2-env-changes"},"See details"),"."),(0,i.kt)("p",null,"Post update to Hasura v2 these env vars can be removed as they will now\nbe ignored."),(0,i.kt)("p",null,"This config can now be modified by updating the Hasura metadata for the\nconnected database(s) via the console/CLI/APIs."),(0,i.kt)("h3",{id:"upgrade-cli-project-to-enable-multiple-database-and-other-new-features-support"},"Upgrade CLI project to enable multiple database and other new features support"),(0,i.kt)("p",null,"Update your Hasura CLI project to ",(0,i.kt)("inlineCode",{parentName:"p"},"config v3")," using the steps mentioned\nin ",(0,i.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/migrations/upgrade-v3"},"this guide")," to take full advantages of the\nfeatures introduced in Hasura v2."),(0,i.kt)("p",null,"Post upgrading to ",(0,i.kt)("inlineCode",{parentName:"p"},"config v3"),", the database connection parameters would\nhave been moved to the metadata. Hence it is important to ensure that\nthe same env vars are used for storing database connection strings\nacross all environments and the metadata being applied also uses the\nappropriate env vars."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you do not need multiple database support or any of new features\nintroduced in Hasura v2, like REST endpoints, inherited roles etc., then\nyou can continue to use ",(0,i.kt)("inlineCode",{parentName:"p"},"config v2")," project directory and workflows."),(0,i.kt)("p",{parentName:"div"},"Though we would recommend to upgrade to ",(0,i.kt)("inlineCode",{parentName:"p"},"config v3")," anyway as it\nincludes some useful directory structure changes."))),(0,i.kt)("h3",{id:"updates-to-cicd-after-updating-to-hasura-v2"},"Updates to CI/CD after updating to Hasura v2"),(0,i.kt)("p",null,"The following commands need to be executed in the specified order to\napply metadata and migrations in CI/CD workflows"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If using Hasura CLI project in ",(0,i.kt)("inlineCode",{parentName:"li"},"config v2"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"No changes needed."),(0,i.kt)("li",{parentName:"ul"},"Run:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hasura migrate apply")," - ",(0,i.kt)("em",{parentName:"li"},'(apply migrations to the database\nnamed "default")')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hasura metadata apply")," - ",(0,i.kt)("em",{parentName:"li"},'(apply metadata to the database\nnamed "default")')))))),(0,i.kt)("li",{parentName:"ul"},"If using Hasura CLI project in ",(0,i.kt)("inlineCode",{parentName:"li"},"config v3"),":",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Ensure that the same env vars are used for storing database\nconnection strings across all environments and the metadata\nbeing applied also uses the appropriate env vars."),(0,i.kt)("li",{parentName:"ul"},"Run:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hasura metadata apply")," - ",(0,i.kt)("em",{parentName:"li"},"(connect Hasura to the databases\nconfigured in the metadata)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hasura migrate apply --all-databases")," - ",(0,i.kt)("em",{parentName:"li"},"(apply the\nmigrations to the connected databases)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"hasura metadata reload")," - ",(0,i.kt)("em",{parentName:"li"},"(make Hasura aware of any newly\ncreated database objects in the previous step)"))))))),(0,i.kt)("h2",{id:"downgrading-back-to-hasura-v1"},"Downgrading back to Hasura v1"),(0,i.kt)("p",null,"In case there are some issues with your Hasura instance post updating to\nHasura v2, you can downgrade back to Hasura v1 by reverting the Hasura\ndocker image version and using the ",(0,i.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/deployment/downgrading"},"downgrade command"),"\nto revert the Hasura metadata catalogue changes:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -e HASURA_GRAPHQL_DATABASE_URL=$POSTGRES_URL hasura/graphql-engine:v2.0.0 graphql-engine downgrade --to-v1.3.3\n")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You can downgrade a Hasura v2 instance to Hasura v1 only if there is\nonly one database connected to it."))))}c.isMDXComponent=!0}}]);