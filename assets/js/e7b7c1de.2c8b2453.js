"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[955],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,h=d["".concat(u,".").concat(m)]||d[m]||l[m]||s;return r?n.createElement(h,o(o({ref:t},p),{},{components:r})):n.createElement(h,o({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<s;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},22138:function(e,t,r){var n=r(67294),a=r(57932),s=r(72389),o=r(86010),i=r(71077);t.Z=function(e){var t=e.query,r=e.variables,u=e.response,c=e.viewOnly,p=void 0===c||c,l=(0,s.Z)();return n.createElement("div",{className:"graphiql "+(0,o.Z)({"with-vars":!!r,"view-only":p})},n.createElement(a.ZP,{readOnly:p,editorTheme:"dracula",schema:null,fetcher:l?(0,i.n)({url:"https://hasura.io/graphql"}):function(){return null},query:t,variables:r,response:u}))}},54376:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return d}});var n=r(83117),a=r(80102),s=(r(67294),r(3905)),o=r(22138),i=["components"],u={sidebar_label:"Simple object queries",sidebar_position:1,description:"Make simple object queries on Postgres in Hasura",keywords:["hasura","docs","postgres","query","object query"]},c="Postgres: Simple object queries",p={unversionedId:"graphql/core/databases/postgres/queries/simple-object-queries",id:"graphql/core/databases/postgres/queries/simple-object-queries",title:"Postgres: Simple object queries",description:"Make simple object queries on Postgres in Hasura",source:"@site/docs/graphql/core/databases/postgres/queries/simple-object-queries.mdx",sourceDirName:"graphql/core/databases/postgres/queries",slug:"/graphql/core/databases/postgres/queries/simple-object-queries",permalink:"/docs/latest/graphql/core/databases/postgres/queries/simple-object-queries",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/databases/postgres/queries/simple-object-queries.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Simple object queries",sidebar_position:1,description:"Make simple object queries on Postgres in Hasura",keywords:["hasura","docs","postgres","query","object query"]},sidebar:"docsSidebar",previous:{title:"Postgres: Queries",permalink:"/docs/latest/graphql/core/databases/postgres/queries/index"},next:{title:"Nested object queries",permalink:"/docs/latest/graphql/core/databases/postgres/queries/nested-object-queries"}},l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Fetch list of objects",id:"fetch-list-of-objects",level:2},{value:"Fetch an object using its primary key",id:"fetch-an-object-using-its-primary-key",level:2},{value:"Fetch value from JSON/JSONB column at particular path",id:"fetch-value-from-jsonjsonb-column-at-particular-path",level:2}],m={toc:d};function h(e){var t=e.components,r=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"postgres-simple-object-queries"},"Postgres: Simple object queries"),(0,s.kt)("h2",{id:"introduction"},"Introduction"),(0,s.kt)("p",null,"You can fetch a single node or multiple nodes of the same type using a\nsimple object query."),(0,s.kt)("h2",{id:"fetch-list-of-objects"},"Fetch list of objects"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example:")," Fetch a list of authors:"),(0,s.kt)(o.Z,{query:"query {\n  authors {\n    id\n    name\n  }\n}",response:'{\n  "data": {\n    "authors": [\n      {\n        "id": 1,\n        "name": "Justin"\n      },\n      {\n        "id": 2,\n        "name": "Beltran"\n      },\n      {\n        "id": 3,\n        "name": "Sidney"\n      },\n      {\n        "id": 4,\n        "name": "Anjela"\n      }\n    ]\n  }\n}',mdxType:"GraphiQLIDE"}),(0,s.kt)("h2",{id:"fetch-an-object-using-its-primary-key"},"Fetch an object using its primary key"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example:")," Fetch an author using their primary key:"),(0,s.kt)(o.Z,{query:"query {\n  authors_by_pk(id: 1) {\n    id\n    name\n  }\n}",response:'{\n  "data": {\n    "authors_by_pk": {\n      "id": 1,\n      "name": "Justin"\n    }\n  }\n}',mdxType:"GraphiQLIDE"}),(0,s.kt)("h2",{id:"fetch-value-from-jsonjsonb-column-at-particular-path"},"Fetch value from JSON/JSONB column at particular path"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example:")," Fetch the city and phone number of an author from their\nJSONB address column:"),(0,s.kt)(o.Z,{query:'query {\n  authors_by_pk(id: 1) {\n    id\n    name\n    address\n    city: address(path: "$.city")\n    phone: address(path: "$.phone_numbers.[0]")\n  }\n}',response:'{\n  "data": {\n    "authors_by_pk": {\n      "id": 1,\n      "name": "Justin",\n      "address": {\n        "city": "Bengaluru",\n        "phone_numbers": [9090909090, 8080808080]\n      },\n      "city": "Bengaluru",\n      "phone": 9090909090\n    }\n  }\n}',mdxType:"GraphiQLIDE"}),(0,s.kt)("p",null,"See the ",(0,s.kt)("a",{parentName:"p",href:"/docs/latest/graphql/core/api-reference/graphql-api/query#simpleobject"},"API reference")," for more details."))}h.isMDXComponent=!0}}]);