"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7546],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return u}});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var c=n.createContext({}),d=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),s=d(a),u=l,h=s["".concat(c,".").concat(u)]||s[u]||p[u]||r;return a?n.createElement(h,o(o({ref:t},m),{},{components:a})):n.createElement(h,o({ref:t},m))}));function u(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,o=new Array(r);o[0]=s;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var d=2;d<r;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},3150:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return p}});var n=a(83117),l=a(80102),r=(a(67294),a(3905)),o=["components"],i={sidebar_label:"Query Collections",sidebar_position:12,description:"Manage query collections with the Hasura schema/metadata API",keywords:["hasura","docs","schema/metadata API","API reference","query collection"]},c="Schema/Metadata API Reference: Query collections (Deprecated)",d={unversionedId:"graphql/core/api-reference/schema-metadata-api/query-collections",id:"graphql/core/api-reference/schema-metadata-api/query-collections",title:"Schema/Metadata API Reference: Query collections (Deprecated)",description:"Manage query collections with the Hasura schema/metadata API",source:"@site/docs/graphql/core/api-reference/schema-metadata-api/query-collections.mdx",sourceDirName:"graphql/core/api-reference/schema-metadata-api",slug:"/graphql/core/api-reference/schema-metadata-api/query-collections",permalink:"/docs/latest/graphql/core/api-reference/schema-metadata-api/query-collections",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/api-reference/schema-metadata-api/query-collections.mdx",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_label:"Query Collections",sidebar_position:12,description:"Manage query collections with the Hasura schema/metadata API",keywords:["hasura","docs","schema/metadata API","API reference","query collection"]},sidebar:"docsSidebar",previous:{title:"Remote Relationships",permalink:"/docs/latest/graphql/core/api-reference/schema-metadata-api/remote-relationships"},next:{title:"RESTified GraphQL Endpoints",permalink:"/docs/latest/graphql/core/api-reference/schema-metadata-api/restified-endpoints"}},m={},p=[{value:"Introduction",id:"introduction",level:2},{value:"create_query_collection",id:"schema-metadata-create-query-collection",level:2},{value:"Args Syntax",id:"schema-metadata-create-query-collection-syntax",level:3},{value:"drop_query_collection",id:"schema-metadata-drop-query-collection",level:2},{value:"Args syntax",id:"schema-metadata-drop-query-collection-syntax",level:3},{value:"add_query_to_collection",id:"schema-metadata-add-query-to-collection",level:2},{value:"Args Syntax",id:"schema-metadata-add-query-to-collection-syntax",level:3},{value:"drop_query_from_collection",id:"schema-metadata-drop-query-from-collection",level:2},{value:"Args Syntax",id:"schema-metadata-drop-query-from-collection-syntax",level:3},{value:"add_collection_to_allowlist",id:"schema-metadata-add-collection-to-allowlist",level:2},{value:"Args Syntax",id:"schema-metadata-add-collection-to-allowlist-syntax",level:3},{value:"drop_collection_from_allowlist",id:"schema-metadata-drop-collection-from-allowlist",level:2},{value:"Args Syntax",id:"schema-metadata-drop-collection-from-allowlist-syntax",level:3}],s={toc:p};function u(e){var t=e.components,a=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"schemametadata-api-reference-query-collections-deprecated"},"Schema/Metadata API Reference: Query collections (Deprecated)"),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Deprecation")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"In versions ",(0,r.kt)("inlineCode",{parentName:"p"},"v2.0.0")," and above, the schema/metadata API is deprecated in\nfavour of the ",(0,r.kt)("a",{parentName:"p",href:"/docs/latest/graphql/core/api-reference/schema-api/index"},"schema API")," and the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/latest/graphql/core/api-reference/metadata-api/index"},"metadata API"),"."),(0,r.kt)("p",{parentName:"div"},"Though for backwards compatibility, the schema/metadata APIs will\ncontinue to function."))),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Group queries using query collections."),(0,r.kt)("p",null,"Create/drop query collections and add/drop a query to a collection using\nthe following query types."),(0,r.kt)("h2",{id:"schema-metadata-create-query-collection"},"create_query_collection"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"create_query_collection")," is used to define a collection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "create_query_collection",\n    "args": {\n         "name": "my_collection",\n         "comment": "an optional comment",\n         "definition": {\n             "queries": [\n                 {"name": "query_1", "query": "query { test {id name}}"}\n              ]\n         }\n     }\n}\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The queries in query collections are validated against the schema. So, adding an invalid query would result in inconsistent metadata error.\nAs the query collection is used in allowlists and REST endpoints, they are validated as well."))),(0,r.kt)("h3",{id:"schema-metadata-create-query-collection-syntax"},"Args Syntax"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionname"},"CollectionName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the query collection")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"definition"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionquery"},"CollectionQuery")," array"),(0,r.kt)("td",{parentName:"tr",align:null},"List of queries")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"comment"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional comment")))),(0,r.kt)("h2",{id:"schema-metadata-drop-query-collection"},"drop_query_collection"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"drop_query_collection")," is used to drop a collection"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "drop_query_collection",\n    "args": {\n         "collection": "my_collection",\n         "cascade": false\n     }\n}\n')),(0,r.kt)("h3",{id:"schema-metadata-drop-query-collection-syntax"},"Args syntax"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"collection"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionname"},"CollectionName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the query collection")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cascade"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"When set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the collection (if present) is removed from the allowlist")))),(0,r.kt)("h2",{id:"schema-metadata-add-query-to-collection"},"add_query_to_collection"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"add_query_to_collection")," is used to add a query to a given collection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "add_query_to_collection",\n    "args": {\n         "collection_name": "my_collection",\n         "query_name": "query_2",\n         "query": "query {test {name}}"\n     }\n}\n')),(0,r.kt)("h3",{id:"schema-metadata-add-query-to-collection-syntax"},"Args Syntax"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"collection_name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionname"},"CollectionName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the query collection")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"query_name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#queryname"},"QueryName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the query")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"query"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"text"),(0,r.kt)("td",{parentName:"tr",align:null},"The GraphQL query text")))),(0,r.kt)("h2",{id:"schema-metadata-drop-query-from-collection"},"drop_query_from_collection"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"drop_query_from_collection")," is used to remove a query from a given\ncollection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "drop_query_from_collection",\n    "args": {\n         "collection_name": "my_collection",\n         "query_name": "query_2"\n     }\n}\n')),(0,r.kt)("h3",{id:"schema-metadata-drop-query-from-collection-syntax"},"Args Syntax"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"collection_name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionname"},"CollectionName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the query collection")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"query_name"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#queryname"},"QueryName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the query")))),(0,r.kt)("h2",{id:"schema-metadata-add-collection-to-allowlist"},"add_collection_to_allowlist"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"add_collection_to_allowlist")," is used to add a collection to the allow-list."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "add_collection_to_allowlist",\n    "args": {\n         "collection": "my_collection"\n     }\n}\n')),(0,r.kt)("h3",{id:"schema-metadata-add-collection-to-allowlist-syntax"},"Args Syntax"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"collection"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionname"},"CollectionName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of a query collection to be added to the allow-list")))),(0,r.kt)("h2",{id:"schema-metadata-drop-collection-from-allowlist"},"drop_collection_from_allowlist"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"drop_collection_from_allowlist")," is used to remove a collection from the allow-list."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'POST /v1/query HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n\n{\n    "type" : "drop_collection_from_allowlist",\n    "args": {\n         "collection": "my_collection_1"\n     }\n}\n')),(0,r.kt)("h3",{id:"schema-metadata-drop-collection-from-allowlist-syntax"},"Args Syntax"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Schema"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"collection"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/latest/graphql/core/api-reference/syntax-defs#collectionname"},"CollectionName")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of a query collection to be removed from the allow-list")))))}u.isMDXComponent=!0}}]);