"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5187],{3905:function(e,n,r){r.d(n,{Zo:function(){return d},kt:function(){return p}});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=t.createContext({}),u=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},d=function(e){var n=u(e.components);return t.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),g=u(r),p=a,m=g["".concat(l,".").concat(p)]||g[p]||c[p]||i;return r?t.createElement(m,s(s({ref:n},d),{},{components:r})):t.createElement(m,s({ref:n},d))}));function p(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=g;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var u=2;u<i;u++)s[u]=r[u];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},22138:function(e,n,r){var t=r(67294),a=r(57932),i=r(72389),s=r(86010),o=r(71077);n.Z=function(e){var n=e.query,r=e.variables,l=e.response,u=e.viewOnly,d=void 0===u||u,c=(0,i.Z)();return t.createElement("div",{className:"graphiql "+(0,s.Z)({"with-vars":!!r,"view-only":d})},t.createElement(a.ZP,{readOnly:d,editorTheme:"dracula",schema:null,fetcher:c?(0,o.n)({url:"https://hasura.io/graphql"}):function(){return null},query:n,variables:r,response:l}))}},77241:function(e,n,r){r.r(n),r.d(n,{assets:function(){return c},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return g}});var t=r(83117),a=r(80102),i=(r(67294),r(3905)),s=r(22138),o=["components"],l={sidebar_label:"Sort query results",sidebar_position:5,description:"Sort query results on MS SQL Server in Hasura",keywords:["hasura","docs","ms sql server","query","sort"]},u="MS SQL Server: Sort query results",d={unversionedId:"graphql/core/databases/ms-sql-server/queries/sorting",id:"graphql/core/databases/ms-sql-server/queries/sorting",title:"MS SQL Server: Sort query results",description:"Sort query results on MS SQL Server in Hasura",source:"@site/docs/graphql/core/databases/ms-sql-server/queries/sorting.mdx",sourceDirName:"graphql/core/databases/ms-sql-server/queries",slug:"/graphql/core/databases/ms-sql-server/queries/sorting",permalink:"/graphql-engine/latest/graphql/core/databases/ms-sql-server/queries/sorting",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/databases/ms-sql-server/queries/sorting.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_label:"Sort query results",sidebar_position:5,description:"Sort query results on MS SQL Server in Hasura",keywords:["hasura","docs","ms sql server","query","sort"]},sidebar:"docsSidebar",previous:{title:"Filter query results / search queries",permalink:"/graphql-engine/latest/graphql/core/databases/ms-sql-server/queries/query-filters"},next:{title:"Paginate query results",permalink:"/graphql-engine/latest/graphql/core/databases/ms-sql-server/queries/pagination"}},c={},g=[{value:"The <strong>order_by</strong> argument",id:"the-order_by-argument",level:2},{value:"Sorting objects",id:"sorting-objects",level:2},{value:"Sorting nested objects",id:"ms-sql-server-nested-sort",level:2},{value:"Sorting based on nested object&#39;s fields",id:"sorting-based-on-nested-objects-fields",level:2},{value:"For object relationships",id:"for-object-relationships",level:3},{value:"For array relationships",id:"for-array-relationships",level:3},{value:"Sorting by multiple fields",id:"sorting-by-multiple-fields",level:2}],p={toc:g};function m(e){var n=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ms-sql-server-sort-query-results"},"MS SQL Server: Sort query results"),(0,i.kt)("h2",{id:"the-order_by-argument"},"The ",(0,i.kt)("strong",{parentName:"h2"},"order_by")," argument"),(0,i.kt)("p",null,"Results from your query can be sorted by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"order_by")," argument.\nThe argument can be used to sort nested objects too."),(0,i.kt)("p",null,"The sort order (ascending vs. descending) is set by specifying the ",(0,i.kt)("inlineCode",{parentName:"p"},"asc"),"\nor ",(0,i.kt)("inlineCode",{parentName:"p"},"desc")," enum value for the column name in the ",(0,i.kt)("inlineCode",{parentName:"p"},"order_by")," input object,\ne.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"{name: desc}"),"."),(0,i.kt)("p",null,"By default, for ascending ordering ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," values are returned at the end\nof the results and for descending ordering ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," values are returned at\nthe start of the results. ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," values can be fetched first on\nascending ordering by specifying ",(0,i.kt)("inlineCode",{parentName:"p"},"asc_nulls_first")," and last on\ndescending ordering by specifying ",(0,i.kt)("inlineCode",{parentName:"p"},"desc_nulls_last")," enum value e.g.\n",(0,i.kt)("inlineCode",{parentName:"p"},"{name: desc_nulls_last}"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"order_by")," argument takes an array of objects to allow sorting by\nmultiple columns."),(0,i.kt)("p",null,"You can also use nested objects' fields to sort the results. Only\n",(0,i.kt)("strong",{parentName:"p"},"columns from object relationships")," and ",(0,i.kt)("strong",{parentName:"p"},"aggregates from array\nrelationships")," can be used for sorting."),(0,i.kt)("p",null,"You can see the complete specification of the ",(0,i.kt)("inlineCode",{parentName:"p"},"order_by")," argument in the\n",(0,i.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/api-reference/graphql-api/query#orderbyexp"},"API reference"),"."),(0,i.kt)("p",null,"The following are example queries for different sorting use cases:"),(0,i.kt)("h2",{id:"sorting-objects"},"Sorting objects"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")," Fetch a list of authors sorted by their names in an\nascending order:"),(0,i.kt)(s.Z,{query:"query {\n  authors (\n    order_by: {name: asc}\n  ) {\n    id\n    name\n  }\n}",response:'{\n  "data": {\n    "authors": [\n      {\n        "id": 5,\n        "name": "Amii"\n      },\n      {\n        "id": 4,\n        "name": "Anjela"\n      },\n      {\n        "id": 8,\n        "name": "April"\n      },\n      {\n        "id": 2,\n        "name": "Beltran"\n      },\n      {\n        "id": 7,\n        "name": "Berti"\n      },\n      {\n        "id": 6,\n        "name": "Corny"\n      }\n    ]\n  }\n}',mdxType:"GraphiQLIDE"}),(0,i.kt)("h2",{id:"ms-sql-server-nested-sort"},"Sorting nested objects"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")," Fetch a list of authors sorted by their names with a list\nof their articles that is sorted by their rating:"),(0,i.kt)(s.Z,{query:"query {\n  authors (order_by: {name: asc}) {\n    id\n    name\n    articles(order_by: {rating: desc}) {\n      id\n      title\n      rating\n    }\n  }\n}",response:'{\n  "data": {\n    "authors": [\n      {\n        "id": 5,\n        "name": "Amii",\n        "articles": [\n          {\n            "rating": 5,\n            "id": 17,\n            "title": "montes nascetur ridiculus"\n          },\n          {\n            "rating": 3,\n            "id": 12,\n            "title": "volutpat quam pede"\n          },\n          {\n            "rating": 2,\n            "id": 4,\n            "title": "vestibulum ac est"\n          }\n        ]\n      },\n      {\n        "id": 4,\n        "name": "Anjela",\n        "articles": [\n          {\n            "rating": 4,\n            "id": 3,\n            "title": "amet justo morbi"\n          },\n          {\n            "rating": 1,\n            "id": 1,\n            "title": "sit amet"\n          }\n        ]\n      },\n      {\n        "id": 8,\n        "name": "April",\n        "articles": [\n          {\n            "rating": 4,\n            "id": 13,\n            "title": "vulputate elementum"\n          },\n          {\n            "rating": 2,\n            "id": 20,\n            "title": "eu nibh"\n          }\n        ]\n      }\n    ]\n  }\n}',mdxType:"GraphiQLIDE"}),(0,i.kt)("h2",{id:"sorting-based-on-nested-objects-fields"},"Sorting based on nested object's fields"),(0,i.kt)("p",null,"Only ",(0,i.kt)("strong",{parentName:"p"},"columns from object relationships")," and ",(0,i.kt)("strong",{parentName:"p"},"aggregates from array\nrelationships")," can be used for sorting."),(0,i.kt)("h3",{id:"for-object-relationships"},"For object relationships"),(0,i.kt)("p",null,"For object relationships only columns can be used for sorting."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")," Fetch a list of articles that are sorted by their author's\nids in descending order:"),(0,i.kt)(s.Z,{query:"query {\n  articles (\n    order_by: {author: {id: desc}}\n  ) {\n    id\n    rating\n    published_on\n    author {\n      id\n      name\n    }\n  }\n}",response:'{\n  "data": {\n    "articles": [\n      {\n        "id": 3,\n        "title": "Article 3",\n        "content": "Sample article content 3",\n        "author": {\n          "id": 2,\n          "name": "Author 2"\n        }\n      },\n      {\n        "id": 1,\n        "title": "Article 1",\n        "content": "Sample article content 1",\n        "author": {\n          "id": 1,\n          "name": "Author 1"\n        }\n      },\n      {\n        "id": 2,\n        "title": "Article 2",\n        "content": "Sample article content 2",\n        "author": {\n          "id": 1,\n          "name": "Author 1"\n        }\n      }\n    ]\n  }\n}',mdxType:"GraphiQLIDE"}),(0,i.kt)("h3",{id:"for-array-relationships"},"For array relationships"),(0,i.kt)("p",null,"For array relationships only aggregates can be used for sorting."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")," Fetch a list of authors sorted in descending order of their\narticle count:"),(0,i.kt)(s.Z,{query:"query {\n  authors (\n    order_by: {\n      articles_aggregate: {count: desc}\n    }\n  ) {\n    id\n    name\n    articles_aggregate {\n      aggregate{\n        count\n      }\n    }\n  }\n}",response:'{\n  "data": {\n    "authors": [\n      {\n        "id": 5,\n        "name": "Amii",\n        "articles_aggregate":{\n          "aggregate": {\n            "count": 3\n          }\n        }\n      },\n      {\n        "id": 4,\n        "name": "Anjela",\n        "articles_aggregate":{\n          "aggregate": {\n            "count": 2\n          }\n        }\n      },\n      {\n        "id": 8,\n        "name": "April",\n        "articles_aggregate":{\n          "aggregate": {\n            "count": 2\n          }\n        }\n      }\n    ]\n  }\n}',mdxType:"GraphiQLIDE"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")," Fetch a list of authors sorted in increasing order of their\nhighest article rating:"),(0,i.kt)(s.Z,{query:"query {\n  authors(\n    order_by: {\n      articles_aggregate: {\n        max: {rating: asc_nulls_last}\n      }\n    }\n  ) {\n    id\n    name\n    articles_aggregate {\n      aggregate{\n        max {rating}\n      }\n    }\n  }\n}",response:'{\n  "data": {\n    "authors": [\n      {\n        "id": 7,\n        "name": "Berti",\n        "articles_aggregate": {\n          "aggregate": {\n            "max": {\n              "rating": 2\n            }\n          }\n        }\n      },\n      {\n        "id": 2,\n        "name": "Beltran",\n        "articles_aggregate": {\n          "aggregate": {\n            "max": {\n              "rating": 3\n            }\n          }\n        }\n      },\n      {\n        "id": 8,\n        "name": "April",\n        "articles_aggregate": {\n          "aggregate": {\n            "max": {\n              "rating": 4\n            }\n          }\n        }\n      },\n      {\n        "id": 3,\n        "name": "Sidney",\n        "articles_aggregate": {\n          "aggregate": {\n            "max": {\n              "rating": 4\n            }\n          }\n        }\n      },\n      {\n        "id": 5,\n        "name": "Amii",\n        "articles_aggregate": {\n          "aggregate": {\n            "max": {\n              "rating": 5\n            }\n          }\n        }\n      },\n      {\n        "id": 9,\n        "name": "Ninnetta",\n        "articles_aggregate": {\n          "aggregate": {\n            "max": {\n              "rating": null\n            }\n          }\n        }\n      }\n    ]\n  }\n}',mdxType:"GraphiQLIDE"}),(0,i.kt)("h2",{id:"sorting-by-multiple-fields"},"Sorting by multiple fields"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")," Fetch a list of articles that is sorted by their rating\n(descending) and then on their published date (ascending with nulls\nfirst):"),(0,i.kt)(s.Z,{query:"query {\n  articles (\n    order_by: [\n      {rating: desc},\n      {published_on: asc_nulls_first}\n    ]\n  ) {\n    id\n    rating\n    published_on\n  }\n}",response:'{\n  "data": {\n    "articles": [\n      {\n        "id": 17,\n        "rating": 5,\n        "published_on": null\n      },\n      {\n        "id": 14,\n        "rating": 4,\n        "published_on": null\n      },\n      {\n        "id": 7,\n        "rating": 4,\n        "published_on": "2016-07-09"\n      },\n      {\n        "id": 3,\n        "rating": 4,\n        "published_on": "2017-05-26"\n      }\n    ]\n  }\n}',mdxType:"GraphiQLIDE"}))}m.isMDXComponent=!0}}]);