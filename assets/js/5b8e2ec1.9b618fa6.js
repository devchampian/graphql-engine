"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[283],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,h=p["".concat(l,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5586:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return u}});var r=n(83117),a=n(80102),o=(n(67294),n(3905)),i=["components"],s={description:"Telemetry on Hasura",keywords:["hasura","docs","guide","telemetry"],sidebar_position:10,sidebar_label:"Telemetry"},l="Telemetry Guide/FAQ",d={unversionedId:"graphql/core/guides/telemetry",id:"graphql/core/guides/telemetry",title:"Telemetry Guide/FAQ",description:"Telemetry on Hasura",source:"@site/docs/graphql/core/guides/telemetry.mdx",sourceDirName:"graphql/core/guides",slug:"/graphql/core/guides/telemetry",permalink:"/docs/latest/graphql/core/guides/telemetry",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/guides/telemetry.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{description:"Telemetry on Hasura",keywords:["hasura","docs","guide","telemetry"],sidebar_position:10,sidebar_label:"Telemetry"},sidebar:"docsSidebar",previous:{title:"Auditing tables",permalink:"/docs/latest/graphql/core/guides/auditing-tables"},next:{title:"Code Editor Integrations",permalink:"/docs/latest/graphql/core/guides/code-editor-integrations/index"}},c={},u=[{value:"Introduction",id:"introduction",level:2},{value:"What data is collected?",id:"what-data-is-collected",level:2},{value:"Server",id:"server",level:3},{value:"Console",id:"console",level:3},{value:"CLI",id:"cli",level:3},{value:"Where is the data sent?",id:"where-is-the-data-sent",level:2},{value:"How do I turn off telemetry (opt-out)?",id:"telemetry-optout",level:2},{value:"Disable server telemetry",id:"disable-server-telemetry",level:3},{value:"Disable CLI telemetry",id:"disable-cli-telemetry",level:3},{value:"Privacy Policy",id:"privacy-policy",level:2}],p={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"telemetry-guidefaq"},"Telemetry Guide/FAQ"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"The Hasura GraphQL engine collects anonymous telemetry data that helps\nthe Hasura team in understanding how the product is being used and in\ndeciding what to focus on next."),(0,o.kt)("p",null,"The data collected is minimal, statistical in nature and ",(0,o.kt)("strong",{parentName:"p"},"cannot be\nused to uniquely identify a user"),". Please see the next section to see\nwhat data is collected and sent. Access to collected data is strictly\nlimited to the Hasura team and not shared with 3rd parties."),(0,o.kt)("p",null,"As a growing community, we greatly appreciate the usage data users send\nto us, as it is very valuable in helping us make the Hasura GraphQL\nengine a better product for everyone! However, if you are concerned\nabout sending usage stats, you can choose to disable telemetry as\ndescribed ",(0,o.kt)("a",{parentName:"p",href:"#telemetry-optout"},"here"),"."),(0,o.kt)("h2",{id:"what-data-is-collected"},"What data is collected?"),(0,o.kt)("h3",{id:"server"},"Server"),(0,o.kt)("p",null,"The server periodically sends the number of tables, views,\nrelationships, permission rules, custom SQL functions, event triggers\nand remote schemas tracked by the GraphQL engine, along with randomly\ngenerated UUIDs per database and per instance. The name of the current\ncontinuous integration environment (if any) and the server version is\nalso sent."),(0,o.kt)("p",null,"Here is a sample row from the telemetry database:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "id": 12,\n   "timestamp": "2019-01-21T19:43:33.63838+00:00",\n   "db_uid": "dddff371-dab2-450f-9969-235bca66dab1",\n   "instance_uid": "6799360d-a431-40c5-9f68-24592a9f07df",\n   "version": "v1.0.0-alpha36",\n   "ci": "TRAVIS",\n   "metrics": {\n     "views": 1,\n     "tables": 2,\n     "functions": 1,\n     "permissions": {\n       "roles": 1,\n       "delete": 2,\n       "insert": 1,\n       "select": 2,\n       "update": 2\n     },\n     "relationships": {\n       "auto": 2,\n       "manual": 0\n     },\n     "event_triggers": 0,\n     "remote_schemas": 1\n   }\n }\n')),(0,o.kt)("h3",{id:"console"},"Console"),(0,o.kt)("p",null,"The Console collects runtime errors along with\nanonymized route names are sent without any identifiable information or\npayload. The console also records the UUID of the server/CLI that it is\nconnected to."),(0,o.kt)("p",null,"Sample data:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "server_version": "2.0.0",\n  "event_type": "Main/RUN_TIME_ERROR",\n  "url": "/data/schema/SCHEMA_NAME/tables/TABLE_NAME/modify",\n  "console_mode": "cli",\n  "cli_uuid": "0e4e2e9b-7fc9-44b8-9d5c-955673e20e0b",\n  "server_uuid": "015a8f49-2fbd-4c41-8066-23f48d9c620a",\n  "data": { message: "Uncaught TypeError: something is not a function", stack: [" at main.js:1:3"] },\n  }\n')),(0,o.kt)("p",null,"Please note that ",(0,o.kt)("inlineCode",{parentName:"p"},"TABLE_NAME")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"SCHEMA_NAME")," are not placeholders.\nThe actual names of the tables, schemas, remote-schemas and\nevent-triggers that are a part of the URL are not sent."),(0,o.kt)("h3",{id:"cli"},"CLI"),(0,o.kt)("p",null,"The CLI collects each execution event, along with a randomly generated\nUUID. The execution event contains the command name, timestamp and\nwhether the execution resulted in an error or not. ",(0,o.kt)("strong",{parentName:"p"},"Error messages,\narguments and flags are not recorded"),". The CLI also collects the server\nversion and UUID that it is talking to. The operating system platform\nand architecture is also noted along with the CLI version."),(0,o.kt)("p",null,"Sample data:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": 115,\n  "timestamp": "2019-01-21T11:36:07.86783+00:00",\n  "uuid": "e462ce20-42dd-40fd-9549-edfb92f80455",\n  "execution_id": "ddfa9c33-0693-457d-9026-c7f456c43322",\n  "version": "v0.4.27",\n  "command": "hasura version",\n  "is_error": false,\n  "os_platform": "linux",\n  "os_arch": "amd64",\n  "server_uuid": "a4d66fb2-f88d-457b-8db1-ea7a0b57921d",\n  "server_version": "v1.0.0-alpha36",\n  "payload": null\n}\n')),(0,o.kt)("h2",{id:"where-is-the-data-sent"},"Where is the data sent?"),(0,o.kt)("p",null,"The data is sent to Hasura's servers addressed by ",(0,o.kt)("inlineCode",{parentName:"p"},"telemetry.hasura.io"),"."),(0,o.kt)("h2",{id:"telemetry-optout"},"How do I turn off telemetry (opt-out)?"),(0,o.kt)("h3",{id:"disable-server-telemetry"},"Disable server telemetry"),(0,o.kt)("p",null,"You can turn off telemetry on ",(0,o.kt)("strong",{parentName:"p"},"the server and on the console hosted by\nthe server")," by setting the env variable\n",(0,o.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ENABLE_TELEMETRY=false")," or the flag\n",(0,o.kt)("inlineCode",{parentName:"p"},"--enable-telemetry=false")," on the server."),(0,o.kt)("h3",{id:"disable-cli-telemetry"},"Disable CLI telemetry"),(0,o.kt)("p",null,"You can turn off telemetry on ",(0,o.kt)("strong",{parentName:"p"},"the CLI and on the console served by the\nCLI")," by setting the env variable\n",(0,o.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ENABLE_TELEMETRY=false")," on the machine running the CLI.\nYou can also set ",(0,o.kt)("inlineCode",{parentName:"p"},'"enable_telemetry": false')," in the JSON config file\ncreated by the CLI at ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.hasura/config.json")," to persist the setting."),(0,o.kt)("h2",{id:"privacy-policy"},"Privacy Policy"),(0,o.kt)("p",null,"You can check out our privacy policy ",(0,o.kt)("a",{parentName:"p",href:"https://hasura.io/legal/hasura-privacy-policy"},"here"),"."))}m.isMDXComponent=!0}}]);