"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4318],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return u}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},m=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=c(a),u=n,d=p["".concat(l,".").concat(u)]||p[u]||h[u]||o;return a?r.createElement(d,s(s({ref:t},m),{},{components:a})):r.createElement(d,s({ref:t},m))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},26200:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return h}});var r=a(83117),n=a(80102),o=(a(67294),a(3905)),s=["components"],i={slug:"index",description:"Manage remote relationships in Hasura",keywords:["hasura","docs","schema","relationship","remote relationship"]},l="Remote relationships",c={unversionedId:"graphql/core/remote-schemas/remote-relationships/index",id:"graphql/core/remote-schemas/remote-relationships/index",title:"Remote relationships",description:"Manage remote relationships in Hasura",source:"@site/docs/graphql/core/remote-schemas/remote-relationships/index.mdx",sourceDirName:"graphql/core/remote-schemas/remote-relationships",slug:"/graphql/core/remote-schemas/remote-relationships/index",permalink:"/graphql-engine/latest/graphql/core/remote-schemas/remote-relationships/index",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/remote-schemas/remote-relationships/index.mdx",tags:[],version:"current",frontMatter:{slug:"index",description:"Manage remote relationships in Hasura",keywords:["hasura","docs","schema","relationship","remote relationship"]},sidebar:"docsSidebar",previous:{title:"Adding a Remote Schema",permalink:"/graphql-engine/latest/graphql/core/remote-schemas/adding-schema"},next:{title:"To remote database",permalink:"/graphql-engine/latest/graphql/core/remote-schemas/remote-relationships/remote-schema-db-relationships"}},m={},h=[{value:"Introduction",id:"introduction",level:2},{value:"Benefits",id:"benefits",level:2}],p={toc:h};function u(e){var t=e.components,a=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"remote-relationships"},"Remote relationships"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,'Remote relationships (aka "remote joins") allow you to join data across\nremote schemas and other remote data sources. The remote data source can either be another\n',(0,o.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/remote-schemas/index"},"remote schema"),' or a table from a database source.\nOnce you create relationships between types from your remote schema and types created\nfrom databases or other remote schemas, you can then "join" them by running GraphQL\nqueries.'),(0,o.kt)("p",null,"See the following guides on how to create different types of remote\nrelationships related to remote schemas:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/remote-schemas/remote-relationships/remote-schema-db-relationships"},"Remote Schema to database relationships"),": To join\ndata from your remote schemas (such as Stripe, Spotify or Auth0) to customer data from your tables."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/remote-schemas/remote-relationships/remote-schema-relationships"},"Remote Schema to Remote Schema relationships"),": To\njoin data between two remote schemas such as Stripe, Spotify or Auth0 to customer data from your custom GraphQL API."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/databases/postgres/schema/remote-relationships/remote-schema-relationships"},"Database to Remote Schema relationships"),": To\njoin data across tables and remote GraphQL APIs. For example, you can join customer data from your tables with account data from Stripe, Spotify, or Auth0.")),(0,o.kt)("h2",{id:"benefits"},"Benefits"),(0,o.kt)("p",null,"Hasura's remote joins architecture provides the following benefits."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Security"),": Hasura's ",(0,o.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/auth/authorization/index"},"authorization model")," gives\nyou role-based access control. This extends to actions and remote\nschemas as well. In actions, you can go to the ",(0,o.kt)("inlineCode",{parentName:"li"},"Permissions")," tab and\nchoose which fields to expose for which roles. For remote schemas,\nHasura will ",(0,o.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/remote-schemas/auth/index"},"forward your session variables"),"\nwhich can be used to implement custom authorization in your remote\nschemas. Native role-based permissions on remote schemas is in the\nworks."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Performance"),": Hasura strives for optimal performance. It creates\nan efficient execution plan which pushes down most of the\nheavy-lifting involved to underlying sources. For example, Hasura\ncreates a single efficient query to your database and batches calls\nto remote schemas to avoid the ",(0,o.kt)("a",{parentName:"li",href:"https://hasura.io/learn/graphql/intro-graphql/graphql-server/"},"n+1\nproblem"),"\n. More improvements to performance are upcoming."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Schema integrity & consistency"),": Hasura has metadata consistency\nchecks at every level. Whenever you add a table, remote schema, or\naction, Hasura makes sure that the graph that is exposed is\nconsistent, and that all the relationships make sense at a type\nlevel. This helps you in creating robust workflows to test changes\nin your CI and making safe deployments of your unified graph."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Data federation"),": With remote joins, the join, authorization, and\nconsistency checks of added sources all happen at the Hasura layer\nvia metadata. This allows underlying data sources and APIs to evolve\nindependently. Your applications have a unified API to query the\nfull data landscape in your org.")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Additional Resources")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Data Federation with Hasura - ",(0,o.kt)("a",{parentName:"p",href:"https://hasura.io/events/webinar/data-federation-hasura-graphql/?pg=docs&plcmt=body&cta=watch-webinar&tech="},"Watch Webinar"),"."))))}u.isMDXComponent=!0}}]);