"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9305],{3905:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return m}});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=a.createContext({}),c=function(e){var r=a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=c(e.components);return a.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=n,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||i;return t?a.createElement(h,o(o({ref:r},u),{},{components:t})):a.createElement(h,o({ref:r},u))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,o=new Array(i);o[0]=d;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},93086:function(e,r,t){t.r(r),t.d(r,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var a=t(83117),n=t(80102),i=(t(67294),t(3905)),o=["components"],s={sidebar_label:"hasura migrate delete",sidebar_position:25,description:"(PREVIEW) clear migrations from local project and server using the Hasura CLI",keywords:["hasura","docs","CLI","hasura migrate delete"]},l="Hasura CLI: hasura migrate delete",c={unversionedId:"graphql/core/hasura-cli/hasura_migrate_delete",id:"graphql/core/hasura-cli/hasura_migrate_delete",title:"Hasura CLI: hasura migrate delete",description:"(PREVIEW) clear migrations from local project and server using the Hasura CLI",source:"@site/docs/graphql/core/hasura-cli/hasura_migrate_delete.mdx",sourceDirName:"graphql/core/hasura-cli",slug:"/graphql/core/hasura-cli/hasura_migrate_delete",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_migrate_delete",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/hasura-cli/hasura_migrate_delete.mdx",tags:[],version:"current",sidebarPosition:25,frontMatter:{sidebar_label:"hasura migrate delete",sidebar_position:25,description:"(PREVIEW) clear migrations from local project and server using the Hasura CLI",keywords:["hasura","docs","CLI","hasura migrate delete"]},sidebar:"docsSidebar",previous:{title:"hasura migrate create",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_migrate_create"},next:{title:"hasura migrate squash",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_migrate_squash"}},u={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Examples",id:"examples",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],d={toc:p};function m(e){var r=e.components,t=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hasura-cli-hasura-migrate-delete"},"Hasura CLI: hasura migrate delete"),(0,i.kt)("p",null,"(PREVIEW) clear migrations from local project and server."),(0,i.kt)("h2",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"(PREVIEW) clear migrations from local project and server."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"hasura migrate delete [flags]\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"# Usage to delete a version:\nhasura migrate delete --version <version_delete> --database-name <database-name>\n\n# Usage to delete all versions\n    hasura migrate delete --all --database-name <database-name>\n")),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    --all            clears all migrations for selected database\n    --force          when set executes operation without any confirmation\n-h, --help           help for delete\n    --server         to reset migrations only on server\n    --version uint   deletes the specified version in migrations\n")),(0,i.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'--admin-secret string            admin secret for Hasura GraphQL engine (env "HASURA_GRAPHQL_ADMIN_SECRET")\n--certificate-authority string   path to a cert file for the certificate authority (env "HASURA_GRAPHQL_CERTIFICATE_AUTHORITY")\n--database-name string           database on which operation should be applied\n--disable-interactive            disables interactive prompts (default: false) (env "HASURA_GRAPHQL_DISABLE_INTERACTIVE")\n--endpoint string                http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")\n--envfile string                 .env filename to load ENV vars from (default ".env")\n--insecure-skip-tls-verify       skip TLS verification and disable cert checking (default: false) (env "HASURA_GRAPHQL_INSECURE_SKIP_TLS_VERIFY")\n--log-level string               log level (DEBUG, INFO, WARN, ERROR, FATAL) (default "INFO")\n--no-color                       do not colorize output (default: false)\n--project string                 directory where commands are executed (default: current dir)\n--skip-update-check              skip automatic update check on command execution\n')),(0,i.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_migrate"},"hasura migrate"),"- Manage migrations on the database")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Auto generated by spf13/cobra")))}m.isMDXComponent=!0}}]);