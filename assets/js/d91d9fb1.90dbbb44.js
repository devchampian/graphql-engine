"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1048],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),h=a,m=d["".concat(l,".").concat(h)]||d[h]||u[h]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},80715:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var r=n(83117),a=n(80102),o=(n(67294),n(3905)),i=["components"],s={description:"Secure the Hasura GraphQL endpoint",keywords:["hasura","docs","deployment","https"],sidebar_position:7},l="Enable HTTPS",p={unversionedId:"graphql/core/deployment/enable-https",id:"graphql/core/deployment/enable-https",title:"Enable HTTPS",description:"Secure the Hasura GraphQL endpoint",source:"@site/docs/graphql/core/deployment/enable-https.mdx",sourceDirName:"graphql/core/deployment",slug:"/graphql/core/deployment/enable-https",permalink:"/docs/latest/graphql/core/deployment/enable-https",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/deployment/enable-https.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{description:"Secure the Hasura GraphQL endpoint",keywords:["hasura","docs","deployment","https"],sidebar_position:7},sidebar:"docsSidebar",previous:{title:"Server logs",permalink:"/docs/latest/graphql/core/deployment/logging"},next:{title:"Allow-list of operations",permalink:"/docs/latest/graphql/core/deployment/allow-list"}},c={},u=[{value:"Setting up HTTPS",id:"setting-up-https",level:2},{value:"Sample configurations",id:"sample-configurations",level:2},{value:"Nginx",id:"nginx",level:3},{value:"Caddy",id:"caddy",level:3}],d={toc:u};function h(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"enable-https"},"Enable HTTPS"),(0,o.kt)("h2",{id:"setting-up-https"},"Setting up HTTPS"),(0,o.kt)("p",null,"Hasura GraphQL engine does not handle SSL/TLS for your API. That means,\nHasura GraphQL engine cannot serve your API on an HTTPS URL."),(0,o.kt)("p",null,"You should use a reverse proxy (like Nginx, Caddy, Kong, Traefik etc.)\nor the cloud provider's native load balancer SSL termination features to\nsecure your API."),(0,o.kt)("h2",{id:"sample-configurations"},"Sample configurations"),(0,o.kt)("p",null,"Here are a few sample configurations for some popular proxies:"),(0,o.kt)("h3",{id:"nginx"},(0,o.kt)("a",{parentName:"h3",href:"https://nginx.org/en/docs/"},"Nginx")),(0,o.kt)("p",null,"Here is a sample ",(0,o.kt)("inlineCode",{parentName:"p"},"nginx.conf")," to proxy requests to Hasura:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-nginx"},'server {\n  listen 80;\n  listen 443 ssl;\n  server_name hasura.<my-domain.com>;\n\n  location / {\n    proxy_pass http://localhost:8080/;\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection "upgrade";\n  }\n}\n')),(0,o.kt)("p",null,"Please note that setting up SSL is not covered in this guide. You can\nfind more information at ",(0,o.kt)("a",{parentName:"p",href:"https://nginx.org/en/docs/http/configuring_https_servers.html"},"Nginx docs"),"."),(0,o.kt)("p",null,"To serve Hasura with a URL prefix instead of a separate subdomain, use ",(0,o.kt)("inlineCode",{parentName:"p"},"location /hasura/")," or similar."),(0,o.kt)("h3",{id:"caddy"},(0,o.kt)("a",{parentName:"h3",href:"https://caddyserver.com/"},"Caddy")),(0,o.kt)("p",null,"Here is a sample ",(0,o.kt)("inlineCode",{parentName:"p"},"Caddyfile")," to proxy requests to Hasura:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"hasura.<my-domain.com> {\n  reverse_proxy localhost:8080\n}\n")),(0,o.kt)("p",null,"Caddy has TLS provisioning built-in with Let's Encrypt or ZeroSSL. You can find the docs at ",(0,o.kt)("a",{parentName:"p",href:"https://caddyserver.com/docs/automatic-https"},"Caddy website"),"."),(0,o.kt)("p",null,"In order to serve at a URL prefix, use the following configuration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"<my-domain.com> {\n  handle_path /hasura* {\n    reverse_proxy localhost:8080\n  }\n\n  handle {\n    # Fallback for otherwise unhandled requests\n  }\n}\n")))}h.isMDXComponent=!0}}]);