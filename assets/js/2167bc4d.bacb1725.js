"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5339],{3905:function(e,a,r){r.d(a,{Zo:function(){return u},kt:function(){return d}});var t=r(67294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function i(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?i(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function s(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=t.createContext({}),l=function(e){var a=t.useContext(p),r=a;return e&&(r="function"==typeof e?e(a):o(o({},a),e)),r},u=function(e){var a=l(e.components);return t.createElement(p.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(r),d=n,h=m["".concat(p,".").concat(d)]||m[d]||c[d]||i;return r?t.createElement(h,o(o({ref:a},u),{},{components:r})):t.createElement(h,o({ref:a},u))}));function d(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var p in a)hasOwnProperty.call(a,p)&&(s[p]=a[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},55413:function(e,a,r){r.r(a),r.d(a,{assets:function(){return u},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c}});var t=r(83117),n=r(80102),i=(r(67294),r(3905)),o=["components"],s={sidebar_label:"hasura migrate apply",sidebar_position:23,description:"Apply migrations on the database using the Hasura CLI",keywords:["hasura","docs","CLI","hasura migrate apply"]},p="Hasura CLI: hasura migrate apply",l={unversionedId:"graphql/core/hasura-cli/hasura_migrate_apply",id:"graphql/core/hasura-cli/hasura_migrate_apply",title:"Hasura CLI: hasura migrate apply",description:"Apply migrations on the database using the Hasura CLI",source:"@site/docs/graphql/core/hasura-cli/hasura_migrate_apply.mdx",sourceDirName:"graphql/core/hasura-cli",slug:"/graphql/core/hasura-cli/hasura_migrate_apply",permalink:"/docs/latest/graphql/core/hasura-cli/hasura_migrate_apply",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/hasura-cli/hasura_migrate_apply.mdx",tags:[],version:"current",sidebarPosition:23,frontMatter:{sidebar_label:"hasura migrate apply",sidebar_position:23,description:"Apply migrations on the database using the Hasura CLI",keywords:["hasura","docs","CLI","hasura migrate apply"]},sidebar:"docsSidebar",previous:{title:"hasura migrate",permalink:"/docs/latest/graphql/core/hasura-cli/hasura_migrate"},next:{title:"hasura migrate create",permalink:"/docs/latest/graphql/core/hasura-cli/hasura_migrate_create"}},u={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Examples",id:"examples",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],m={toc:c};function d(e){var a=e.components,r=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,t.Z)({},m,r,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hasura-cli-hasura-migrate-apply"},"Hasura CLI: hasura migrate apply"),(0,i.kt)("p",null,"Apply migrations on the database."),(0,i.kt)("h2",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"Apply migrations on the database."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"hasura migrate apply [flags]\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'# Apply all migrations\nhasura migrate apply\n\n# Use with admin secret:\nhasura migrate apply --admin-secret "<admin-secret>"\n\n# Apply migrations on another Hasura instance:\nhasura migrate apply --endpoint "<endpoint>"\n\n# Mark migration as applied on the server and skip execution:\nhasura migrate apply --skip-execution --version "<version>"\n\n# Mark migrations as applied on the server and skip execution:\nhasura migrate apply --skip-execution --up all\n\n# Mark migrations as rollbacked on the server and skip execution:\nhasura migrate apply --skip-execution --down all\n\n# Apply a particular migration version only:\nhasura migrate apply --version "<version>"\n\n# Apply last 2 down migrations:\nhasura migrate apply --down 2\n\n# Apply only 2 up migrations:\nhasura migrate apply --up 2\n\n# Apply only a particular version\nhasura migrate apply --type up --version "<version>"\n\n# Apply all up migrations upto version 125, last applied is 100\nhasura migrate apply --goto 125\n\n# Apply all down migrations upto version 125, last applied is 150\nhasura migrate apply --goto 125\n\n# Rollback a particular version:\nhasura migrate apply --type down --version "<version>"\n\n# Rollback all migrations:\nhasura migrate apply --down all\n')),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    --up string        apply all or N up migration steps\n    --down string      apply all or N down migration steps\n    --goto string      apply migration chain up to to the version specified\n    --version string   only apply this particular migration\n    --skip-execution   skip executing the migration action, but mark them as applied\n    --type string      type of migration (up, down) to be used with version flag (default "up")\n    --dry-run          print the names of migrations which are going to be applied\n    --all-databases    set this flag to attempt to apply migrations on all databases present on server\n-h, --help             help for apply\n')),(0,i.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'--admin-secret string            admin secret for Hasura GraphQL engine (env "HASURA_GRAPHQL_ADMIN_SECRET")\n--certificate-authority string   path to a cert file for the certificate authority (env "HASURA_GRAPHQL_CERTIFICATE_AUTHORITY")\n--database-name string           database on which operation should be applied\n--disable-interactive            disables interactive prompts (default: false) (env "HASURA_GRAPHQL_DISABLE_INTERACTIVE")\n--endpoint string                http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")\n--envfile string                 .env filename to load ENV vars from (default ".env")\n--insecure-skip-tls-verify       skip TLS verification and disable cert checking (default: false) (env "HASURA_GRAPHQL_INSECURE_SKIP_TLS_VERIFY")\n--log-level string               log level (DEBUG, INFO, WARN, ERROR, FATAL) (default "INFO")\n--no-color                       do not colorize output (default: false)\n--project string                 directory where commands are executed (default: current dir)\n--skip-update-check              skip automatic update check on command execution\n')),(0,i.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/latest/graphql/core/hasura-cli/hasura_migrate"},"hasura migrate"),"- Manage migrations on the database")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Auto generated by spf13/cobra")))}d.isMDXComponent=!0}}]);