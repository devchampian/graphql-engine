"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3478],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(n),g=a,h=d["".concat(l,".").concat(g)]||d[g]||u[g]||s;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},22138:function(e,t,n){var r=n(67294),a=n(57932),s=n(72389),i=n(86010),o=n(71077);t.Z=function(e){var t=e.query,n=e.variables,l=e.response,c=e.viewOnly,p=void 0===c||c,u=(0,s.Z)();return r.createElement("div",{className:"graphiql "+(0,i.Z)({"with-vars":!!n,"view-only":p})},r.createElement(a.ZP,{readOnly:p,editorTheme:"dracula",schema:null,fetcher:u?(0,o.n)({url:"https://hasura.io/graphql"}):function(){return null},query:t,variables:n,response:l}))}},21627:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var r=n(83117),a=n(80102),s=(n(67294),n(3905)),i=n(22138),o=["components"],l={sidebar_label:"Nested object queries",sidebar_position:2,description:"Make nested object queries on Postgres in Hasura",keywords:["hasura","docs","postgres","query","nested object query"]},c="Postgres: Nested object queries",p={unversionedId:"graphql/core/databases/postgres/queries/nested-object-queries",id:"graphql/core/databases/postgres/queries/nested-object-queries",title:"Postgres: Nested object queries",description:"Make nested object queries on Postgres in Hasura",source:"@site/docs/graphql/core/databases/postgres/queries/nested-object-queries.mdx",sourceDirName:"graphql/core/databases/postgres/queries",slug:"/graphql/core/databases/postgres/queries/nested-object-queries",permalink:"/graphql-engine/latest/graphql/core/databases/postgres/queries/nested-object-queries",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/databases/postgres/queries/nested-object-queries.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Nested object queries",sidebar_position:2,description:"Make nested object queries on Postgres in Hasura",keywords:["hasura","docs","postgres","query","nested object query"]},sidebar:"docsSidebar",previous:{title:"Simple object queries",permalink:"/graphql-engine/latest/graphql/core/databases/postgres/queries/simple-object-queries"},next:{title:"Aggregation queries",permalink:"/graphql-engine/latest/graphql/core/databases/postgres/queries/aggregation-queries"}},u={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Fetch nested object using an object relationship",id:"fetch-nested-object-using-an-object-relationship",level:2},{value:"Fetch nested objects using an array relationship",id:"fetch-nested-objects-using-an-array-relationship",level:2}],g={toc:d};function h(e){var t=e.components,n=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"postgres-nested-object-queries"},"Postgres: Nested object queries"),(0,s.kt)("h2",{id:"introduction"},"Introduction"),(0,s.kt)("p",null,"You can use the object (one-to-one) or array (one-to-many)\n",(0,s.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/databases/postgres/schema/table-relationships/index"},"relationships")," defined in your schema to make\na nested query i.e. fetch data for a type along with data from a nested\nor related type."),(0,s.kt)("p",null,"The ",(0,s.kt)("strong",{parentName:"p"},"name of the nested object")," is the same as the name of the\nobject/array relationship configured in the console."),(0,s.kt)("p",null,"You can also filter, sort, aggregate and paginate nested objects in case\nof array relationships. These are not exposed for object relationships\nas they have only one nested object."),(0,s.kt)("h2",{id:"fetch-nested-object-using-an-object-relationship"},"Fetch nested object using an object relationship"),(0,s.kt)("p",null,"The following is an example of a nested object query using the ",(0,s.kt)("strong",{parentName:"p"},"object\nrelationship")," between an article and an author."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example:")," Fetch a list of articles and the name of each article\u2019s\nauthor:"),(0,s.kt)(i.Z,{query:"query {\n  articles {\n    id\n    title\n    author {\n      name\n    }\n  }\n}",response:'{\n  "data": {\n    "articles": [\n      {\n        "id": 1,\n        "title": "sit amet",\n        "author": {\n          "name": "Anjela"\n        }\n      },\n      {\n        "id": 2,\n        "title": "a nibh",\n        "author": {\n          "name": "Beltran"\n        }\n      },\n      {\n        "id": 3,\n        "title": "amet justo morbi",\n        "author": {\n          "name": "Anjela"\n        }\n      }\n    ]\n  }\n}',mdxType:"GraphiQLIDE"}),(0,s.kt)("h2",{id:"fetch-nested-objects-using-an-array-relationship"},"Fetch nested objects using an array relationship"),(0,s.kt)("p",null,"The following is an example of a nested object query using the ",(0,s.kt)("strong",{parentName:"p"},"array\nrelationship")," between an author and articles."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Example:")," Fetch a list of authors and a nested list of each author\u2019s\narticles:"),(0,s.kt)(i.Z,{query:"query {\n  authors {\n    id\n    name\n    articles {\n      id\n      title\n    }\n  }\n}",response:'{\n  "data": {\n    "authors": [\n      {\n        "id": 1,\n        "name": "Justin",\n        "articles": [\n          {\n            "id": 15,\n            "title": "vel dapibus at"\n          },\n          {\n            "id": 16,\n            "title": "sem duis aliquam"\n          }\n        ]\n      },\n      {\n        "id": 2,\n        "name": "Beltran",\n        "articles": [\n          {\n            "id": 2,\n            "title": "a nibh"\n          },\n          {\n            "id": 9,\n            "title": "sit amet"\n          }\n        ]\n      },\n      {\n        "id": 3,\n        "name": "Sidney",\n        "articles": [\n          {\n            "id": 6,\n            "title": "sapien ut"\n          },\n          {\n            "id": 11,\n            "title": "turpis eget"\n          },\n          {\n            "id": 14,\n            "title": "congue etiam justo"\n          }\n        ]\n      }\n    ]\n  }\n}',mdxType:"GraphiQLIDE"}),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"You can also ",(0,s.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/databases/postgres/queries/query-filters#pg-nested-filter"},"filter"),", ",(0,s.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/databases/postgres/queries/sorting#pg-nested-sort"},"sort"),",\n",(0,s.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/databases/postgres/queries/aggregation-queries#pg-nested-aggregate"},"aggregate")," and ",(0,s.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/databases/postgres/queries/pagination#pg-nested-paginate"},"paginate"),"\nnested objects in case of array relationships."))))}h.isMDXComponent=!0}}]);