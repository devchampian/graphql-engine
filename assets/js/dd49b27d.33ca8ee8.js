"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[880],{3905:function(e,a,t){t.d(a,{Zo:function(){return c},kt:function(){return m}});var r=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var u=r.createContext({}),l=function(e){var a=r.useContext(u),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},c=function(e){var a=l(e.components);return r.createElement(u.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},h=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),h=l(t),m=n,d=h["".concat(u,".").concat(m)]||h[m]||p[m]||i;return t?r.createElement(d,s(s({ref:a},c),{},{components:t})):r.createElement(d,s({ref:a},c))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=t.length,s=new Array(i);s[0]=h;var o={};for(var u in a)hasOwnProperty.call(a,u)&&(o[u]=a[u]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var l=2;l<i;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},30566:function(e,a,t){t.r(a),t.d(a,{assets:function(){return c},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p}});var r=t(83117),n=t(80102),i=(t(67294),t(3905)),s=["components"],o={sidebar_label:"hasura migrate squash",sidebar_position:26,description:"PREVIEW) Squash multiple migrations into a single one using the Hasura CLI",keywords:["hasura","docs","CLI","hasura migrate squash"]},u="Hasura CLI: hasura migrate squash",l={unversionedId:"graphql/core/hasura-cli/hasura_migrate_squash",id:"graphql/core/hasura-cli/hasura_migrate_squash",title:"Hasura CLI: hasura migrate squash",description:"PREVIEW) Squash multiple migrations into a single one using the Hasura CLI",source:"@site/docs/graphql/core/hasura-cli/hasura_migrate_squash.mdx",sourceDirName:"graphql/core/hasura-cli",slug:"/graphql/core/hasura-cli/hasura_migrate_squash",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_migrate_squash",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/hasura-cli/hasura_migrate_squash.mdx",tags:[],version:"current",sidebarPosition:26,frontMatter:{sidebar_label:"hasura migrate squash",sidebar_position:26,description:"PREVIEW) Squash multiple migrations into a single one using the Hasura CLI",keywords:["hasura","docs","CLI","hasura migrate squash"]},sidebar:"docsSidebar",previous:{title:"hasura migrate delete",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_migrate_delete"},next:{title:"hasura migrate status",permalink:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_migrate_status"}},c={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Examples",id:"examples",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],h={toc:p};function m(e){var a=e.components,t=(0,n.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},h,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hasura-cli-hasura-migrate-squash"},"Hasura CLI: hasura migrate squash"),(0,i.kt)("p",null,"(PREVIEW) Squash multiple migrations into a single one."),(0,i.kt)("h2",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"(PREVIEW) Squash multiple migrations leading up to the latest one into a\nsingle migration file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"hasura migrate squash [flags]\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'# NOTE: This command is in PREVIEW. Correctness is not guaranteed and the usage may change.\n\n# squash all migrations from version 123 to the latest one:\nhasura migrate squash --from 123\n\n# Add a name for the new squashed migration\nhasura migrate squash --name "<name>" --from 123\n')),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    --delete-source   delete the source files after squashing without any confirmation\n    --from uint       start squashing from this version\n-h, --help            help for squash\n    --name string     name for the new squashed migration (default "squashed")\n    --to int          squash up to this version (default -1)\n')),(0,i.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'--admin-secret string            admin secret for Hasura GraphQL engine (env "HASURA_GRAPHQL_ADMIN_SECRET")\n--certificate-authority string   path to a cert file for the certificate authority (env "HASURA_GRAPHQL_CERTIFICATE_AUTHORITY")\n--database-name string           database on which operation should be applied\n--disable-interactive            disables interactive prompts (default: false) (env "HASURA_GRAPHQL_DISABLE_INTERACTIVE")\n--endpoint string                http(s) endpoint for Hasura GraphQL engine (env "HASURA_GRAPHQL_ENDPOINT")\n--envfile string                 .env filename to load ENV vars from (default ".env")\n--insecure-skip-tls-verify       skip TLS verification and disable cert checking (default: false) (env "HASURA_GRAPHQL_INSECURE_SKIP_TLS_VERIFY")\n--log-level string               log level (DEBUG, INFO, WARN, ERROR, FATAL) (default "INFO")\n--no-color                       do not colorize output (default: false)\n--project string                 directory where commands are executed (default: current dir)\n--skip-update-check              skip automatic update check on command execution\n')),(0,i.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/graphql-engine/latest/graphql/core/hasura-cli/hasura_migrate"},"hasura migrate"),"- Manage migrations on the database")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Auto generated by spf13/cobra")))}m.isMDXComponent=!0}}]);