"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7100],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return g}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(t),g=a,m=u["".concat(p,".").concat(g)]||u[g]||h[g]||o;return t?r.createElement(m,l(l({ref:n},c),{},{components:t})):r.createElement(m,l({ref:n},c))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=u;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},47782:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return p},default:function(){return g},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return h}});var r=t(83117),a=t(80102),o=(t(67294),t(3905)),l=["components"],i={description:"Export the GraphQL schema in Hasura",keywords:["hasura","docs","schema","graphql schema","export"],sidebar_position:8},p="Exporting the Hasura GraphQL schema",s={unversionedId:"graphql/core/guides/export-graphql-schema",id:"graphql/core/guides/export-graphql-schema",title:"Exporting the Hasura GraphQL schema",description:"Export the GraphQL schema in Hasura",source:"@site/docs/graphql/core/guides/export-graphql-schema.mdx",sourceDirName:"graphql/core/guides",slug:"/graphql/core/guides/export-graphql-schema",permalink:"/graphql-engine/latest/graphql/core/guides/export-graphql-schema",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/guides/export-graphql-schema.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{description:"Export the GraphQL schema in Hasura",keywords:["hasura","docs","schema","graphql schema","export"],sidebar_position:8},sidebar:"docsSidebar",previous:{title:"Integrating with monitoring frameworks",permalink:"/graphql-engine/latest/graphql/core/guides/monitoring/index"},next:{title:"Auditing tables",permalink:"/graphql-engine/latest/graphql/core/guides/auditing-tables"}},c={},h=[{value:"Introduction",id:"introduction",level:2},{value:"Using <strong>graphqurl</strong>",id:"using-graphqurl",level:2},{value:"Using <strong>Apollo CLI</strong>",id:"using-apollo-cli",level:2}],u={toc:h};function g(e){var n=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"exporting-the-hasura-graphql-schema"},"Exporting the Hasura GraphQL schema"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"If you need to share, introspect or export the GraphQL schema, you can\nuse community tooling such as\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/hasura/graphqurl"},"graphqurl"),", ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apollographql/apollo-tooling"},"Apollo\nCLI"),",\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/prismagraphql/get-graphql-schema"},"get-graphql-schema"),",\netc."),(0,o.kt)("h2",{id:"using-graphqurl"},"Using ",(0,o.kt)("strong",{parentName:"h2"},"graphqurl")),(0,o.kt)("p",null,"For example, using ",(0,o.kt)("inlineCode",{parentName:"p"},"graphqurl"),", you can get the schema as follows:"),(0,o.kt)("p",null,"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"npm install -g graphqurl")," to install ",(0,o.kt)("inlineCode",{parentName:"p"},"graphqurl"),". Then you can run\nthe following commands to download the GraphQL schema:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# If the GraphQL engine is running at https://my-graphql-engine.com/v1/graphql,\n# without an admin secret\ngq https://my-graphql-engine.com/v1/graphql --introspect > schema.graphql\n\n# If Hasura GraphQL engine is running with an admin secret\ngq https://my-graphql-engine.com/v1/graphql -H "X-Hasura-Admin-Secret: adminsecretkey" --introspect > schema.graphql\n')),(0,o.kt)("p",null,"By default, it downloads the schema in ",(0,o.kt)("inlineCode",{parentName:"p"},".graphql")," format. If you want it\nin JSON format, you can use an additional flag ",(0,o.kt)("inlineCode",{parentName:"p"},"--format json"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Getting the schema in .json format\ngq https://my-graphql-engine.com/v1/graphql --introspect --format json > schema.json\n")),(0,o.kt)("h2",{id:"using-apollo-cli"},"Using ",(0,o.kt)("strong",{parentName:"h2"},"Apollo CLI")),(0,o.kt)("p",null,"Using Apollo CLI, you can get the schema as follows:"),(0,o.kt)("p",null,"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"npm install -g apollo")," to install the Apollo CLI. You can then run\nthe following command to download the GraphQL schema:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# If the GraphQL engine is running at https://my-graphql-engine.com/v1/graphql,\n# without an admin secret\napollo schema:download --endpoint https://my-graphql-engine.com/v1/graphql\n\n# If Hasura GraphQL engine is running with an admin secret\napollo schema:download --endpoint https://my-graphql-engine.com/v1/graphql --header "X-Hasura-Admin-Secret: adminsecretkey"\n')),(0,o.kt)("p",null,"Note that ",(0,o.kt)("inlineCode",{parentName:"p"},"apollo schema:download")," is an alias of the command ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apollographql/apollo-tooling#apollo-servicedownload-output"},"apollo service:download"),"."),(0,o.kt)("p",null,"By default, this downloads the schema to a file called ",(0,o.kt)("inlineCode",{parentName:"p"},"schema.json"),".\nThis command has no other output types."))}g.isMDXComponent=!0}}]);