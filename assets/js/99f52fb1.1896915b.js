"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2476],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,h=m["".concat(u,".").concat(d)]||m[d]||p[d]||i;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},22138:function(e,t,n){var r=n(67294),a=n(57932),i=n(72389),o=n(86010),s=n(71077);t.Z=function(e){var t=e.query,n=e.variables,u=e.response,l=e.viewOnly,c=void 0===l||l,p=(0,i.Z)();return r.createElement("div",{className:"graphiql "+(0,o.Z)({"with-vars":!!n,"view-only":c})},r.createElement(a.ZP,{readOnly:c,editorTheme:"dracula",schema:null,fetcher:p?(0,s.n)({url:"https://hasura.io/graphql"}):function(){return null},query:t,variables:n,response:u}))}},42941:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return m}});var r=n(83117),a=n(80102),i=(n(67294),n(3905)),o=n(22138),s=["components"],u={sidebar_label:"Multiple mutations in a request",sidebar_position:5,description:"Run multiple mutations in a request in Hasura",keywords:["hasura","docs","mutation","multiple mutations","request"]},l="Multiple mutations in a request",c={unversionedId:"graphql/core/databases/postgres/mutations/multiple-mutations",id:"graphql/core/databases/postgres/mutations/multiple-mutations",title:"Multiple mutations in a request",description:"Run multiple mutations in a request in Hasura",source:"@site/docs/graphql/core/databases/postgres/mutations/multiple-mutations.mdx",sourceDirName:"graphql/core/databases/postgres/mutations",slug:"/graphql/core/databases/postgres/mutations/multiple-mutations",permalink:"/docs/latest/graphql/core/databases/postgres/mutations/multiple-mutations",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/databases/postgres/mutations/multiple-mutations.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_label:"Multiple mutations in a request",sidebar_position:5,description:"Run multiple mutations in a request in Hasura",keywords:["hasura","docs","mutation","multiple mutations","request"]},sidebar:"docsSidebar",previous:{title:"Delete",permalink:"/docs/latest/graphql/core/databases/postgres/mutations/delete"},next:{title:"Postgres: Subscriptions",permalink:"/docs/latest/graphql/core/databases/postgres/subscriptions/index"}},p={},m=[{value:"Execution",id:"execution",level:2},{value:"Run multiple top level mutations in the same request",id:"run-multiple-top-level-mutations-in-the-same-request",level:2},{value:"Insert an object and a nested object in the same mutation",id:"insert-an-object-and-a-nested-object-in-the-same-mutation",level:2}],d={toc:m};function h(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"multiple-mutations-in-a-request"},"Multiple mutations in a request"),(0,i.kt)("h2",{id:"execution"},"Execution"),(0,i.kt)("p",null,"If multiple mutations are part of the same request, they are executed\n",(0,i.kt)("strong",{parentName:"p"},"sequentially")," in a single ",(0,i.kt)("strong",{parentName:"p"},"transaction"),". If any of the mutations\nfail, all the executed mutations will be rolled back."),(0,i.kt)("h2",{id:"run-multiple-top-level-mutations-in-the-same-request"},"Run multiple top level mutations in the same request"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")," Delete all ",(0,i.kt)("inlineCode",{parentName:"p"},"article")," objects written by an author and\nupdate the ",(0,i.kt)("inlineCode",{parentName:"p"},"author")," object:"),(0,i.kt)(o.Z,{query:'mutation reset_author {\n  delete_article (\n    where: {author_id: {_eq: 6}}\n  ) {\n    affected_rows\n  }\n  update_author (\n    where: {id: {_eq: 6}}\n    _set: {name: "Cory"}\n  ) {\n    returning {\n      id\n      name\n      articles {\n        id\n        title\n      }\n    }\n  }\n}',response:'{\n  "data": {\n    "delete_article": {\n      "affected_rows": 2\n    },\n    "update_author": {\n      "returning": [\n        {\n        "id": 6,\n        "name": "Cory",\n        "articles": []\n        }\n      ]\n    }\n  }\n}',mdxType:"GraphiQLIDE"}),(0,i.kt)("h2",{id:"insert-an-object-and-a-nested-object-in-the-same-mutation"},"Insert an object and a nested object in the same mutation"),(0,i.kt)("p",null,"If you are trying to insert multiple objects which have relationships\nbetween them, you can use nested inserts."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example:")," Insert a new ",(0,i.kt)("inlineCode",{parentName:"p"},"article")," object with its ",(0,i.kt)("inlineCode",{parentName:"p"},"author")," and return\nthe inserted article object with its author in the response:"),(0,i.kt)(o.Z,{query:'mutation insert_article {\n  insert_article(\n    objects: [\n      {\n        title: "Article 1",\n        content: "Sample article content",\n        author: {\n          data: {\n            name: "Cory"\n          }\n        }\n      }\n    ]\n  ) {\n    affected_rows\n    returning {\n      id\n      title\n      author {\n        id\n        name\n      }\n    }\n  }\n}',response:'{\n  "data": {\n    "insert_article": {\n      "affected_rows": 2,\n      "returning": [\n        {\n          "id": 21,\n          "title": "Article 1",\n          "author": {\n            "id": 11,\n            "name": "Cory"\n          }\n        }\n      ]\n    }\n  }\n}',mdxType:"GraphiQLIDE"}))}h.isMDXComponent=!0}}]);