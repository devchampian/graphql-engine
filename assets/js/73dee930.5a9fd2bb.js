"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7419],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return h}});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},l=Object.keys(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)r=l[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=t.createContext({}),u=function(e){var n=t.useContext(o),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=u(e.components);return t.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(r),h=a,f=d["".concat(o,".").concat(h)]||d[h]||c[h]||l;return r?t.createElement(f,i(i({ref:n},p),{},{components:r})):t.createElement(f,i({ref:n},p))}));function h(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=d;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<l;u++)i[u]=r[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},80159:function(e,n,r){r.r(n),r.d(n,{assets:function(){return p},contentTitle:function(){return o},default:function(){return h},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var t=r(83117),a=r(80102),l=(r(67294),r(3905)),i=["components"],s={sidebar_label:"hasura plugins install",sidebar_position:29,description:"Install a plugin from the index using the Hasura CLI",keywords:["hasura","docs","CLI","hasura plugins install"]},o="Hasura CLI: hasura plugins install",u={unversionedId:"graphql/core/hasura-cli/hasura_plugins_install",id:"graphql/core/hasura-cli/hasura_plugins_install",title:"Hasura CLI: hasura plugins install",description:"Install a plugin from the index using the Hasura CLI",source:"@site/docs/graphql/core/hasura-cli/hasura_plugins_install.mdx",sourceDirName:"graphql/core/hasura-cli",slug:"/graphql/core/hasura-cli/hasura_plugins_install",permalink:"/docs/latest/graphql/core/hasura-cli/hasura_plugins_install",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/hasura-cli/hasura_plugins_install.mdx",tags:[],version:"current",sidebarPosition:29,frontMatter:{sidebar_label:"hasura plugins install",sidebar_position:29,description:"Install a plugin from the index using the Hasura CLI",keywords:["hasura","docs","CLI","hasura plugins install"]},sidebar:"docsSidebar",previous:{title:"hasura plugins",permalink:"/docs/latest/graphql/core/hasura-cli/hasura_plugins"},next:{title:"hasura plugins list",permalink:"/docs/latest/graphql/core/hasura-cli/hasura_plugins_list"}},p={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Examples",id:"examples",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2},{value:"SEE ALSO",id:"see-also",level:2}],d={toc:c};function h(e){var n=e.components,r=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"hasura-cli-hasura-plugins-install"},"Hasura CLI: hasura plugins install"),(0,l.kt)("p",null,"Install a plugin from the index."),(0,l.kt)("h2",{id:"synopsis"},"Synopsis"),(0,l.kt)("p",null,"Install a plugin from the index."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"hasura plugins install [plugin-name] [flags]\n")),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"# Install a plugin:\nhasura plugins install [plugin-name]\n")),(0,l.kt)("h2",{id:"options"},"Options"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"-h, --help             help for install\n    --version string   version to be installed\n")),(0,l.kt)("h2",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'--envfile string      .env filename to load ENV vars from (default ".env")\n--log-level string    log level (DEBUG, INFO, WARN, ERROR, FATAL) (default "INFO")\n--no-color            do not colorize output (default: false)\n--project string      directory where commands are executed (default: current dir)\n--skip-update-check   skip automatic update check on command execution\n')),(0,l.kt)("h2",{id:"see-also"},"SEE ALSO"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/latest/graphql/core/hasura-cli/hasura_plugins"},"hasura plugins")," - Manage plugins for the CLI")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Auto generated by spf13/cobra")))}h.isMDXComponent=!0}}]);