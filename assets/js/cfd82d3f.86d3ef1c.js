"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3161],{3905:function(e,a,t){t.d(a,{Zo:function(){return d},kt:function(){return h}});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),p=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(l.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=p(t),h=r,u=c["".concat(l,".").concat(h)]||c[h]||m[h]||o;return t?n.createElement(u,s(s({ref:a},d),{},{components:t})):n.createElement(u,s({ref:a},d))}));function h(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=c;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},71172:function(e,a,t){t.r(a),t.d(a,{assets:function(){return d},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return m}});var n=t(83117),r=t(80102),o=(t(67294),t(3905)),s=["components"],i={description:"Examples of server configurations with Hasura GraphQL engine",keywords:["hasura","docs","deployment","flags","server","server configuration","example"],sidebar_position:3,sidebar_label:"Server config examples"},l="Server config examples",p={unversionedId:"graphql/core/deployment/graphql-engine-flags/config-examples",id:"graphql/core/deployment/graphql-engine-flags/config-examples",title:"Server config examples",description:"Examples of server configurations with Hasura GraphQL engine",source:"@site/docs/graphql/core/deployment/graphql-engine-flags/config-examples.mdx",sourceDirName:"graphql/core/deployment/graphql-engine-flags",slug:"/graphql/core/deployment/graphql-engine-flags/config-examples",permalink:"/graphql-engine/latest/graphql/core/deployment/graphql-engine-flags/config-examples",editUrl:"https://github.com/hasura/graphql-engine/edit/master/docs/docs/graphql/core/deployment/graphql-engine-flags/config-examples.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{description:"Examples of server configurations with Hasura GraphQL engine",keywords:["hasura","docs","deployment","flags","server","server configuration","example"],sidebar_position:3,sidebar_label:"Server config examples"},sidebar:"docsSidebar",previous:{title:"Server config reference",permalink:"/graphql-engine/latest/graphql/core/deployment/graphql-engine-flags/reference"},next:{title:"Postgres requirements",permalink:"/graphql-engine/latest/graphql/core/deployment/postgres-requirements"}},d={},m=[{value:"Introduction",id:"introduction",level:2},{value:"Add an admin secret",id:"add-admin-secret",level:2},{value:"Using CLI commands with admin secret",id:"cli-with-admin-secret",level:2},{value:"Configure CORS",id:"configure-cors",level:2},{value:"Run console offline <em>(i.e load console assets from server instead of CDN)</em>",id:"console-assets-on-server",level:2},{value:"Dev (debugging) mode",id:"dev-mode",level:2},{value:"Add a metadata database",id:"add-metadata-database",level:2},{value:"Possible configurations:",id:"possible-configurations",level:3}],c={toc:m};function h(e){var a=e.components,t=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"server-config-examples"},"Server config examples"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"The following are a few configuration use cases:"),(0,o.kt)("h2",{id:"add-admin-secret"},"Add an admin secret"),(0,o.kt)("p",null,"To add an admin secret to Hasura, pass the ",(0,o.kt)("inlineCode",{parentName:"p"},"--admin-secret")," flag with a\nsecret generated by you."),(0,o.kt)("p",null,"Run server in this mode using following docker command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -P -d hasura/graphql-engine:latest graphql-engine \\\n           --database-url postgres://username:password@host:5432/dbname \\\n             serve \\\n             --admin-secret XXXXXXXXXXXXXXXX\n")),(0,o.kt)("p",null,"Typically, you will also have a webhook for authentication:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -P -d hasura/graphql-engine:latest graphql-engine \\\n           --database-url postgres://username:password@host:5432/dbname \\\n             serve \\\n             --admin-secret XXXXXXXXXXXXXXXX\n             --auth-hook https://myauth.mywebsite.com/user/session-info\n")),(0,o.kt)("p",null,"In addition to flags, the GraphQL engine also accepts environment\nvariables."),(0,o.kt)("p",null,"In the above case, for adding an admin secret you will use the\n",(0,o.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_ADMIN_SECRET")," and for the webhook, you will use the\n",(0,o.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_AUTH_HOOK")," environment variables."),(0,o.kt)("h2",{id:"cli-with-admin-secret"},"Using CLI commands with admin secret"),(0,o.kt)("p",null,"When you start the GraphQL engine with an admin secret key, CLI commands\nwill also need this admin secret to contact APIs. It can be set in\n",(0,o.kt)("inlineCode",{parentName:"p"},"config.yaml")," or as an environment variable or as a flag to the command.\nFor example, let's look at the case of the ",(0,o.kt)("inlineCode",{parentName:"p"},"console")," command:"),(0,o.kt)("p",null,"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"my-project/config.yaml")," file, set a new key ",(0,o.kt)("inlineCode",{parentName:"p"},"admin_secret"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# config.yaml\nendpoint: https://my-graphql-endpoint.com\nadmin_secret: XXXXXXXXXXXXXXXX\n")),(0,o.kt)("p",null,"The console can now contact the GraphQL APIs with the specified admin\nsecret."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you're setting an ",(0,o.kt)("inlineCode",{parentName:"p"},"admin_secret")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"config.yaml")," please make sure\nyou do not check this file into a public repository."))),(0,o.kt)("p",null,"An alternate and safe way is to pass the admin secret value to the\ncommand as an environment variable:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export HASURA_GRAPHQL_ADMIN_SECRET=xxxxx\nhasura console\n\n# OR in a single line\nHASURA_GRAPHQL_ADMIN_SECRET=xxxxx hasura console\n")),(0,o.kt)("p",null,"You can also set the admin secret using a flag to the command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"hasura console --admin-secret=XXXXXXXXXXXX\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The order of precedence for admin secret and endpoint is as follows:"),(0,o.kt)("p",{parentName:"div"},"CLI flag > Environment variable > Config file"))),(0,o.kt)("h2",{id:"configure-cors"},"Configure CORS"),(0,o.kt)("p",null,"By default, all CORS requests to the Hasura GraphQL engine are allowed.\nTo run with more restrictive CORS settings, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"--cors-domain")," flag\nor the ",(0,o.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_CORS_DOMAIN")," ENV variable. The default value is\n",(0,o.kt)("inlineCode",{parentName:"p"},"*"),", which means CORS headers are sent for all domains."),(0,o.kt)("p",null,"The scheme + host with optional wildcard + optional port have to be\nmentioned."),(0,o.kt)("p",null,"Examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# Accepts from https://app.foo.bar.com , https://api.foo.bar.com etc.\nHASURA_GRAPHQL_CORS_DOMAIN="https://*.foo.bar.com"\n\n# Accepts from https://app.foo.bar.com:8080 , http://api.foo.bar.com:8080,\n# http://app.localhost, http://api.localhost, http://localhost:3000,\n# http://example.com etc.\nHASURA_GRAPHQL_CORS_DOMAIN="https://*.foo.bar.com:8080, http://*.localhost, http://localhost:3000, http://example.com"\n\n# Accepts from all domain\nHASURA_GRAPHQL_CORS_DOMAIN="*"\n\n# Accepts only from http://example.com\nHASURA_GRAPHQL_CORS_DOMAIN="http://example.com"\n')),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Top-level domains are not considered as part of wildcard domains. You\nhave to add them separately. E.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"https://*.foo.com")," doesn't include\n",(0,o.kt)("inlineCode",{parentName:"p"},"https://foo.com"),"."))),(0,o.kt)("p",null,"You can tell Hasura to disable handling CORS entirely via the\n",(0,o.kt)("inlineCode",{parentName:"p"},"--disable-cors")," flag. Hasura will not respond with CORS headers. You\ncan use this option if you're already handling CORS on a reverse proxy\netc."),(0,o.kt)("h2",{id:"console-assets-on-server"},"Run console offline ",(0,o.kt)("em",{parentName:"h2"},"(i.e load console assets from server instead of CDN)")),(0,o.kt)("p",null,"Normally the static assets (js, css, fonts, img etc.) required by the\nconsole are loaded from a CDN. Starting with ",(0,o.kt)("inlineCode",{parentName:"p"},"v1.0.0-beta.1"),", these\nassets are bundled with the Docker image published by Hasura. These\nfiles can be found at ",(0,o.kt)("inlineCode",{parentName:"p"},"/srv/console-assets"),"."),(0,o.kt)("p",null,"If you're working in an environment with Hasura running locally and have\nno access to internet, you can configure the GraphQL engine to load\nassets from the Docker image itself, instead of the CDN."),(0,o.kt)("p",null,"Set the following env var or flag on the server:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# env var\nHASURA_GRAPHQL_CONSOLE_ASSETS_DIR=/srv/console-assets\n\n# flag\n--console-assets-dir=/srv/console-assets\n")),(0,o.kt)("p",null,"Once the flag is set, all files in the ",(0,o.kt)("inlineCode",{parentName:"p"},"/srv/console-assets")," directory\nof the Docker image will be served at the ",(0,o.kt)("inlineCode",{parentName:"p"},"/console/assets")," endpoint on\nthe server with the right content-type headers."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Hasura follows a rolling update pattern for console releases where\nassets for a ",(0,o.kt)("inlineCode",{parentName:"p"},"major.minor")," version is updated continuously across all\npatches. If you're using the assets on the server with a Docker image,\nit might not be the latest version of the console."))),(0,o.kt)("h2",{id:"dev-mode"},"Dev (debugging) mode"),(0,o.kt)("p",null,"The Hasura GraphQL engine may provide additional information for each\nobject in the ",(0,o.kt)("inlineCode",{parentName:"p"},"extensions")," key of ",(0,o.kt)("inlineCode",{parentName:"p"},"errors"),". The ",(0,o.kt)("inlineCode",{parentName:"p"},"internal")," key contains\nerror information including the generated SQL statement and exception\ninformation from Postgres. This can be highly useful, especially in the\ncase of debugging errors in ",(0,o.kt)("a",{parentName:"p",href:"/graphql-engine/latest/graphql/core/actions/debugging"},"action")," requests."),(0,o.kt)("p",null,"By default the ",(0,o.kt)("inlineCode",{parentName:"p"},"internal")," key is not sent in the ",(0,o.kt)("inlineCode",{parentName:"p"},"extensions")," response\n(except for ",(0,o.kt)("inlineCode",{parentName:"p"},"admin")," roles). To enable this, start the GraphQL engine\nserver in debugging mode with the following configuration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# env var\nHASURA_GRAPHQL_DEV_MODE=true\n\n# flag\n--dev-mode\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"internal")," key is sent for ",(0,o.kt)("inlineCode",{parentName:"p"},"admin")," role requests by default. To\ndisable them, configure as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# env var\nHASURA_GRAPHQL_ADMIN_INTERNAL_ERRORS=false\n\n# flag\n--admin-internal-errors false\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"It is highly recommended to enable debugging only for the ",(0,o.kt)("inlineCode",{parentName:"p"},"admin")," role\nin production."))),(0,o.kt)("h2",{id:"add-metadata-database"},"Add a metadata database"),(0,o.kt)("p",null,"The Hasura GraphQL engine when initialized, creates a schema called\n",(0,o.kt)("inlineCode",{parentName:"p"},"hdb_catalog")," in the Postgres database and initializes a few tables\nunder it. This schema and the internal tables are generally termed as\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata catalogue")," and is responsible to manage the internal state\nof the Hasura GraphQL engine."),(0,o.kt)("p",null,"By default, the ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata_catalogue")," is created inside the primary\ndatabase provided by the user. But sometimes it might be more\nadvantageous to segregate the primary database and the metadata\ndatabase."),(0,o.kt)("p",null,"Hasura GraphQL engine provides a way to the users to provide an entirely\nseparate database to store the ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata catalogue"),"."),(0,o.kt)("p",null,"To add a metadata database, set the following environment variable or\nadd the flag to the server executable"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# env var\nHASURA_GRAPHQL_METADATA_DATABASE_URL=postgres://<user>:<password>@<host>:<port>/<metadata-db-name>\n\n# flag\n--metadata-database-url=postgres://<user>:<password>@<host>:<port>/<metadata-db-name>\n")),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Caveat for Hasura Cloud")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The metadata for Hasura Cloud projects is stored in dedicated metadata\nDBs managed by Hasura Cloud. Hence the\n",(0,o.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_METADATA_DATABASE_URL")," cannot be configured on Hasura\nCloud as its value is controlled by Hasura Cloud itself."))),(0,o.kt)("h3",{id:"possible-configurations"},"Possible configurations:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"1. Both the")," ",(0,o.kt)("inlineCode",{parentName:"p"},"primary database")," ",(0,o.kt)("strong",{parentName:"p"},"and")," ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata database")," ",(0,o.kt)("strong",{parentName:"p"},"are\nprovided to the server")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# env var\nHASURA_GRAPHQL_METADATA_DATABASE_URL=postgres://<user>:<password>@<host>:<port>/<metadata-db-name>\nHASURA_GRAPHQL_DATABASE_URL=postgres://<user>:<password>@<host>:<port>/<db-name>\n\n# flag\n--metadata-database-url=postgres://<user>:<password>@<host>:<port>/<metadata-db-name>\n--database-url=postgres://<user>:<password>@<host>:<port>/<db-name>\n")),(0,o.kt)("p",null,"In this case, Hasura GraphQL engine will use the\n",(0,o.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_METADATA_DATABASE_URL")," to store the ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata catalogue"),"\nand starts the server with the database provided in the\n",(0,o.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_DATABASE_URL"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"2. Only")," ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata database")," ",(0,o.kt)("strong",{parentName:"p"},"is provided to the server")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# env var\nHASURA_GRAPHQL_METADATA_DATABASE_URL=postgres://<user>:<password>@<host>:<port>/<metadata-db-name>\n\n# flag\n--metadata-database-url=postgres://<user>:<password>@<host>:<port>/<metadata-db-name>\n")),(0,o.kt)("p",null,"In this case, Hasura GraphQL engine will use the\n",(0,o.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_METADATA_DATABASE_URL")," to store the ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata catalogue"),"\nand starts the server without tracking/managing any database. ",(0,o.kt)("em",{parentName:"p"},"i.e")," a\nHasura GraphQL server will be started with no database. The user could\nthen manually track/manage databases at a later time."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"3. Only")," ",(0,o.kt)("inlineCode",{parentName:"p"},"primary database")," ",(0,o.kt)("strong",{parentName:"p"},"is provided to the server")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# env var\nHASURA_GRAPHQL_DATABASE_URL=postgres://<user>:<password>@<host>:<port>/<db-name>\n\n# flag\n--database-url=postgres://<user>:<password>@<host>:<port>/<db-name>\n")),(0,o.kt)("p",null,"In this case, Hasura GraphQL engine server will start with the database\nprovided in the ",(0,o.kt)("inlineCode",{parentName:"p"},"HASURA_GRAPHQL_DATABASE_URL")," and will also use the\n",(0,o.kt)("em",{parentName:"p"},"same database")," to store the ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata catalogue"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"4. Neither")," ",(0,o.kt)("inlineCode",{parentName:"p"},"primary database")," ",(0,o.kt)("strong",{parentName:"p"},"nor")," ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata database")," ",(0,o.kt)("strong",{parentName:"p"},"is\nprovided to the server")),(0,o.kt)("p",null,"Hasura GraphQL engine will fail to startup and will throw an error"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Fatal Error: Either of --metadata-database-url or --database-url option expected\n")))}h.isMDXComponent=!0}}]);